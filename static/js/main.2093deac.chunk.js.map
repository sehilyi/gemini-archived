{"version":3,"sources":["editor/editor-panel.tsx","lib/test/gemini/glyph/index.ts","lib/test/gemini/glyph/gene-annotation.ts","lib/test/gemini/glyph/gene-annotation-simple.ts","lib/test/gemini/glyph/glyph-cytogenetic-band.ts","lib/utils/index.ts","lib/gemini.schema.ts","editor/examples.tsx","lib/test/gemini/glyph-examples.ts","lib/test/gemini/layout-examples.ts","lib/models/track.ts","lib/utils/spec-preprocess.ts","lib/visualizations/guidelines.ts","lib/visualizations/glyph-preview.ts","lib/visualizations/glyph.ts","lib/utils/data-process.ts","lib/utils/chrom-size.ts","lib/higlass/higlass-model.ts","lib/utils/contants.ts","lib/higlass/gemini-to-higlass.ts","lib/visualizations/validate.ts","lib/visualizations/link.ts","lib/visualizations/link-validate.ts","lib/visualizations/chart-type.ts","lib/visualizations/line-connection.ts","lib/visualizations/band-connection.ts","lib/visualizations/layout-linear.ts","lib/visualizations/defaults.ts","lib/visualizations/higlass.ts","lib/visualizations/layout.ts","lib/visualizations/layout-circular.ts","lib/utils/bounding-box.ts","editor/editor.tsx","lib/visualizations/layout-preview.ts","serviceWorker.ts","index.tsx"],"names":["EditorPanel","props","templateCode","code","readOnly","editor","useRef","useState","setCode","useEffect","handleWidth","handleHeight","onResize","width","height","current","layout","language","value","theme","options","autoClosingBrackets","autoClosingQuotes","cursorBlinking","folding","lineNumbersMinChars","minimap","enabled","scrollBeyondLastLine","wordWrap","lineNumbers","renderLineHighlight","renderIndentGuides","onChange","e","editorDidMount","monacoEditor","monaco","focus","editorWillMount","GLYPH_PRESETS","name","mark","type","requiredChannels","elements","description","select","channel","oneOf","color","size","bind","domain","range","xe","x","opacity","style","dy","text","dashed","stroke","strokeWidth","GLYPH_LOCAL_PRESET_TYPES","replaceGlyphs","spec","i","tracks","length","track","IsNotEmptyTrack","IsMarkDeep","predefinedGlyph","includes","find","d","IsDataDeep","data","IsGlyphMark","IsHiGlassTrack","url","IsChannelValue","IsChannelBind","IsChannelDeep","demos","server","field","y","geneOrExon","glyphWidth","glyphHeight","exonVersion","exonId","stain","x1","y1","references","direction","wrap","background","chromosome","axis","x1e","TrackModel","channelToField","domains","scales","ranges","this","longElements","forEach","element","push","deepToLongElements","setDomains","c","targetChannel","Array","isArray","map","Object","keys","d3","values","bb","boundingBox","setRanges","datum","scaleChannel","getFieldByChannel","altSize","Math","abs","getEncoding","undefined","renderBackground","svg","w","h","px","py","isGuideline","attr","g","append","renderGlyphPreview","selectAll","remove","WIDTH","HEIGHT","tm","setScales","getElements","markE","filters","transformed_data","filteredData","slice","f","filter","indexOf","transformData","enter","console","warn","renderGlyph","PADDING_X","PADDING_Y","CHROM_SIZE_HG19","chr1","chr2","chr3","chr4","chr5","chr6","chr7","chr8","chr9","chr10","chr11","chr12","chr13","chr14","chr15","chr16","chr17","chr18","chr19","chr20","chr21","chr22","chrX","chrY","chrM","CHROM_RANGE_HG19","reduce","sum","k","TOTAL_CHROM_SIZE_HG19","HiGlassModel","hg","setEditable","setChromInfoPath","trackSourceServers","views","uid","uuid","v1","genomePositionSearchBoxVisible","top","left","center","right","bottom","gallery","whole","initialXDomain","initialYDomain","IsDomainChr","IsDomainInterval","interval","IsDomainChrInterval","chrStart","xDomain","yDomain","getNumericDomain","editable","chromInfoPath","position","widthOrHeight","validate","Ajv","extendRefs","compile","HiGlassSchema","valid","errors","JSON","stringify","COLOR_SCHEME_VIRIDIS","compiler","higlass","split","tilesetUid","isXGenomic","isYGenomic","trackDirection","trackType","setDomain","typeMap","defaultOptions","pointColor","labelPosition","axisPositionHorizontal","barFillColor","lineStrokeColor","colorRange","higlassTrackType","setMainTrack","addTrackSourceServers","chanToPos","channelDef","setAxisTrack","validateSpec","log","SpecValidityModel","validity","msg","isValid","setIsValid","setMsg","getValidity","DEFAULT_LINK_STYLE","fill","LinkChannelToStyleMap","LinkStyleModel","getLinkPosition","xField","x1Field","yField","y1Field","renderBetweenLink","tracksWithBB","tb","definedFields","validateBetweenLinkSpec","xeField","x1eField","yeField","ye","y1eField","y1e","numOfChannelsDefined","key","getChartType","then","styles","f1","f2","xScale","yScale","point","getStyle","renderBetweenLineLink","primaryPointStart","primaryPointEnd","secondaryPointStart","secondaryPointEnd","renderBetweenBandLink","printValidity","renderLinearLayout","gm","setHiGlassInfo","trackInfo","cumX","cumY","trackStyle","hiGlassInfo","viewConfig","renderHiGlass","renderLayout","totalRadius","totalLength","t","angleGap","PI","cumDonutBandWidth","cumLength","donutBandWidth","startAngle","endAngle","arc","innerRadius","outerRadius","renderCircularLayout","calculateSize","INNER_CIRCLE_RADIUS","floor","Editor","glyphSvg","layoutSvg","higlassTrackOptions","setHiGlassTrackOptions","demo","setDemo","editorMode","setEditorMode","setGm","setGlyphWidth","setGlyphHeight","parse","editedGm","renderLayoutPreview","higlassInfo","hglass","useMemo","op","display","bounded","containerPaddingX","containerPaddingY","viewMarginTop","viewMarginBottom","viewMarginLeft","viewMarginRight","viewPaddingTop","viewPaddingBottom","viewPaddingLeft","viewPaddingRight","sizeMode","className","target","defaultValue","defaultSize","debounce","ref","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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CA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,oBACA,oBACA,oBACA,oBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,sBCvPG,SAASC,EAAS3K,EAAqCuD,GAE1D,Id4B4C5C,Ec5BtCiK,EAAU,IAAI1C,EAEpB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","file":"static/js/main.2093deac.chunk.js","sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\nimport MonacoEditor from 'react-monaco-editor';\nimport * as Monaco from 'monaco-editor/esm/vs/editor/editor.api';\nimport ReactResizeDetector from 'react-resize-detector';\n\nconst DEBUG_WITHOUT_DIAGNOSIS = true;\n\nfunction EditorPanel(props: {\n    code: string,\n    readOnly?: boolean,\n    onChange?: (code: string) => void\n}) {\n\n    const { code: templateCode, readOnly } = props;\n    const editor = useRef<Monaco.editor.IStandaloneCodeEditor | null>(null);\n    const [code, setCode] = useState(templateCode);\n\n    useEffect(() => {\n        setCode(templateCode);\n    }, [templateCode]);\n\n    function editorDidMount(monacoEditor: Monaco.editor.IStandaloneCodeEditor, monaco: typeof Monaco) {\n        editor.current = monacoEditor;\n        monacoEditor.focus();\n    }\n\n    function setupDiagnostics() {\n        if (DEBUG_WITHOUT_DIAGNOSIS) return;\n        Monaco.languages.json.jsonDefaults.setDiagnosticsOptions({\n            allowComments: false,\n            enableSchemaRequest: true,\n            validate: true,\n            schemas: [{\n                uri: \"https://raw.githubusercontent.com/higlass/higlass/develop/app/schema.json\",\n                fileMatch: ['*']\n            }]\n        });\n        Monaco.languages.json.jsonDefaults.setModeConfiguration({\n            documentFormattingEdits: false,\n            documentRangeFormattingEdits: false,\n            completionItems: true,\n            hovers: true,\n            documentSymbols: true,\n            tokens: true,\n            colors: true,\n            foldingRanges: true,\n            diagnostics: true,\n        });\n    }\n\n    function onChangeHandle(code: string, e: any) {\n        setCode(code);\n        if (props.onChange) props.onChange(code);\n        // console.log('onChange', code, e);\n\n        setupDiagnostics();\n    }\n\n    function editorWillMount(monaco: typeof Monaco) {\n        setupDiagnostics();\n    }\n\n    return (\n        <>\n            <ReactResizeDetector\n                handleWidth\n                handleHeight\n                onResize={(width: number, height: number) => {\n                    editor?.current?.layout({ width, height });\n                }}\n            ></ReactResizeDetector>\n            <MonacoEditor\n                // Refer to https://github.com/react-monaco-editor/react-monaco-editor\n                language=\"json\"\n                value={code}\n                theme={\"test\"}\n                options={{\n                    autoClosingBrackets: \"never\",\n                    autoClosingQuotes: \"never\",\n                    cursorBlinking: \"smooth\",\n                    folding: true,\n                    lineNumbersMinChars: 4,\n                    minimap: { enabled: false },\n                    scrollBeyondLastLine: false,\n                    wordWrap: \"on\",\n                    lineNumbers: \"off\",\n                    renderLineHighlight: \"line\",\n                    renderIndentGuides: true,\n                    readOnly\n                }}\n                onChange={onChangeHandle}\n                editorDidMount={editorDidMount}\n                editorWillMount={editorWillMount}\n            />\n        </>\n    );\n}\nexport default EditorPanel;","import { Mark } from '../../../gemini.schema'\n\nimport { GLYPH_GENE_ANNOTATAION } from './gene-annotation'\nimport { GLYPH_LOGO } from './logo'\nimport { GLYPH_GENE_ANNOTATAION_V2 } from './gene-annotation-simple'\nimport { GLYPH_CYTOGENETIC_BAND } from './glyph-cytogenetic-band'\n\nexport const GLYPH_PRESETS: {\n    name: GLYPH_LOCAL_PRESET_TYPE,\n    mark: Mark\n}[] = [\n        {\n            name: 'gene-annotation',\n            mark: GLYPH_GENE_ANNOTATAION\n        },\n        {\n            name: 'gene-annotation-simple',\n            mark: GLYPH_GENE_ANNOTATAION_V2\n        },\n        {\n            name: 'cytogenetic-band',\n            mark: GLYPH_CYTOGENETIC_BAND\n        }\n    ]\n\nexport type GLYPH_LOCAL_PRESET_TYPE =\n    | 'gene-annotation-simple'\n    | 'gene-annotation'\n    | 'cytogenetic-band'\n\nexport type GLYPH_HIGLASS_PRESET_TYPE =\n    | 'gene-annotation-higlass'\n\nexport const GLYPH_HIGLASS_PRESET_TYPES: GLYPH_HIGLASS_PRESET_TYPE[] = [\n    'gene-annotation-higlass'\n]\n\nexport const GLYPH_LOCAL_PRESET_TYPES: (GLYPH_LOCAL_PRESET_TYPE | GLYPH_HIGLASS_PRESET_TYPE)[] = [\n    'gene-annotation-simple',\n    'gene-annotation',\n    'cytogenetic-band'\n]","import { MarkGlyph } from '../../../gemini.schema'\n\nexport const GLYPH_GENE_ANNOTATAION: MarkGlyph = {\n    type: 'compositeMark',\n    name: 'gene-annotation',\n    requiredChannels: [\n        'x', 'xe',\n        'y', 'color', // + or - strand?\n        'geneOrExon', // genes or exons?\n        'exonId',\n        'exonVersion' // filtering by\n    ],\n    elements: [\n        {\n            description: 'horizontal line',\n            select: [\n                { channel: 'geneOrExon', oneOf: ['gene'] },\n            ],\n            mark: 'line',\n            color: { value: 'black' },\n            size: { value: 3 }\n        },\n        {\n            description: 'exon',\n            select: [\n                { channel: 'geneOrExon', oneOf: ['exon'] },\n                { channel: 'exonVersion', oneOf: ['2'] }\n            ],\n            mark: 'rect',\n            size: { value: 25 }\n        },\n        {\n            description: 'gene left',\n            select: [\n                { channel: 'geneOrExon', oneOf: ['gene'] },\n            ],\n            mark: {\n                bind: 'y',\n                domain: ['-', '+'],\n                range: ['triangle-l', 'rule']\n            },\n            size: { value: 25 },\n            xe: 'none'\n        },\n        {\n            description: 'gene right',\n            select: [\n                { channel: 'geneOrExon', oneOf: ['gene'] },\n            ],\n            mark: {\n                bind: 'y',\n                domain: ['-', '+'],\n                range: ['rule', 'triangle-r']\n            },\n            size: { value: 25 },\n            x: { bind: 'xe' },\n            xe: 'none'\n        },\n        {\n            mark: 'text',\n            select: [\n                { channel: 'geneOrExon', 'oneOf': ['gene'] }\n            ],\n            opacity: { value: 1 },\n            size: { value: 18 },\n            style: {\n                dy: -20\n            }\n        },\n        {\n            mark: 'text',\n            select: [\n                { channel: 'geneOrExon', oneOf: ['exon'] },\n                { channel: 'exonVersion', oneOf: ['2'] }\n            ],\n            text: { bind: 'exonId' },\n            opacity: { value: 1 },\n            size: { value: 6 },\n            style: {\n                dy: 28\n            }\n        }\n    ]\n}","import { MarkGlyph } from '../../../gemini.schema'\n\nexport const GLYPH_GENE_ANNOTATAION_V2: MarkGlyph = {\n    type: 'compositeMark',\n    name: 'gene-annotation',\n    requiredChannels: [\n        'x', 'xe',\n        'y', 'color', // + or - strand?\n        'geneOrExon' // genes or exons?\n    ],\n    elements: [\n        {\n            description: 'gene range rect',\n            select: [\n                { channel: 'geneOrExon', oneOf: ['gene'] },\n            ],\n            mark: 'rect',\n            size: { value: 25 }\n        },\n        {\n            description: 'gene left',\n            select: [\n                { channel: 'geneOrExon', oneOf: ['gene'] },\n                { channel: 'y', oneOf: ['-'] }\n            ],\n            mark: 'triangle-l',\n            size: { value: 25 },\n            xe: 'none'\n        },\n        {\n            description: 'gene right',\n            select: [\n                { 'channel': 'geneOrExon', oneOf: ['gene'] },\n                { 'channel': 'y', 'oneOf': ['+'] },\n            ],\n            mark: 'triangle-r',\n            size: { value: 25 },\n            'x': { 'bind': 'xe' },\n            'xe': 'none'\n        },\n        {\n            description: 'gene range line',\n            select: [\n                { channel: 'geneOrExon', oneOf: ['gene'] },\n            ],\n            mark: 'line',\n            color: { value: 'gray' },\n            size: { value: 2 },\n            style: {\n                dashed: '3, 3'\n            }\n        },\n        {\n            description: 'gene name',\n            mark: 'text',\n            select: [\n                { channel: 'geneOrExon', oneOf: ['gene'] }\n            ],\n            color: { value: 'black' },\n            opacity: { value: 1 },\n            size: { value: 18 },\n            style: {\n                dy: -20\n            }\n        }\n    ]\n}","import { MarkGlyph } from \"../../../gemini.schema\"\n\nexport const GLYPH_CYTOGENETIC_BAND: MarkGlyph = {\n    \"type\": 'compositeMark',\n    \"name\": \"cytogenetic-band\",\n    \"requiredChannels\": [\n        \"x\", \"xe\", // start, end\n        \"y\", // chr\n        'color', // strain\n        'text', // band\n        'stain' // gneg, gpos, gvar, or acen\n    ],\n    \"elements\": [\n        {\n            \"description\": \"symbols\",\n            \"select\": [{ channel: 'stain', oneOf: ['gneg', 'gpos', 'gvar'] }],\n            \"mark\": \"rect\",\n            \"size\": { \"value\": 25 },\n            style: {\n                stroke: 'black',\n                strokeWidth: 1\n            }\n        },\n        {\n            \"description\": \"acen\",\n            \"select\": [{ channel: 'text', oneOf: ['11', '11.1'] }],\n            \"mark\": { bind: 'text', domain: ['11', '11.1'], range: ['triangle-l', 'triangle-r'] },\n            'color': { value: '#B40101' },\n            \"size\": { \"value\": 25 },\n            style: {\n                stroke: 'black',\n                strokeWidth: 1\n            }\n        },\n        {\n            mark: 'text',\n            select: [{ channel: 'color', oneOf: ['100', '75', '50'] }],\n            color: { value: 'black' },\n            size: { value: 10 },\n            style: {\n                dy: -20\n            }\n        }\n    ]\n}","import Ajv from 'ajv'\nimport uuid from \"uuid\"\nimport { GeminiSpec, Mark, IsNotEmptyTrack, IsMarkDeep } from '../gemini.schema'\nimport { GLYPH_LOCAL_PRESET_TYPES, GLYPH_PRESETS } from \"../test/gemini/glyph\"\n\nexport function replaceGlyphs(spec: GeminiSpec): GeminiSpec {\n    for (let i = 0; i < spec.tracks.length; i++) {\n        const track = spec.tracks[i]\n        if (IsNotEmptyTrack(track) && IsMarkDeep(track.mark)) {\n            const predefinedGlyph = track.mark.type\n            if (GLYPH_LOCAL_PRESET_TYPES.includes(predefinedGlyph as any /* TODO */)) {\n                track.mark = GLYPH_PRESETS.find(d => d.name === predefinedGlyph)?.mark as Mark\n            }\n        }\n    }\n    return spec\n}\n\nexport function generateReadableTrackUid(pre: string | undefined, n: number) {\n    // TODO: Add track type\n\n    // This is to properly update higlass upon editor changes. Ultimately, remove this.\n    // (Refer to https://github.com/sehilyi/gemini/issues/7)\n    const id = uuid.v1()\n    if (pre) return `${pre}-track-${n}-(${id})`\n    else return `track-${n}-${id}`\n}\n\nexport function validTilesetUrl(url: string) {\n    if (\n        !url.includes(\"tileset_info/?d=\")\n        ||\n        (!url.includes(\"https:\") && !url.includes(\"http:\"))\n    ) {\n        return false\n    }\n    return true\n}\n\nexport function parseServerAndTilesetUidFromUrl(url: string) {\n    if (\n        !url.includes(\"tileset_info/?d=\")\n        ||\n        (!url.includes(\"https:\") && !url.includes(\"http:\"))\n    ) {\n        // TODO: Add RE to validate the format.\n        console.warn(\"Data url format is incorrect:\" + url)\n        return { server: undefined, tilesetUid: undefined }\n    }\n\n\n    const server = url.split(\"tileset_info/?d=\")[0]\n    const tilesetUid = url.split(\"tileset_info/?d=\")[1]\n    return { server, tilesetUid }\n}\n\nexport function validateHG(hg: any): boolean {\n\n    const validate = new Ajv({ extendRefs: true }).compile({ /*  */ })\n    const valid = validate(hg)\n\n    if (validate.errors) {\n        console.warn(JSON.stringify(validate.errors, null, 2))\n    }\n\n    // TODO: check types such as default values and locationLocks\n\n    return valid as boolean\n}","// Refer to the following url for dealing with defaults:\n// https://github.com/vega/vega-lite/blob/23fe2b9c6a82551f321ccab751370ca48ae002c9/src/channeldef.ts#L961\n\nimport { GLYPH_LOCAL_PRESET_TYPE, GLYPH_HIGLASS_PRESET_TYPE } from './test/gemini/glyph'\nimport { validTilesetUrl } from './utils'\n\nexport interface GeminiSpec {\n    references?: string[]\n    description?: string\n    layout?: Layout\n    tracks: (Track | GenericType<Channel> | EmptyTrack)[] // TODO: `Track` does not mean anything here because of `GenericType`\n}\n\nexport interface Layout {\n    type: \"linear\" | \"circular\"\n    direction: \"vertical\" | \"horizontal\"\n    wrap?: number\n}\n\nexport interface GenericType<T> {\n    [k: string]: T\n}\n\n/**\n * Tracks\n */\nexport interface DataDeep { url: string, type: 'tileset' | 'csv' }\nexport interface EmptyTrack { }\nexport interface Track {\n    // primitives\n    data: DataDeep | Datum[]\n    mark: Mark\n    // coordinates\n    x?: Channel\n    y?: Channel\n    xe?: Channel\n    ye?: Channel\n    // coordinates for link\n    x1?: Channel\n    y1?: Channel\n    x1e?: Channel\n    y1e?: Channel\n    // others\n    color?: Channel\n    opacity?: Channel\n    size?: Channel\n    text?: Channel\n    w?: Channel\n    h?: Channel\n    // styles\n    width?: number\n    height?: number\n    style?: TrackStyle\n}\n\nexport interface TrackStyle {\n    background?: string\n    stroke?: string\n    strokeWidth?: number\n}\n\n/**\n * Data\n */\nexport interface Datum {\n    [k: string]: number | string\n}\n\n/**\n * Channel\n */\nexport const ChannelTypes = {\n    // coordinates\n    x: 'x',\n    y: 'y',\n    xe: 'xe',\n    ye: 'ye',\n    // coordinates for link\n    x1: 'x1',\n    y1: 'y1',\n    x1e: 'x1e',\n    y1e: 'y1e',\n    // others\n    color: 'color',\n    opacity: 'opacity',\n    size: 'size',\n    text: 'text',\n    w: 'w'\n} as const\n\nexport type ChannelType = keyof typeof ChannelTypes | string\n\nexport type Channel = ChannelDeep | ChannelValue\n\nexport interface ChannelDeep {\n    field?: string\n    type?: 'genomic' | 'nominal' | 'quantitative'\n    aggregate?: Aggregate\n    domain?: Domain\n    range?: string[]\n    axis?: boolean\n}\n\nexport type Domain = string[] | number[] | DomainInterval | DomainChrInterval | DomainChr | DomainGene\nexport interface DomainChr {\n    // For showing a certain chromosome\n    chromosome: string\n}\nexport interface DomainChrInterval {\n    // For showing a certain interval in a chromosome\n    chromosome: string\n    interval: [number, number]\n}\nexport interface DomainInterval {\n    // For showing a certain interval in intire chromosomes\n    interval: [number, number] // This is consistent to HiGlass's initXDomain and initYDomain.\n}\nexport interface DomainGene {\n    // For showing genes\n    // TODO: Not supported yet\n    gene: string | [string, string]\n}\n\nexport interface ChannelValue {\n    value: number | string\n}\n\nexport type Aggregate = 'max' | 'min' | 'mean'\n\n/**\n * Mark\n */\nexport type Mark = MarkType | MarkDeep\n\nexport type MarkType =\n    | 'bar'\n    | 'point'\n    | 'line'\n    | 'link-between'\n    | 'link-within' // uses either x and x1 or y and y1\n    | 'rect'\n    | 'text'\n    | 'rule'\n    | 'triangle-l'\n    | 'triangle-r'\n    | 'dummy'\n\n/**\n * Glyph\n */\nexport type MarkDeep = MarkGlyphPreset | MarkGlyph | MarkWithStyle\n\nexport interface MarkWithStyle {\n    type: MarkType\n    curvature?: 'straight' | 'stepwise' | 'curved'\n}\n\nexport interface MarkGlyphPreset {\n    type: GLYPH_LOCAL_PRESET_TYPE | GLYPH_HIGLASS_PRESET_TYPE\n    server: string // TODO: Not supported yet\n}\n\nexport interface MarkGlyph {\n    type: 'compositeMark'\n    name: string\n    referenceColumn?: string // reference column for selecting data tuples for each glyph\n    requiredChannels: ChannelType[] // channels that must be assigned // TODO: What about optional channels?\n    elements: GlyphElement[]\n}\n\nexport interface GlyphElement {\n    // primitives\n    description?: string\n    select?: { channel: ChannelType, oneOf: string[] }[]\n    mark: MarkType | MarkBind\n    // coordinates\n    x?: ChannelBind | ChannelValue | 'none'\n    y?: ChannelBind | ChannelValue | 'none'\n    xe?: ChannelBind | ChannelValue | 'none'\n    ye?: ChannelBind | ChannelValue | 'none'\n    // coordinates for link\n    x1?: ChannelBind | ChannelValue | 'none'\n    y1?: ChannelBind | ChannelValue | 'none'\n    x1e?: ChannelBind | ChannelValue | 'none'\n    y1e?: ChannelBind | ChannelValue | 'none'\n    // others\n    color?: ChannelBind | ChannelValue | 'none'\n    size?: ChannelBind | ChannelValue | 'none'\n    w?: ChannelBind | ChannelValue | 'none'\n    opacity?: ChannelBind | ChannelValue | 'none'\n    text?: ChannelBind | ChannelValue | 'none'\n    style?: MarkStyle\n}\n\nexport interface MarkStyle {\n    dashed?: string\n    dy?: number\n    stroke?: string\n    strokeWidth?: number\n    background?: string\n}\n\nexport interface MarkBind {\n    bind: string\n    domain: string[]\n    range: MarkType[]\n}\n\nexport interface ChannelBind {\n    bind: ChannelType\n    aggregate?: Aggregate\n}\n\nexport interface AnyGlyphChannels {\n    // Allow defining any kinds of chennels for binding data in Glyph\n    [key: string]: ChannelBind | ChannelValue\n}\n\n/**\n * Consistency\n */\ninterface Consistency {\n    /**\n     * `true` and `false` correspond to 'shared' and 'independent', respectively.\n     */\n    // List of `uniqueName` of `view` or `track` or indexes appear in the specification.\n    targets: string[] | number[]\n    // Default: The first element of `targets`.\n    reference?: string\n    color?: 'shared' | 'independent' | 'distinct' | true | false\n    x?: 'shared' | 'independent' | true | false\n    y?: 'shared' | 'independent' | true | false\n    zoomScale?: 'shared' | 'independent' | true | false\n    zoomCenter?: 'shared' | 'independent' | true | false\n}\n\n/**\n * Type Checks\n */\nexport function IsDataDeep(data:\n    | DataDeep\n    | Datum[]\n    /* remove the two types below */\n    | ChannelDeep\n    | ChannelValue\n): data is DataDeep {\n    return typeof data === 'object'\n}\n\nexport function IsDomainFlat(domain: Domain): domain is string[] | number[] {\n    return Array.isArray(domain)\n}\n\nexport function IsDomainChr(domain: Domain): domain is DomainChr {\n    return 'chromosome' in domain && !('interval' in domain)\n}\n\nexport function IsDomainInterval(domain: Domain): domain is DomainInterval {\n    return !('chromosome' in domain) && 'interval' in domain\n}\n\nexport function IsDomainChrInterval(domain: Domain): domain is DomainChrInterval {\n    return 'chromosome' in domain && 'interval' in domain\n}\n\nexport function IsDomainGene(domain: Domain): domain is DomainGene {\n    return 'gene' in domain\n}\n\nexport function IsNotEmptyTrack(\n    track:\n        | Track\n        | GenericType<Channel>\n        | EmptyTrack\n): track is Track | GenericType<Channel> {\n    return track !== {}\n}\n\nexport function IsTrackStyle(track: TrackStyle | undefined): track is TrackStyle {\n    return track !== undefined\n}\n\nexport function IsShallowMark(mark: any /* TODO */): mark is MarkType {\n    return typeof mark !== 'object'\n}\n\nexport function IsMarkDeep(mark: any /* TODO */): mark is MarkDeep {\n    return typeof mark === 'object'\n}\n\nexport function IsGlyphMark(mark: any /* TODO */): mark is MarkGlyph {\n    return typeof mark === 'object' && mark.type === 'compositeMark'\n}\n\nexport function IsHiGlassTrack(track: Track | GenericType<Channel>) {\n    return (\n        (\n            typeof track.mark === 'object' &&\n            IsGlyphMark(track.mark) &&\n            track.mark.type !== 'compositeMark'\n        ) ||\n        (IsDataDeep(track.data) && validTilesetUrl(track.data.url))\n    )\n}\n\nexport function IsChannelValue(\n    channel:\n        | ChannelDeep\n        | ChannelValue\n        | ChannelBind\n        | undefined\n        | 'none'\n): channel is ChannelValue {\n    return channel !== null && typeof channel === 'object' && 'value' in channel\n}\n\nexport function IsChannelBind(\n    channel:\n        | ChannelDeep\n        | ChannelValue\n        | ChannelBind\n        | undefined\n        | 'none'\n): channel is ChannelBind {\n    return channel !== null && typeof channel === 'object' && 'bind' in channel\n}\n\nexport function IsChannelDeep(\n    channel:\n        | ChannelDeep\n        | ChannelValue\n        | undefined\n): channel is ChannelDeep {\n    return typeof channel === 'object' && !('value' in channel)\n}","import { GeminiSpec } from \"../lib/gemini.schema\";\nimport {\n    GENE_ANNOTATION_PLOT,\n    GENE_ANNOTATION_PLOT_SIMPLE,\n    CYTOGENETIC_BAND\n} from \"../lib/test/gemini/glyph-examples\";\nimport {\n    LAYOUT_EXAMPLE_COMBO_HORIZONTAL,\n    LAYOUT_EXAMPLE_LINK,\n    LAYOUT_EXAMPLE_COMBO,\n    LAYOUT_EXAMPLE_COMBO_BAND,\n    LAYOUT_EXAMPLE_STACKED_MULTI_TRACKS,\n    LAYOUT_EXAMPLE_STACKED_MULTI_TRACKS_CIRCULAR\n} from \"../lib/test/gemini/layout-examples\";\n\ninterface Demo {\n    name: string,\n    spec: GeminiSpec,\n    glyphWidth: number,\n    glyphHeight: number\n}\n\nexport const demos: ReadonlyArray<Demo> = [\n    {\n        name: \"Gene Annotation Plot (Simple)\",\n        spec: GENE_ANNOTATION_PLOT_SIMPLE,\n        glyphWidth: 300,\n        glyphHeight: 150\n    },\n    {\n        name: \"Gene Annotation Plot\",\n        spec: GENE_ANNOTATION_PLOT,\n        glyphWidth: 600,\n        glyphHeight: 150\n    },\n    {\n        name: \"Cytogenetic Band\",\n        spec: CYTOGENETIC_BAND,\n        glyphWidth: 900,\n        glyphHeight: 150\n    },\n    {\n        name: \"Six Different Between-Links\",\n        spec: LAYOUT_EXAMPLE_LINK,\n        glyphWidth: 0,\n        glyphHeight: 0\n    },\n    {\n        name: \"Between-Links (Combo)\",\n        spec: LAYOUT_EXAMPLE_COMBO,\n        glyphWidth: 0,\n        glyphHeight: 0\n    },\n    {\n        name: \"Between-Links (Combo, Horizontal)\",\n        spec: LAYOUT_EXAMPLE_COMBO_HORIZONTAL,\n        glyphWidth: 0,\n        glyphHeight: 0\n    },\n    {\n        name: \"Stacked Multiple Tracks\",\n        spec: LAYOUT_EXAMPLE_STACKED_MULTI_TRACKS,\n        glyphWidth: 0,\n        glyphHeight: 0\n    },\n    {\n        name: \"Stacked Multiple Tracks (Circular)\",\n        spec: LAYOUT_EXAMPLE_STACKED_MULTI_TRACKS_CIRCULAR,\n        glyphWidth: 0,\n        glyphHeight: 0\n    },\n    {\n        name: \"Between-Bands (HiGlass Tracks)\",\n        spec: LAYOUT_EXAMPLE_COMBO_BAND,\n        glyphWidth: 0,\n        glyphHeight: 0\n    },\n] as const;","import { GeminiSpec } from \"../../gemini.schema\"\n\nexport const GENE_ANNOTATION_PLOT_SIMPLE: GeminiSpec = {\n    tracks: [\n        {\n            data: { url: \"https://raw.githubusercontent.com/sehilyi/gemini-datasets/master/data/Homo_sapiens.GRCh38.92.glyph.csv\", type: 'csv' },\n            mark: { server: \"gemini.v1\", type: \"gene-annotation-simple\" },\n            x: { field: \"start\", type: \"genomic\" },\n            xe: { field: \"end\", type: \"genomic\" },\n            y: { field: \"strand\", type: \"nominal\" },\n            text: { field: \"gene_name\", type: \"nominal\" },\n            geneOrExon: { field: \"feature\", type: \"nominal\" },\n            color: { value: \"#D1D28D\" },\n            opacity: { value: 0.7 },\n        }\n    ]\n}\n\nexport const GENE_ANNOTATION_PLOT: GeminiSpec = {\n    tracks: [\n        {\n            data: { url: \"https://raw.githubusercontent.com/sehilyi/gemini-datasets/master/data/Homo_sapiens.GRCh38.92.glyph.csv\", type: 'csv' },\n            mark: { server: \"gemini.v1\", type: \"gene-annotation\" },\n            x: { field: \"start\", type: \"genomic\" },\n            xe: { field: \"end\", type: \"genomic\" },\n            y: { field: \"strand\", type: \"nominal\" },\n            text: { field: \"gene_name\", type: \"nominal\" },\n            color: { field: \"strand\", type: \"nominal\" },\n            exonVersion: { field: \"exon_version\", type: \"nominal\" },\n            geneOrExon: { field: \"feature\", type: \"nominal\" },\n            exonId: { field: \"exon_id\", type: \"nominal\" },\n            opacity: { value: 0.9 }\n        }\n    ]\n}\n\nexport const CYTOGENETIC_BAND: GeminiSpec = {\n    tracks: [\n        {\n            data: { url: 'https://raw.githubusercontent.com/sehilyi/gemini-datasets/master/data/chr1_cytogenetic_band.glyph.csv', type: 'csv' },\n            mark: { server: 'gemini.v1', type: 'cytogenetic-band' },\n            x: { field: 'Basepair_start', type: 'genomic' },\n            xe: { field: 'Basepair_stop', type: 'genomic' },\n            y: { field: 'Chr.', type: 'nominal' },\n            text: { field: 'Band', type: 'nominal' },\n            stain: { field: 'Stain', type: 'nominal' },\n            color: { field: 'Density', type: 'nominal', domain: ['', '25', '50', '75', '100'], range: ['white', '#D9D9D9', '#979797', '#636363', 'black'] }\n        }\n    ]\n}","import { GeminiSpec } from \"../../gemini.schema\";\n\nexport const LAYOUT_EXAMPLE_LINK: GeminiSpec = {\n    tracks: [\n        {\n            data: { url: 'https://raw.githubusercontent.com/sehilyi/gemini-datasets/master/data/potint-to-point-relation.csv', type: 'csv' },\n            mark: 'link-between',\n            x: { field: 'from', type: \"nominal\" },\n            y: { field: 'to', type: \"nominal\" },\n            width: 50, height: 50\n        },\n        {\n            data: { url: 'https://raw.githubusercontent.com/sehilyi/gemini-datasets/master/data/potint-to-point-relation.csv', type: 'csv' },\n            mark: 'link-between',\n            x1: { field: 'from', type: \"nominal\" },\n            y: { field: 'to', type: \"nominal\" },\n            width: 50, height: 50\n        },\n        {\n            data: { url: 'https://raw.githubusercontent.com/sehilyi/gemini-datasets/master/data/potint-to-point-relation.csv', type: 'csv' },\n            mark: 'link-between',\n            x1: { field: 'from', type: \"nominal\" },\n            y1: { field: 'to', type: \"nominal\" },\n            width: 50, height: 50\n        },\n        {\n            data: { url: 'https://raw.githubusercontent.com/sehilyi/gemini-datasets/master/data/potint-to-point-relation.csv', type: 'csv' },\n            mark: 'link-between',\n            x: { field: 'from', type: \"nominal\" },\n            y1: { field: 'to', type: \"nominal\" },\n            width: 50, height: 50\n        },\n        {\n            data: { url: 'https://raw.githubusercontent.com/sehilyi/gemini-datasets/master/data/potint-to-point-relation.csv', type: 'csv' },\n            mark: 'link-between',\n            x: { field: 'from', type: \"nominal\" },\n            x1: { field: 'to', type: \"nominal\" },\n            width: 50, height: 50\n        },\n        {\n            data: { url: 'https://raw.githubusercontent.com/sehilyi/gemini-datasets/master/data/potint-to-point-relation.csv', type: 'csv' },\n            mark: 'link-between',\n            y: { field: 'from', type: \"nominal\" },\n            y1: { field: 'to', type: \"nominal\" },\n            width: 50, height: 50\n        },\n    ]\n}\n\nexport const LAYOUT_EXAMPLE_COMBO: GeminiSpec = {\n    references: [\n        \"http://genocat.tools/tools/combo.html\",\n        \"http://genocat.tools/tools/gbrowse_syn.html\",\n        \"http://genocat.tools/tools/ggbio.html\",\n        \"http://genocat.tools/tools/give.html\",\n        \"http://genocat.tools/tools/variant_view.html\"\n    ],\n    tracks: [\n        {\n            data: { url: 'dummy', type: 'csv' }, mark: 'dummy',\n            width: 600, height: 50\n        },\n        {\n            data: { url: 'https://raw.githubusercontent.com/sehilyi/gemini-datasets/master/data/potint-to-point-relation.csv', type: 'csv' },\n            mark: 'link-between',\n            x1: { field: 'from', type: \"nominal\" },\n            x: { field: 'to', type: \"nominal\" },\n            width: 600, height: 50\n        },\n        {\n            data: { url: 'dummy', type: 'csv' }, mark: 'dummy',\n            width: 600, height: 50\n        }\n    ]\n}\n\nexport const LAYOUT_EXAMPLE_COMBO_HORIZONTAL: GeminiSpec = {\n    layout: { type: 'linear', direction: 'horizontal' },\n    tracks: [\n        {\n            data: { url: 'dummy', type: 'csv' }, mark: 'dummy',\n            width: 60, height: 500\n        },\n        {\n            data: { url: 'https://raw.githubusercontent.com/sehilyi/gemini-datasets/master/data/potint-to-point-relation.csv', type: 'csv' },\n            mark: 'link-between',\n            y: { field: 'from', type: \"nominal\" },\n            y1: { field: 'to', type: \"nominal\" },\n            width: 60, height: 500\n        },\n        {\n            data: { url: 'dummy', type: 'csv' }, mark: 'dummy',\n            width: 60, height: 500\n        }\n    ]\n}\n\nexport const LAYOUT_EXAMPLE_COMBO_BAND: GeminiSpec = {\n    references: [\n        \"http://genocat.tools/tools/combo.html\",\n        \"http://genocat.tools/tools/gbrowse_syn.html\",\n        \"http://genocat.tools/tools/ggbio.html\",\n        \"http://genocat.tools/tools/give.html\",\n        \"http://genocat.tools/tools/variant_view.html\"\n    ],\n    tracks: [\n        {\n            data: { url: 'https://resgen.io/api/v1/tileset_info/?d=a-iBpdh3Q_uO2FLCWKpOOw', type: 'tileset' },\n            mark: 'rect',\n            x: { type: 'genomic', domain: { chromosome: '9' } },\n            width: 600, height: 60\n        },\n        {\n            data: { url: 'https://resgen.io/api/v1/tileset_info/?d=a-iBpdh3Q_uO2FLCWKpOOw', type: 'tileset' },\n            mark: 'line',\n            x: { type: 'genomic' },\n            width: 600, height: 60\n        },\n        {\n            data: { url: 'https://higlass.io/api/v1/tileset_info/?d=OHJakQICQD6gTD7skx4EWA', type: 'tileset' },\n            mark: {\n                type: 'gene-annotation-higlass',\n                server: 'gemini-v1'\n            },\n            x: { type: 'genomic', axis: true, domain: { chromosome: '12' } },\n            width: 600, height: 120\n        },\n        {\n            data: { url: 'https://raw.githubusercontent.com/sehilyi/gemini-datasets/master/data/range-to-range-relation.csv', type: 'csv' },\n            mark: 'link-between',\n            x1: { field: 'from' },\n            x1e: { field: 'from1' },\n            x: { field: 'to' },\n            xe: { field: 'to1' },\n            width: 600, height: 150,\n            stroke: { value: 'none' }\n        },\n        {\n            data: { url: 'https://higlass.io/api/v1/tileset_info/?d=OHJakQICQD6gTD7skx4EWA', type: 'tileset' },\n            mark: {\n                type: 'gene-annotation-higlass',\n                server: 'gemini-v1'\n            },\n            x: { type: 'genomic' },\n            x1: { axis: true },\n            width: 600, height: 120\n        },\n        {\n            data: { url: 'https://resgen.io/api/v1/tileset_info/?d=a-iBpdh3Q_uO2FLCWKpOOw', type: 'tileset' },\n            mark: 'bar',\n            x: { type: 'genomic' },\n            width: 600, height: 60\n        },\n        {\n            data: { url: 'https://resgen.io/api/v1/tileset_info/?d=a-iBpdh3Q_uO2FLCWKpOOw', type: 'tileset' },\n            mark: 'point',\n            x: { type: 'genomic' },\n            width: 600, height: 60\n        },\n    ]\n}\n\nexport const LAYOUT_EXAMPLE_STACKED_MULTI_TRACKS: GeminiSpec = {\n    layout: { type: 'linear', direction: 'horizontal', wrap: 2 },\n    tracks: [\n        { data: { url: 'dummy', type: 'csv' }, mark: 'dummy', width: 350, height: 30, style: { background: '#FAF9F7' }, },\n        { data: { url: 'dummy', type: 'csv' }, mark: 'dummy', width: 350, height: 30 },\n        { data: { url: 'dummy', type: 'csv' }, mark: 'dummy', width: 350, height: 30, style: { background: '#FAF9F7' } },\n        { data: { url: 'dummy', type: 'csv' }, mark: 'dummy', width: 350, height: 30 },\n        { data: { url: 'dummy', type: 'csv' }, mark: 'dummy', width: 350, height: 30, style: { background: '#FAF9F7' } },\n        { data: { url: 'dummy', type: 'csv' }, mark: 'dummy', width: 350, height: 30 },\n    ]\n}\n\nexport const LAYOUT_EXAMPLE_STACKED_MULTI_TRACKS_CIRCULAR: GeminiSpec = {\n    layout: { type: 'circular', direction: 'horizontal', wrap: 2 },\n    tracks: [\n        { data: { url: 'dummy', type: 'csv' }, mark: 'dummy', width: 500, height: 30, style: { background: '#FAF9F7' } },\n        { data: { url: 'dummy', type: 'csv' }, mark: 'dummy', width: 500, height: 30 },\n        { data: { url: 'dummy', type: 'csv' }, mark: 'dummy', width: 500, height: 30, style: { background: '#FAF9F7' } },\n        { data: { url: 'dummy', type: 'csv' }, mark: 'dummy', width: 500, height: 30 },\n        { data: { url: 'dummy', type: 'csv' }, mark: 'dummy', width: 500, height: 30, style: { background: '#FAF9F7' } },\n        { data: { url: 'dummy', type: 'csv' }, mark: 'dummy', width: 500, height: 30 },\n    ]\n}","import { Track, Channel, MarkType, GenericType, IsGlyphMark, IsChannelValue, ChannelTypes, ChannelBind, MarkGlyph, IsChannelDeep, ChannelDeep, Datum, ChannelType, GlyphElement, IsChannelBind, IsDomainFlat } from \"../gemini.schema\"\nimport { deepToLongElements } from \"../utils/spec-preprocess\"\nimport * as d3 from \"d3\"\nimport { BoundingBox } from \"../utils/bounding-box\"\n\nexport class TrackModel {\n    private track: Track | GenericType<Channel>\n    private channelToField: { [k: string]: string }\n    private domains: { [channel: string]: (string | number)[] }\n    private scales: { [channel: string]: d3.ScaleLinear<any, any> | d3.ScaleOrdinal<any, any> | d3.ScaleSequential<any> }\n    private ranges: { [channel: string]: number[] | string[] }\n    constructor(track: Track | GenericType<Channel>) {\n        this.track = track\n        this.domains = {}\n        this.channelToField = {}\n        this.scales = {}\n        this.ranges = {}\n\n        /**\n         * Validate\n         */\n        // TODO: Check if required channels are specified.\n        // ...\n\n        /**\n         * Default\n         */\n        if (IsGlyphMark(this.track.mark)) {\n            this.track.mark.elements = deepToLongElements(this.track.mark.elements)\n        }\n        // TODO: Add binds for not-specified channels.\n\n        /**\n         * Prepare Rendering\n         */\n        this.setDomains()\n    }\n    public getTrack() {\n        return this.track\n    }\n\n    public getElements() {\n        if (IsGlyphMark(this.track.mark)) {\n            return this.track.mark.elements\n        }\n        return []\n    }\n\n    public getFieldByChannel(field: string) {\n        return this.channelToField[field]\n    }\n\n    private setDomains() {\n        const data = this.track.data as Datum[]\n\n        if (IsGlyphMark(this.track.mark)) {\n            const { requiredChannels: required } = this.track.mark\n\n            // Add channel-to-domain mappings when `field` suggested.\n            required.forEach(c => {\n                const channel = (this.track as GenericType<Channel>)[c]\n                if (IsChannelDeep(channel)) {\n                    const { field } = channel\n\n                    if (!field) return\n\n                    this.channelToField[c] = field\n\n                    // Domains for x1 and y1 needs to be added to that of x and y, respectively.\n                    const targetChannel = c === 'xe' ? 'x' : c === 'ye' ? 'y' : c\n\n                    if (!this.domains[targetChannel]) {\n                        this.domains[targetChannel] = []\n                    }\n                    this.domains[targetChannel] = [\n                        ...this.domains[targetChannel],\n                        ...(channel.domain && IsDomainFlat(channel.domain)\n                            ? channel.domain : data.map(d => d[field]))\n                    ]\n                }\n            })\n            Object.keys(this.domains).forEach(c => {\n                const channel = (this.track as GenericType<Channel>)[c]\n                if (IsChannelDeep(channel)) {\n                    const { type } = channel\n                    this.domains[c] = type === \"nominal\"\n                        ? d3.set(this.domains[c]).values()\n                        : d3.extent(this.domains[c].map(d => +d)) as [number, number]\n                }\n            })\n        }\n    }\n\n    private setRanges(bb: BoundingBox) {\n        Object.keys(this.domains).forEach(c => {\n            const channel = (this.track as GenericType<Channel>)[c]\n            if (IsChannelDeep(channel)) {\n                if (c === 'x') {\n                    this.ranges['x'] = [bb.x, bb.x + bb.width]\n                } else if (c === 'y') {\n                    this.ranges['y'] = [bb.y, bb.y + bb.height]\n                } else if (c === 'color') {\n                    this.ranges['color'] = channel.range ? channel.range : d3.schemeTableau10 as string[]\n                } else {\n                    // TODO: Support specifying `range` and `domain`.\n                    // ...\n                }\n            }\n        })\n    }\n\n    public setScales(boundingBox: BoundingBox) {\n        this.setRanges(boundingBox)\n        Object.keys(this.domains).forEach(c => {\n            const channel = (this.track as GenericType<Channel>)[c]\n            if (IsChannelDeep(channel)) {\n                const { type } = channel\n                if (this.ranges[c]) {\n                    // TODO: Simplify the below\n                    this.scales[c] = c === 'color' && type === 'nominal'\n                        ? d3.scaleOrdinal()\n                            .domain(this.domains[c] as string[])\n                            .range(this.ranges[c])\n                        : c === 'color' && type === 'quantitative'\n                            ? d3.scaleSequential(d3.interpolateBrBG)\n                                .domain(this.domains[c] as [number, number])\n                            : type === \"nominal\"\n                                ? d3.scaleOrdinal()\n                                    .domain(this.domains[c] as string[])\n                                    .range(this.ranges[c])\n                                : d3.scaleLinear()\n                                    .domain(this.domains[c] as [number, number])\n                                    .range(this.ranges[c] as [number, number])\n                }\n            }\n        })\n    }\n\n    public getEncoding(\n        element: GlyphElement /* TODO: Remove this */,\n        c: keyof typeof ChannelTypes,\n        datum: Datum,\n        mark?: MarkType\n    ): any {\n        // TODO: Move out\n        const DEFAULT_ENCODING: { [k: string]: number | string } = {\n            'opacity': 1,\n            'size': 10,\n            'color': 'black',\n            'text': ''\n        }\n        ////\n\n        const scaleChannel = c === 'xe' ? 'x' : c === 'ye' ? 'y' : c\n\n        if (IsChannelValue(element[c])) {\n            switch (c) {\n                case 'size':\n                case 'opacity':\n                case 'color':\n                case 'text':\n                    return (element[c] as any).value\n            }\n        }\n        else if (IsChannelValue(this.track[c])) {\n            switch (c) {\n                case 'size':\n                case 'opacity':\n                case 'color':\n                case 'text':\n                    return (this.track[c] as any).value\n            }\n        }\n        else if (this.scales[scaleChannel]) {\n            const field = IsChannelBind(element[c])\n                ? this.getFieldByChannel((element[c] as ChannelBind).bind)\n                : this.getFieldByChannel(c)\n            return this.scales[scaleChannel](datum[field] as any)\n        } else if (c === 'text') {\n            const field = IsChannelBind(element.text)\n                ? this.getFieldByChannel(element.text.bind)\n                : IsChannelDeep(this.track.text)\n                    ? this.track.text.field\n                    : undefined\n            if (field) {\n                return datum[field]\n            }\n        }\n        else if (c === 'w') {\n            if (this.scales['x'] && IsChannelDeep(this.track.x) && IsChannelDeep(this.track.xe) && element.x !== 'none' && element.xe !== 'none') {\n                const altSize = Math.abs((datum[this.getFieldByChannel('xe')] as number) - (datum[this.getFieldByChannel('x')] as number))\n                return this.scales['x'](altSize)\n            } else {\n                return this.getEncoding(element, 'size', datum)\n            }\n        }\n        else {\n            // If not specified, use default value.\n            return DEFAULT_ENCODING[c]\n        }\n    }\n\n    public getScale(c: ChannelType | string) {\n        return this.scales[c]\n    }\n}","import { GlyphElement } from \"../gemini.schema\";\n\n/**\n * Domains and ranges in conditional marks are moved into `select` option for the compiling simplicity.\n * @param elements \n */\nexport function deepToLongElements(elements: GlyphElement[]) {\n    const longElements: GlyphElement[] = [];\n    elements.forEach(element => {\n        if (typeof element.mark === \"object\") {\n            const { bind } = element.mark;\n            for (let i = 0; i < element.mark.domain.length; i++) {\n                const domain = element.mark.domain[i];\n                const range = element.mark.range[i];\n                const select = element.select ? element.select : [];\n                longElements.push({\n                    ...element,\n                    mark: range,\n                    select: [\n                        ...select,\n                        { channel: bind, oneOf: [domain] }\n                    ]\n                });\n            }\n        } else {\n            longElements.push(element);\n        }\n    });\n    return longElements;\n}","import * as d3 from 'd3'\n\nexport function renderBackground(\n    svg: SVGGElement,\n    w: number,\n    h: number,\n    px: number,\n    py: number,\n    isGuideline: boolean = true\n) {\n    d3.select(svg)\n        .attr(\"width\", w)\n        .attr(\"height\", h);\n    const g = d3.select(svg).append(\"g\");\n    g.append(\"rect\")\n        .attr(\"width\", w)\n        .attr(\"height\", h)\n        .attr(\"stroke\", \"lightgray\")\n        .attr(\"fill\", \"white\");\n    if (!isGuideline) return;\n    g.append(\"line\")\n        .attr(\"x1\", 0)\n        .attr(\"x2\", w)\n        .attr(\"y1\", py)\n        .attr(\"y2\", py)\n        .attr(\"class\", \"preview-guideline\");\n    g.append(\"line\")\n        .attr(\"x1\", 0)\n        .attr(\"x2\", w)\n        .attr(\"y1\", h - py)\n        .attr(\"y2\", h - py)\n        .attr(\"class\", \"preview-guideline\");\n    g.append(\"line\")\n        .attr(\"x1\", px)\n        .attr(\"x2\", px)\n        .attr(\"y1\", 0)\n        .attr(\"y2\", h)\n        .attr(\"class\", \"preview-guideline\");\n    g.append(\"line\")\n        .attr(\"x1\", w - px)\n        .attr(\"x2\", w - px)\n        .attr(\"y1\", 0)\n        .attr(\"y2\", h)\n        .attr(\"class\", \"preview-guideline\");\n    g.append(\"line\")\n        .attr(\"x1\", 0)\n        .attr(\"x2\", w)\n        .attr(\"y1\", h / 2)\n        .attr(\"y2\", h / 2)\n        .attr(\"class\", \"preview-guideline\");\n    g.append(\"line\")\n        .attr(\"x1\", w / 2)\n        .attr(\"x2\", w / 2)\n        .attr(\"y1\", 0)\n        .attr(\"y2\", h)\n        .attr(\"class\", \"preview-guideline\");\n}","import { Track, GenericType, Channel } from \"../gemini.schema\"\nimport * as d3 from \"d3\"\nimport { renderGlyph } from \"./glyph\"\nimport { renderBackground } from \"./guidelines\"\n\nexport function renderGlyphPreview(\n    svg: SVGSVGElement,\n    track: Track | GenericType<Channel>,\n    width: number,\n    height: number\n) {\n    if (!svg || !track) return\n    d3.select(svg).selectAll(\"*\").remove()\n\n    // Styles\n    const WIDTH = width, HEIGHT = height, PADDING_X = 60, PADDING_Y = 30\n\n    // BG and Guidelines\n    renderBackground(svg, WIDTH, HEIGHT, PADDING_X, PADDING_Y)\n\n    const innerG = d3.select(svg).append(\"g\")\n        .attr(\"width\", WIDTH - PADDING_X * 2)\n        .attr(\"height\", HEIGHT - PADDING_Y * 2)\n        .attr(\"transform\", `translate(${PADDING_X},${PADDING_Y})`)\n\n    // TODO: Select a subset of data tuples for a single glyph.\n    // ...\n\n    // TODO: Should data be aggregated when specified? (e.g., x: {..., aggregate: \"mean\"})\n    // ...\n\n    renderGlyph(\n        innerG,\n        track,\n        { x: 0, width: WIDTH - PADDING_X * 2, y: 0, height: HEIGHT - PADDING_Y * 2 }\n    )\n}","import * as d3 from \"d3\";\nimport { Track, Datum, GenericType, Channel, IsGlyphMark } from \"../gemini.schema\";\nimport { transformData, FilterSpec } from \"../utils/data-process\";\nimport { TrackModel } from \"../models/track\";\nimport { BoundingBox } from \"../utils/bounding-box\";\n\nexport function renderGlyph(\n    g: d3.Selection<SVGGElement, any, any, any>,\n    track: Track | GenericType<Channel>,\n    bb: BoundingBox\n) {\n    const tm = new TrackModel(track);\n    tm.setScales({\n        ...bb,\n        // TODO: Cheating here!\n        y: bb.y + bb.height / 2.0\n    });\n\n    // checks\n    const data = track.data as Datum[];\n    if (!data) {\n        console.warn(\"No array of a JSON object suggested.\");\n        return;\n    }\n\n    if (!IsGlyphMark(track.mark)) {\n        console.warn(\"Glyph is not defined.\");\n        return;\n    }\n    /////////////\n\n    // TODO: Add title using `name`\n    // ...\n\n    // Render each element\n    tm.getElements().forEach(element => {\n        const { select, mark: markE, } = element;\n\n        // Select\n        const filters: FilterSpec[] = [];\n        select?.forEach(d => {\n            const { channel, oneOf } = d;\n            if (tm.getFieldByChannel(channel)) {\n                filters.push({ field: tm.getFieldByChannel(channel), oneOf });\n            }\n        });\n\n        // Render glyph\n        const transformed_data = transformData(data, filters);\n        // TODO: Aggregation\n        if (markE === \"line\") {\n            g.selectAll()\n                .data(transformed_data)\n                .enter()\n                .append('line')\n                .attr('x1', d => tm.getEncoding(element, 'x', d))\n                .attr('x2', d => tm.getEncoding(element, 'xe', d))\n                .attr('y1', d => tm.getEncoding(element, 'y', d))\n                .attr('y2', d => tm.getEncoding(element, 'y', d))\n                .attr('stroke', d => tm.getEncoding(element, 'color', d))\n                .attr('stroke-width', d => tm.getEncoding(element, 'size', d))\n                .attr('opacity', d => tm.getEncoding(element, 'opacity', d))\n                .style('stroke-dasharray', (element.style?.dashed ?? ''))\n        } else if (markE === 'point') {\n            g.selectAll('point')\n                .data(transformed_data)\n                .enter()\n                .append('circle')\n                .attr('fill', d => tm.getEncoding(element, 'color', d))\n                .attr('cx', d => tm.getEncoding(element, 'x', d))\n                .attr('cy', d => tm.getEncoding(element, 'x', d))\n                .attr('r', 15)\n                .attr('opacity', d => tm.getEncoding(element, 'opacity', d))\n        } else if (markE === \"rect\") {\n            g.selectAll()\n                .data(transformed_data)\n                .enter()\n                .append('rect')\n                .attr('x', d => tm.getEncoding(element, 'x', d))\n                .attr('y', d => tm.getEncoding(element, 'y', d) - tm.getEncoding(element, 'size', d) / 2.0)\n                .attr('width', d => tm.getEncoding(element, 'xe', d) - tm.getEncoding(element, 'x', d))\n                .attr('height', d => tm.getEncoding(element, 'size', d))\n                .attr('fill', d => tm.getEncoding(element, 'color', d))\n                .attr('opacity', d => tm.getEncoding(element, 'opacity', d))\n                .attr('stroke', element.style?.stroke ?? '')\n                .attr('stroke-width', element.style?.strokeWidth ?? '')\n        } else if (markE === 'text') {\n            g.selectAll()\n                .data(transformed_data)\n                .enter()\n                .append('text')\n                .text(d => tm.getEncoding(element, 'text', d))\n                .attr('x', d => (tm.getEncoding(element, 'x', d) + tm.getEncoding(element, 'xe', d)) / 2.0)\n                .attr('y', d => tm.getEncoding(element, 'y', d) + element.style?.dy)\n                .attr('fill', d => tm.getEncoding(element, 'color', d))\n                .attr('font-size', d => tm.getEncoding(element, 'size', d))\n                .attr('alignment-baseline', \"top\")\n                .attr('text-anchor', \"middle\")\n                .attr('opacity', d => tm.getEncoding(element, 'opacity', d))\n        } else if (markE === 'rule') {\n            g.selectAll('rule')\n                .data(transformed_data)\n                .enter()\n                .append('line')\n                .attr('x1', d => tm.getEncoding(element, 'x', d))\n                .attr('x2', d => tm.getEncoding(element, 'x', d))\n                .attr('y1', d => tm.getEncoding(element, 'x', d) - tm.getEncoding(element, 'size', d) / 2.0)\n                .attr('y2', d => tm.getEncoding(element, 'x', d) - tm.getEncoding(element, 'size', d) / 2.0)\n                .attr('stroke', d => tm.getEncoding(element, 'color', d))\n                .attr('stroke-width', 3)\n                .attr('opacity', d => tm.getEncoding(element, 'opacity', d))\n        } else if (markE === 'triangle-r') {\n            g.selectAll('trangle-r')\n                .data(transformed_data)\n                .enter()\n                .append('path')\n                .attr('d', d => {\n                    const h = tm.getEncoding(element, 'size', d);\n                    const w = tm.getEncoding(element, 'w', d);\n                    const x = tm.getEncoding(element, 'x', d);\n                    const y = tm.getEncoding(element, 'y', d);\n                    return `M${x + w} ${y}`\n                        + `L${x} ${y + h / 2.0}`\n                        + `L${x} ${y - h / 2.0} Z`;\n                })\n                .attr('fill', d => tm.getEncoding(element, 'color', d))\n                .attr('opacity', d => tm.getEncoding(element, 'opacity', d))\n                .attr('stroke', element.style?.stroke ?? '')\n                .attr('stroke-width', element.style?.strokeWidth ?? '')\n        } else if (markE === 'triangle-l') {\n            g.selectAll('trangle-l')\n                .data(transformed_data)\n                .enter()\n                .append('path')\n                .attr('d', d => {\n                    const h = tm.getEncoding(element, 'size', d);\n                    const w = tm.getEncoding(element, 'w', d);\n                    const x = tm.getEncoding(element, 'x', d);\n                    const y = tm.getEncoding(element, 'y', d);\n                    return `M${x} ${y}`\n                        + `L${x + w} ${y + h / 2.0}`\n                        + `L${x + w} ${y - h / 2.0} Z`;\n                })\n                .attr('fill', d => tm.getEncoding(element, 'color', d))\n                .attr('opacity', d => tm.getEncoding(element, 'opacity', d))\n                .attr('stroke', element.style?.stroke ?? '')\n                .attr('stroke-width', element.style?.strokeWidth ?? '')\n        }\n    });\n}","import { Datum } from \"../gemini.schema\";\n\nexport interface FilterSpec {\n    field: string;\n    oneOf: string[];\n}\n\nexport function transformData(data: Datum[], filters: FilterSpec[]) {\n    let filteredData = data.slice();\n    filters.forEach(f => {\n        filteredData = filteredData.filter(d => f.oneOf.indexOf(d[f.field] as string) !== -1);\n    });\n    return filteredData;\n}","export const CHROM_SIZE_HG19: { [k: string]: number } = {\n    chr1: 249250621,\n    chr2: 243199373,\n    chr3: 198022430,\n    chr4: 191154276,\n    chr5: 180915260,\n    chr6: 171115067,\n    chr7: 159138663,\n    chr8: 146364022,\n    chr9: 141213431,\n    chr10: 135534747,\n    chr11: 135006516,\n    chr12: 133851895,\n    chr13: 115169878,\n    chr14: 107349540,\n    chr15: 102531392,\n    chr16: 90354753,\n    chr17: 81195210,\n    chr18: 78077248,\n    chr19: 59128983,\n    chr20: 63025520,\n    chr21: 48129895,\n    chr22: 51304566,\n    chrX: 155270560,\n    chrY: 59373566,\n    chrM: 16571\n}\n\n// chromosome ranges\nexport const CHROM_RANGE_HG19: { [k: string]: [number, number] } = {}\n\nObject.keys(CHROM_SIZE_HG19).reduce((sum, k) => {\n    CHROM_RANGE_HG19[k] = [sum, sum + CHROM_SIZE_HG19[k]]\n    return sum + CHROM_SIZE_HG19[k]\n}, 0)\n\nexport const TOTAL_CHROM_SIZE_HG19 = Object.values(CHROM_SIZE_HG19).reduce((sum, current) => sum + current, 0);","import Ajv from 'ajv'\nimport uuid from \"uuid\"\nimport { HiGlassSpec, Track } from \"./higlass.schema\"\nimport HiGlassSchema from \"./higlass.schema.json\"\nimport { TOTAL_CHROM_SIZE_HG19, CHROM_RANGE_HG19 } from '../utils/chrom-size'\nimport { Domain, IsDomainChr, IsDomainInterval, IsDomainChrInterval, IsDomainGene } from '../gemini.schema'\n\nconst DEFAULT_CHROMOSOME_INFO_PATH = '//s3.amazonaws.com/pkerp/data/hg19/chromSizes.tsv'\n\n/**\n * Model for managing HiGlass spec.\n * (We are only using one center track with additional tracks for axes in a single view)\n */\nexport class HiGlassModel {\n    private hg: HiGlassSpec\n    constructor() {\n        this.hg = {}\n\n        // Add default specs.\n        this.setEditable(false)\n        this.setChromInfoPath(DEFAULT_CHROMOSOME_INFO_PATH)\n        this.hg.trackSourceServers = []\n        this.hg.views = [{\n            uid: uuid.v1(),\n            genomePositionSearchBoxVisible: false,\n            layout: { w: 12, h: 12, x: 0, y: 0 },\n            tracks: {\n                top: [],\n                left: [],\n                center: [],\n                right: [],\n                bottom: [],\n                gallery: [],\n                whole: []\n            },\n            initialXDomain: [0, TOTAL_CHROM_SIZE_HG19],\n            initialYDomain: [0, TOTAL_CHROM_SIZE_HG19]\n        }]\n    }\n\n    public spec(): Readonly<HiGlassSpec> {\n        return this.hg\n    }\n\n    private getNumericDomain(domain: Domain) {\n        if (IsDomainChr(domain)) {\n            return CHROM_RANGE_HG19[`chr${domain.chromosome}`]\n        }\n        else if (IsDomainInterval(domain)) {\n            return domain.interval\n        }\n        else if (IsDomainChrInterval(domain)) {\n            const chrStart = CHROM_RANGE_HG19[`chr${domain.chromosome}`][0]\n            const [start, end] = domain.interval\n            return [\n                chrStart + start,\n                chrStart + end\n            ]\n\n        } else if (IsDomainGene(domain)) {\n            // TODO: Not supported yet\n        }\n    }\n    public setDomain(\n        xDomain: Domain | undefined,\n        yDomain: Domain | undefined\n    ) {\n        if (xDomain && this.hg.views?.[0]) {\n            this.hg.views[0].initialXDomain = this.getNumericDomain(xDomain)\n        }\n        if (yDomain && this.hg.views?.[0]) {\n            this.hg.views[0].initialYDomain = this.getNumericDomain(yDomain)\n        }\n    }\n\n    private setEditable(editable: boolean | undefined) {\n        this.hg.editable = editable\n        return this\n    }\n\n    private setChromInfoPath(chromInfoPath: string | undefined) {\n        this.hg.chromInfoPath = chromInfoPath\n        return this\n    }\n\n    public addTrackSourceServers(trackSourceServers: string | undefined) {\n        if (trackSourceServers && this.hg.trackSourceServers?.indexOf(trackSourceServers) === -1)\n            this.hg.trackSourceServers?.push(trackSourceServers)\n        return this\n    }\n\n    public setMainTrack(track: Track) {\n        if (!this.hg.views) return this\n        this.hg.views[0].tracks.center = [track]\n        return this\n    }\n\n    public setAxisTrack(position: 'left' | 'right' | 'top' | 'bottom') {\n        if (!this.hg.views) return this\n        const baseTrackType = '-chromosome-labels'\n        const direction = position === 'left' || position === 'right' ? 'vertical' : 'horizontal'\n        const widthOrHeight = direction === 'vertical' ? 'width' : 'height'\n        this.hg.views[0].tracks[position] = [{\n            uid: uuid.v1(),\n            type: (direction + baseTrackType) as any /* TODO */,\n            [widthOrHeight]: 20,\n            chromInfoPath: this.hg.chromInfoPath\n        }]\n        return this\n    }\n\n    public validateSpec() {\n        const validate = new Ajv({ extendRefs: true }).compile(HiGlassSchema)\n        const valid = validate(this.spec())\n\n        if (validate.errors) {\n            console.warn(JSON.stringify(validate.errors, null, 2))\n        }\n\n        return valid as boolean\n    }\n} ","export const COLOR_SCHEME_VIRIDIS = [\n    \"rgba(68,1,84,1)\",\n    \"rgba(68,2,85,1)\",\n    \"rgba(69,3,87,1)\",\n    \"rgba(69,5,88,1)\",\n    \"rgba(69,6,90,1)\",\n    \"rgba(70,8,91,1)\",\n    \"rgba(70,9,93,1)\",\n    \"rgba(70,11,94,1)\",\n    \"rgba(70,12,96,1)\",\n    \"rgba(71,14,97,1)\",\n    \"rgba(71,15,98,1)\",\n    \"rgba(71,17,100,1)\",\n    \"rgba(71,18,101,1)\",\n    \"rgba(71,20,102,1)\",\n    \"rgba(72,21,104,1)\",\n    \"rgba(72,22,105,1)\",\n    \"rgba(72,24,106,1)\",\n    \"rgba(72,25,108,1)\",\n    \"rgba(72,26,109,1)\",\n    \"rgba(72,28,110,1)\",\n    \"rgba(72,29,111,1)\",\n    \"rgba(72,30,112,1)\",\n    \"rgba(72,32,113,1)\",\n    \"rgba(72,33,115,1)\",\n    \"rgba(72,34,116,1)\",\n    \"rgba(72,36,117,1)\",\n    \"rgba(72,37,118,1)\",\n    \"rgba(72,38,119,1)\",\n    \"rgba(72,39,120,1)\",\n    \"rgba(71,41,121,1)\",\n    \"rgba(71,42,121,1)\",\n    \"rgba(71,43,122,1)\",\n    \"rgba(71,44,123,1)\",\n    \"rgba(71,46,124,1)\",\n    \"rgba(70,47,125,1)\",\n    \"rgba(70,48,126,1)\",\n    \"rgba(70,49,126,1)\",\n    \"rgba(70,51,127,1)\",\n    \"rgba(69,52,128,1)\",\n    \"rgba(69,53,129,1)\",\n    \"rgba(69,54,129,1)\",\n    \"rgba(68,56,130,1)\",\n    \"rgba(68,57,131,1)\",\n    \"rgba(68,58,131,1)\",\n    \"rgba(67,59,132,1)\",\n    \"rgba(67,60,132,1)\",\n    \"rgba(67,62,133,1)\",\n    \"rgba(66,63,133,1)\",\n    \"rgba(66,64,134,1)\",\n    \"rgba(65,65,134,1)\",\n    \"rgba(65,66,135,1)\",\n    \"rgba(65,67,135,1)\",\n    \"rgba(64,69,136,1)\",\n    \"rgba(64,70,136,1)\",\n    \"rgba(63,71,136,1)\",\n    \"rgba(63,72,137,1)\",\n    \"rgba(62,73,137,1)\",\n    \"rgba(62,74,137,1)\",\n    \"rgba(61,75,138,1)\",\n    \"rgba(61,77,138,1)\",\n    \"rgba(60,78,138,1)\",\n    \"rgba(60,79,138,1)\",\n    \"rgba(59,80,139,1)\",\n    \"rgba(59,81,139,1)\",\n    \"rgba(58,82,139,1)\",\n    \"rgba(58,83,139,1)\",\n    \"rgba(57,84,140,1)\",\n    \"rgba(57,85,140,1)\",\n    \"rgba(56,86,140,1)\",\n    \"rgba(56,87,140,1)\",\n    \"rgba(55,88,140,1)\",\n    \"rgba(55,89,140,1)\",\n    \"rgba(54,91,141,1)\",\n    \"rgba(54,92,141,1)\",\n    \"rgba(53,93,141,1)\",\n    \"rgba(53,94,141,1)\",\n    \"rgba(52,95,141,1)\",\n    \"rgba(52,96,141,1)\",\n    \"rgba(51,97,141,1)\",\n    \"rgba(51,98,141,1)\",\n    \"rgba(51,99,141,1)\",\n    \"rgba(50,100,142,1)\",\n    \"rgba(50,101,142,1)\",\n    \"rgba(49,102,142,1)\",\n    \"rgba(49,103,142,1)\",\n    \"rgba(48,104,142,1)\",\n    \"rgba(48,105,142,1)\",\n    \"rgba(47,106,142,1)\",\n    \"rgba(47,107,142,1)\",\n    \"rgba(47,108,142,1)\",\n    \"rgba(46,109,142,1)\",\n    \"rgba(46,110,142,1)\",\n    \"rgba(45,111,142,1)\",\n    \"rgba(45,112,142,1)\",\n    \"rgba(45,112,142,1)\",\n    \"rgba(44,113,142,1)\",\n    \"rgba(44,114,142,1)\",\n    \"rgba(43,115,142,1)\",\n    \"rgba(43,116,142,1)\",\n    \"rgba(43,117,142,1)\",\n    \"rgba(42,118,142,1)\",\n    \"rgba(42,119,142,1)\",\n    \"rgba(41,120,142,1)\",\n    \"rgba(41,121,142,1)\",\n    \"rgba(41,122,142,1)\",\n    \"rgba(40,123,142,1)\",\n    \"rgba(40,124,142,1)\",\n    \"rgba(40,125,142,1)\",\n    \"rgba(39,126,142,1)\",\n    \"rgba(39,127,142,1)\",\n    \"rgba(38,128,142,1)\",\n    \"rgba(38,129,142,1)\",\n    \"rgba(38,130,142,1)\",\n    \"rgba(37,131,142,1)\",\n    \"rgba(37,131,142,1)\",\n    \"rgba(37,132,142,1)\",\n    \"rgba(36,133,142,1)\",\n    \"rgba(36,134,142,1)\",\n    \"rgba(35,135,142,1)\",\n    \"rgba(35,136,142,1)\",\n    \"rgba(35,137,142,1)\",\n    \"rgba(34,138,141,1)\",\n    \"rgba(34,139,141,1)\",\n    \"rgba(34,140,141,1)\",\n    \"rgba(33,141,141,1)\",\n    \"rgba(33,142,141,1)\",\n    \"rgba(33,143,141,1)\",\n    \"rgba(32,144,141,1)\",\n    \"rgba(32,145,140,1)\",\n    \"rgba(32,146,140,1)\",\n    \"rgba(32,147,140,1)\",\n    \"rgba(31,147,140,1)\",\n    \"rgba(31,148,140,1)\",\n    \"rgba(31,149,139,1)\",\n    \"rgba(31,150,139,1)\",\n    \"rgba(31,151,139,1)\",\n    \"rgba(30,152,139,1)\",\n    \"rgba(30,153,138,1)\",\n    \"rgba(30,154,138,1)\",\n    \"rgba(30,155,138,1)\",\n    \"rgba(30,156,137,1)\",\n    \"rgba(30,157,137,1)\",\n    \"rgba(30,158,137,1)\",\n    \"rgba(30,159,136,1)\",\n    \"rgba(30,160,136,1)\",\n    \"rgba(31,161,136,1)\",\n    \"rgba(31,162,135,1)\",\n    \"rgba(31,163,135,1)\",\n    \"rgba(31,163,134,1)\",\n    \"rgba(32,164,134,1)\",\n    \"rgba(32,165,134,1)\",\n    \"rgba(33,166,133,1)\",\n    \"rgba(33,167,133,1)\",\n    \"rgba(34,168,132,1)\",\n    \"rgba(35,169,131,1)\",\n    \"rgba(35,170,131,1)\",\n    \"rgba(36,171,130,1)\",\n    \"rgba(37,172,130,1)\",\n    \"rgba(38,173,129,1)\",\n    \"rgba(39,174,129,1)\",\n    \"rgba(40,175,128,1)\",\n    \"rgba(41,175,127,1)\",\n    \"rgba(42,176,127,1)\",\n    \"rgba(43,177,126,1)\",\n    \"rgba(44,178,125,1)\",\n    \"rgba(46,179,124,1)\",\n    \"rgba(47,180,124,1)\",\n    \"rgba(48,181,123,1)\",\n    \"rgba(50,182,122,1)\",\n    \"rgba(51,183,121,1)\",\n    \"rgba(53,183,121,1)\",\n    \"rgba(54,184,120,1)\",\n    \"rgba(56,185,119,1)\",\n    \"rgba(57,186,118,1)\",\n    \"rgba(59,187,117,1)\",\n    \"rgba(61,188,116,1)\",\n    \"rgba(62,189,115,1)\",\n    \"rgba(64,190,114,1)\",\n    \"rgba(66,190,113,1)\",\n    \"rgba(68,191,112,1)\",\n    \"rgba(70,192,111,1)\",\n    \"rgba(72,193,110,1)\",\n    \"rgba(73,194,109,1)\",\n    \"rgba(75,194,108,1)\",\n    \"rgba(77,195,107,1)\",\n    \"rgba(79,196,106,1)\",\n    \"rgba(81,197,105,1)\",\n    \"rgba(83,198,104,1)\",\n    \"rgba(85,198,102,1)\",\n    \"rgba(88,199,101,1)\",\n    \"rgba(90,200,100,1)\",\n    \"rgba(92,201,99,1)\",\n    \"rgba(94,201,98,1)\",\n    \"rgba(96,202,96,1)\",\n    \"rgba(98,203,95,1)\",\n    \"rgba(101,204,94,1)\",\n    \"rgba(103,204,92,1)\",\n    \"rgba(105,205,91,1)\",\n    \"rgba(108,206,90,1)\",\n    \"rgba(110,206,88,1)\",\n    \"rgba(112,207,87,1)\",\n    \"rgba(115,208,85,1)\",\n    \"rgba(117,208,84,1)\",\n    \"rgba(119,209,82,1)\",\n    \"rgba(122,210,81,1)\",\n    \"rgba(124,210,79,1)\",\n    \"rgba(127,211,78,1)\",\n    \"rgba(129,212,76,1)\",\n    \"rgba(132,212,75,1)\",\n    \"rgba(134,213,73,1)\",\n    \"rgba(137,213,72,1)\",\n    \"rgba(139,214,70,1)\",\n    \"rgba(142,215,68,1)\",\n    \"rgba(144,215,67,1)\",\n    \"rgba(147,216,65,1)\",\n    \"rgba(149,216,63,1)\",\n    \"rgba(152,217,62,1)\",\n    \"rgba(155,217,60,1)\",\n    \"rgba(157,218,58,1)\",\n    \"rgba(160,218,57,1)\",\n    \"rgba(163,219,55,1)\",\n    \"rgba(165,219,53,1)\",\n    \"rgba(168,220,51,1)\",\n    \"rgba(171,220,50,1)\",\n    \"rgba(173,221,48,1)\",\n    \"rgba(176,221,46,1)\",\n    \"rgba(179,221,45,1)\",\n    \"rgba(181,222,43,1)\",\n    \"rgba(184,222,41,1)\",\n    \"rgba(187,223,39,1)\",\n    \"rgba(189,223,38,1)\",\n    \"rgba(192,223,36,1)\",\n    \"rgba(195,224,35,1)\",\n    \"rgba(197,224,33,1)\",\n    \"rgba(200,225,32,1)\",\n    \"rgba(203,225,30,1)\",\n    \"rgba(205,225,29,1)\",\n    \"rgba(208,226,28,1)\",\n    \"rgba(211,226,27,1)\",\n    \"rgba(213,226,26,1)\",\n    \"rgba(216,227,25,1)\",\n    \"rgba(219,227,24,1)\",\n    \"rgba(221,227,24,1)\",\n    \"rgba(224,228,24,1)\",\n    \"rgba(226,228,24,1)\",\n    \"rgba(229,228,24,1)\",\n    \"rgba(232,229,25,1)\",\n    \"rgba(234,229,25,1)\",\n    \"rgba(237,229,26,1)\",\n    \"rgba(239,230,27,1)\",\n    \"rgba(242,230,28,1)\",\n    \"rgba(244,230,30,1)\",\n    \"rgba(247,230,31,1)\",\n    \"rgba(249,231,33,1)\",\n    \"rgba(251,231,35,1)\",\n    \"rgba(254,231,36,1)\"\n]","import Ajv from 'ajv'\nimport HiGlassSchema from \"./higlass.schema.json\"\nimport { HiGlassSpec, EnumTrackType } from \"./higlass.schema\"\nimport { HiGlassModel } from './higlass-model'\nimport { parseServerAndTilesetUidFromUrl, validTilesetUrl } from '../utils'\nimport { GenericType, Track, Channel, IsDataDeep, IsHiGlassTrack, IsChannelDeep, IsShallowMark, IsMarkDeep, Domain } from '../gemini.schema'\nimport { BoundingBox } from '../utils/bounding-box'\nimport { COLOR_SCHEME_VIRIDIS } from '../utils/contants'\n\nexport function compiler(track: Track | GenericType<Channel>, bb: BoundingBox): HiGlassSpec {\n\n    const higlass = new HiGlassModel()\n\n    if (IsHiGlassTrack(track) && IsDataDeep(track.data)) {\n        const { server, tilesetUid } = parseServerAndTilesetUidFromUrl(track.data.url)\n\n        // Is this track horizontal or vertical?\n        const isXGenomic = IsChannelDeep(track.x) && track.x.type === \"genomic\"\n        const isYGenomic = IsChannelDeep(track.y) && track.y.type === \"genomic\"\n        const xDomain = isXGenomic && IsChannelDeep(track.x) ? track.x.domain as Domain : undefined\n        const yDomain = isYGenomic && IsChannelDeep(track.y) ? track.y.domain as Domain : undefined\n        const trackDirection = isXGenomic && isYGenomic ? 'both' : isXGenomic ? 'horizontal' : 'vertical'\n        const trackType = IsShallowMark(track.mark) ? track.mark : IsMarkDeep(track.mark) ? track.mark.type : 'unknown'\n\n        higlass.setDomain(xDomain, yDomain)\n\n        const typeMap: { [k: string]: EnumTrackType } = {\n            'gene-annotation-higlass': `${trackDirection}-gene-annotations`,\n            'point': `${trackDirection}-point`,\n            'bar': `${trackDirection}-bar`,\n            'line': `${trackDirection}-line`,\n            'rect': `${trackDirection}-1d-heatmap`,\n            // ...\n        } as { [k: string]: EnumTrackType }\n\n        const defaultOptions: { [k: string]: Object } = {\n            'point': {\n                pointColor: '#0072B2',\n                labelPosition: 'hidden',\n                axisPositionHorizontal: 'left'\n            },\n            'bar': {\n                barFillColor: '#0072B2',\n                labelPosition: 'hidden',\n                axisPositionHorizontal: 'left'\n            },\n            'line': {\n                lineStrokeColor: '#0072B2',\n                labelPosition: 'hidden',\n                axisPositionHorizontal: 'left'\n            },\n            'rect': {\n                colorRange: COLOR_SCHEME_VIRIDIS,\n                labelPosition: 'hidden'\n            }\n\n        }\n        const higlassTrackType = typeMap[trackType]\n        if (!higlassTrackType) return {}\n\n        higlass.setMainTrack({\n            type: higlassTrackType,\n            server: server,\n            tilesetUid: tilesetUid,\n            width: bb.width,\n            height: bb.height, // TODO: consider the height of axes\n            options: defaultOptions[trackType]\n        }).addTrackSourceServers(server)\n\n        const chanToPos: { [k: string]: 'left' | 'right' | 'top' | 'bottom' } = {\n            x: 'bottom',\n            x1: 'top',\n            y: 'left',\n            y1: 'right'\n        }\n        Object.keys(chanToPos).forEach(c => {\n            const channelDef = (track as GenericType<Channel>)[c]\n            if (IsChannelDeep(channelDef) && channelDef.axis) {\n                higlass.setAxisTrack(chanToPos[c])\n            }\n        })\n\n        higlass.validateSpec()\n\n        console.log('HiGlass viewConfig:', higlass.spec())\n\n        return higlass.spec()\n    }\n    return {}\n}\n\nexport function validateHG(hg: HiGlassSpec): boolean {\n\n    const validate = new Ajv({ extendRefs: true }).compile(HiGlassSchema)\n    const valid = validate(hg)\n\n    if (validate.errors) {\n        console.warn(JSON.stringify(validate.errors, null, 2))\n    }\n\n    // TODO: Check types such as default values and locationLocks\n\n    return valid as boolean\n} ","export interface SpecValidity {\n    msg: string\n    isValid: boolean\n}\n\nexport class SpecValidityModel {\n    private validity: SpecValidity\n    constructor(valid?: boolean) {\n        this.validity = {\n            msg: \"No message\",\n            isValid: valid ? valid : false\n        }\n    }\n    public getValidity() {\n        return this.validity;\n    }\n    public isValid() {\n        return this.validity.isValid;\n    }\n    public setMsg(msg: string) {\n        this.validity.msg = msg;\n        return this;\n    }\n    public setIsValid(isValid: boolean) {\n        this.validity.isValid = isValid;\n        return this;\n    }\n    public setValidity(validity: SpecValidity) {\n        this.setIsValid(validity.isValid);\n        this.setMsg(validity.msg);\n        return this;\n    }\n    public printValidity() {\n        if (!this.getValidity().isValid) {\n            console.warn(this.validity.msg);\n        } else {\n            console.log(this.validity.msg);\n        }\n    }\n}","import { BoundingBox } from \"../utils/bounding-box\"\nimport { Track, GenericType, Channel, IsChannelDeep, Datum, IsChannelValue, IsDataDeep } from \"../gemini.schema\"\nimport * as d3 from 'd3'\nimport { validateBetweenLinkSpec } from \"./link-validate\"\nimport { getChartType } from \"./chart-type\"\nimport { renderBetweenLineLink } from \"./line-connection\"\nimport { renderBetweenBandLink } from \"./band-connection\"\n\nexport type LinkPosition =\n    | 'left-bottom'\n    | 'left-top'\n    | 'left-right'\n    | 'top-right'\n    | 'top-bottom'\n    | 'right-bottom'\n    | 'unknown'\n\nexport interface LinkStyle { // TODO: Extend general styles.\n    fill?: string\n    stroke?: string\n    strokeWidth?: number\n    opacity?: number\n}\n\nexport const DEFAULT_LINK_STYLE: Required<LinkStyle> = {\n    fill: 'lightgray',\n    stroke: 'gray',\n    strokeWidth: 1,\n    opacity: 0.7\n} as const\n\nexport const LinkChannelToStyleMap: { [k: string]: keyof typeof DEFAULT_LINK_STYLE } = {\n    color: 'fill',\n    stroke: 'stroke',\n    strokeWidth: 'strokeWidth',\n    opacity: 'opacity'\n}\n\nexport class LinkStyleModel {\n    private style: Required<LinkStyle>\n    constructor(track: Track | GenericType<Channel>) {\n        this.style = { ...DEFAULT_LINK_STYLE }\n        // Fill styles using spec.\n        Object.keys(LinkChannelToStyleMap).forEach(c => {\n            const channel = (track as GenericType<Channel>)[c]\n            if (IsChannelValue(channel)) {\n                (this.style[LinkChannelToStyleMap[c]] as any /* TODO: remove `any` */) = channel.value\n            }\n        })\n    }\n    public getStyle() {\n        return this.style\n    }\n}\n\nexport function getLinkPosition(track: Track | GenericType<Channel>): LinkPosition {\n    const xField = IsChannelDeep(track.x) ? track.x.field : undefined\n    const x1Field = IsChannelDeep(track.x1) ? track.x1.field : undefined\n    const yField = IsChannelDeep(track.y) ? track.y.field : undefined\n    const y1Field = IsChannelDeep(track.y1) ? track.y1.field : undefined\n\n    if (xField && yField) return 'left-bottom'\n    else if (x1Field && yField) return 'left-top'\n    else if (x1Field && y1Field) return 'top-right'\n    else if (xField && y1Field) return 'right-bottom'\n    else if (xField && x1Field) return 'top-bottom'\n    else if (yField && y1Field) return 'left-right'\n    else return 'unknown'\n}\n\nexport function renderBetweenLink(\n    g: d3.Selection<SVGGElement, any, any, any>,\n    tracksWithBB: { boundingBox: BoundingBox, track: Track | GenericType<Channel> }[]\n) {\n    tracksWithBB.forEach(tb => {\n        // validate\n        const valid = validateBetweenLinkSpec(tb.track)\n        if (!valid.isValid()) {\n            valid.printValidity()\n            return\n        }\n        // render\n        switch (getChartType(tb.track)) {\n            case 'line-connection':\n                if (IsDataDeep(tb.track.data)) {\n                    d3.csv(tb.track.data.url).then(data =>\n                        renderBetweenLineLink(g, { ...tb.track, data } as Track, tb.boundingBox)\n                    )\n                }\n                break\n            case 'band-connection':\n                if (IsDataDeep(tb.track.data)) {\n                    d3.csv(tb.track.data.url).then(data =>\n                        renderBetweenBandLink(g, { ...tb.track, data } as Track, tb.boundingBox)\n                    )\n                }\n                break\n            default:\n                break\n        }\n    })\n}","import { Track, GenericType, Channel, IsChannelDeep } from \"../gemini.schema\";\nimport { SpecValidityModel } from \"./validate\";\n\nexport function validateBetweenLinkSpec(track: Track | GenericType<Channel>) {\n    const validity = new SpecValidityModel(true);\n\n    const xField = IsChannelDeep(track.x) ? track.x.field : undefined;\n    const x1Field = IsChannelDeep(track.x1) ? track.x1.field : undefined;\n    const yField = IsChannelDeep(track.y) ? track.y.field : undefined;\n    const y1Field = IsChannelDeep(track.y1) ? track.y1.field : undefined;\n\n    const definedFields = [xField, x1Field, yField, y1Field].filter(d => d);\n\n    if (definedFields.length < 2) {\n        validity.setMsg('Less than two fields are specified for a `link-between` mark.');\n        validity.setIsValid(false);\n    }\n    else if (definedFields.length > 2) {\n        validity.setMsg('More than two fields are specified for a `link-between` mark.');\n    }\n    return validity;\n}","import { Track, GenericType, Channel, IsChannelDeep } from \"../gemini.schema\";\n\nexport type ChartType =\n    // ...\n    | 'line-connection'\n    | 'band-connection'\n    | 'unknown'\n\nexport function getChartType(track: Track | GenericType<Channel>): ChartType {\n\n    type PrimitiveChannel = 'x' | 'xe' | 'y' | 'ye';\n\n    const xField = IsChannelDeep(track.x) ? track.x.field : undefined;\n    const xeField = IsChannelDeep(track.xe) ? track.xe.field : undefined;\n    const x1Field = IsChannelDeep(track.x1) ? track.x1.field : undefined;\n    const x1eField = IsChannelDeep(track.x1e) ? track.x1e.field : undefined;\n    const yField = IsChannelDeep(track.y) ? track.y.field : undefined;\n    const yeField = IsChannelDeep(track.ye) ? track.ye.field : undefined;\n    const y1Field = IsChannelDeep(track.y1) ? track.y1.field : undefined;\n    const y1eField = IsChannelDeep(track.y1e) ? track.y1e.field : undefined;\n\n    const numOfChannelsDefined: { [k in PrimitiveChannel]: number } = {\n        x: [xField, xeField].filter(d => d).length,\n        xe: [x1Field, x1eField].filter(d => d).length,\n        y: [yField, yeField].filter(d => d).length,\n        ye: [y1Field, y1eField].filter(d => d).length\n    }\n\n    if (track.mark === 'link-between') {\n        const numPairOfChannelsDefined = Object.keys(numOfChannelsDefined).map(\n            key => numOfChannelsDefined[key as PrimitiveChannel]\n        ).filter(d => d >= 2).length;\n        if (numPairOfChannelsDefined >= 2) {\n            return 'band-connection';\n        } else {\n            return 'line-connection';\n        }\n    }\n    return 'unknown';\n}","import { BoundingBox } from \"../utils/bounding-box\";\nimport { Track, GenericType, Channel, IsChannelDeep, Datum } from \"../gemini.schema\";\nimport * as d3 from 'd3'\nimport { getLinkPosition, LinkStyleModel } from \"./link\";\n\nexport function renderBetweenLineLink(\n    g: d3.Selection<SVGGElement, any, any, any>,\n    track: Track | GenericType<Channel>,\n    bb: BoundingBox\n) {\n    const styles = new LinkStyleModel(track);\n\n    const xField = IsChannelDeep(track.x) ? track.x.field : undefined;\n    const x1Field = IsChannelDeep(track.x1) ? track.x1.field : undefined;\n    const yField = IsChannelDeep(track.y) ? track.y.field : undefined;\n    const y1Field = IsChannelDeep(track.y1) ? track.y1.field : undefined;\n\n    const [f1, f2] = [xField, x1Field, yField, y1Field].filter(d => d);\n\n    const xScale = d3.scaleLinear<number, number>()\n        .domain([0, 99]) // TODO: Support data-driven domain.\n        .range([bb.x, bb.x + bb.width])\n    const yScale = d3.scaleLinear<number, number>()\n        .domain([0, 99])\n        .range([bb.y, bb.y + bb.height])\n\n    // calculate position of points\n    const point: {\n        x: (d: Datum) => number,\n        y: (d: Datum) => number,\n    }[] = [];\n\n    const position = getLinkPosition(track);\n    if (position.includes('left')) {\n        point.push({\n            x: () => bb.x,\n            y: (d: Datum) => yScale(d[yField as string] as number)\n        });\n    }\n    if (position.includes('bottom')) {\n        point.push({\n            x: (d: Datum) => xScale(d[xField as string] as number),\n            y: () => bb.y + bb.height\n        });\n    }\n    if (position.includes('top')) {\n        point.push({\n            x: (d: Datum) => xScale(d[x1Field as string] as number),\n            y: () => bb.y\n        });\n    }\n    if (position.includes('right')) {\n        point.push({\n            x: () => bb.x + bb.width,\n            y: (d: Datum) => yScale((d[y1Field as string] as number))\n        });\n    }\n\n    // render\n    g.selectAll('.line')\n        .data(track.data as Datum[])\n        .enter()\n        .filter(\n            // TODO: only for demo\n            d => Math.abs((d[f1 as string] as number) - (d[f2 as string] as number)) < 30\n        )\n        .append('line')\n        .attr('x1', d => point[0].x(d))\n        .attr('y1', d => point[0].y(d))\n        .attr('x2', d => point[1].x(d))\n        .attr('y2', d => point[1].y(d))\n        .attr('fill', styles.getStyle().fill)\n        .attr('stroke', styles.getStyle().stroke)\n        .attr('stroke-width', styles.getStyle().strokeWidth)\n        .attr('opacity', styles.getStyle().opacity)\n}","import { BoundingBox } from \"../utils/bounding-box\"\nimport { Track, GenericType, Channel, IsChannelDeep, Datum } from \"../gemini.schema\"\nimport * as d3 from 'd3'\nimport { getLinkPosition, LinkStyleModel } from \"./link\"\n\nexport function renderBetweenBandLink(\n    g: d3.Selection<SVGGElement, any, any, any>,\n    track: Track | GenericType<Channel>,\n    bb: BoundingBox\n) {\n    const styles = new LinkStyleModel(track)\n\n    const xField = IsChannelDeep(track.x) ? track.x.field : undefined\n    const xeField = IsChannelDeep(track.xe) ? track.xe.field : undefined\n    const x1Field = IsChannelDeep(track.x1) ? track.x1.field : undefined\n    const x1eField = IsChannelDeep(track.x1e) ? track.x1e.field : undefined\n    const yField = IsChannelDeep(track.y) ? track.y.field : undefined\n    const yeField = IsChannelDeep(track.ye) ? track.ye.field : undefined\n    const y1Field = IsChannelDeep(track.y1) ? track.y1.field : undefined\n    const y1eField = IsChannelDeep(track.y1e) ? track.y1e.field : undefined\n\n    const xScale = d3.scaleLinear<number, number>()\n        .domain([0, 99]) // TODO: Support based on the real data\n        .range([bb.x, bb.x + bb.width])\n    const yScale = d3.scaleLinear<number, number>()\n        .domain([0, 99])\n        .range([bb.y, bb.y + bb.height])\n\n    // calculate position of points\n    const point: {\n        x: (d: Datum) => number,\n        xe: (d: Datum) => number,\n        y: (d: Datum) => number,\n        ye: (d: Datum) => number\n    }[] = []\n\n    const position = getLinkPosition(track)\n    if (position.includes('left')) {\n        point.push({\n            x: () => bb.x,\n            xe: () => bb.x,\n            y: (d: Datum) => yScale(d[yField as string] as number),\n            ye: (d: Datum) => yScale(d[yeField as string] as number)\n        })\n    }\n    if (position.includes('bottom')) {\n        point.push({\n            x: (d: Datum) => xScale(d[xField as string] as number),\n            xe: (d: Datum) => xScale(d[xeField as string] as number),\n            y: () => bb.y + bb.height,\n            ye: () => bb.y + bb.height\n        })\n    }\n    if (position.includes('top')) {\n        point.push({\n            x: (d: Datum) => xScale(d[x1Field as string] as number),\n            xe: (d: Datum) => xScale(d[x1eField as string] as number),\n            y: () => bb.y,\n            ye: () => bb.y\n        })\n    }\n    if (position.includes('right')) {\n        point.push({\n            x: () => bb.x + bb.width,\n            xe: () => bb.x + bb.width,\n            y: (d: Datum) => yScale((d[y1Field as string] as number)),\n            ye: (d: Datum) => yScale((d[y1eField as string] as number))\n        })\n    }\n\n    // render\n    g.selectAll('.polygon')\n        .data(track.data as Datum[])\n        .enter()\n        .append('polygon')\n        .attr('points', d => {\n            const primaryPointStart = `${point[0].x(d)},${point[0].y(d)}`\n            const primaryPointEnd = `${point[0].xe(d)},${point[0].ye(d)}`\n            const secondaryPointStart = `${point[1].xe(d)},${point[1].ye(d)}`\n            const secondaryPointEnd = `${point[1].x(d)},${point[1].y(d)}`\n            return `${primaryPointStart} ${primaryPointEnd} ${secondaryPointStart} ${secondaryPointEnd}`\n        })\n        .attr('fill', styles.getStyle().fill)\n        .attr('stroke', styles.getStyle().stroke)\n        .attr('stroke-width', styles.getStyle().strokeWidth)\n        .attr('opacity', styles.getStyle().opacity)\n}","import * as d3 from \"d3\";\nimport { GeminiSpec, Track, GenericType, Channel, IsNotEmptyTrack, IsHiGlassTrack } from \"../gemini.schema\";\nimport { HiGlassTrack, renderHiGlass } from \"./higlass\";\nimport { BoundingBox } from \"../utils/bounding-box\";\nimport { TRACK_GAP } from \"./defaults\";\nimport { renderBetweenLink } from \"./link\";\nimport { trackStyle } from \"./layout\";\n\nexport function renderLinearLayout(\n    g: d3.Selection<SVGGElement, any, any, any>,\n    gm: GeminiSpec,\n    setHiGlassInfo: (higlassInfo: HiGlassTrack[]) => void,\n    boundingBox: BoundingBox\n) {\n    const wrap: number = gm.layout?.wrap ?? 999;\n\n    // Generate layout data\n    const trackInfo: { boundingBox: BoundingBox, track: Track | GenericType<Channel> }[] = [];\n    let cumX = boundingBox.x\n    let cumY = boundingBox.y\n    if (gm.layout?.direction === 'horizontal') {\n        gm.tracks.forEach((track, i) => {\n            if (IsNotEmptyTrack(track)) {\n                trackInfo.push({\n                    track, boundingBox: {\n                        x: cumX, width: track.width as number,\n                        y: cumY, height: track.height as number\n                    }\n                })\n                cumX += track.width as number + TRACK_GAP\n                if (i % wrap === wrap - 1) {\n                    cumX = boundingBox.x\n                    cumY = cumY += track.height as number + TRACK_GAP\n                }\n            }\n        })\n    } else {\n        gm.tracks.forEach((track, i) => {\n            if (IsNotEmptyTrack(track)) {\n                trackInfo.push({\n                    track, boundingBox: {\n                        x: cumX, width: track.width as number,\n                        y: cumY, height: track.height as number\n                    }\n                })\n                cumY += track.height as number + TRACK_GAP;\n                if (i % wrap === wrap - 1) {\n                    cumX = cumX += track.width as number + TRACK_GAP\n                    cumY = boundingBox.y\n                }\n            }\n        })\n    }\n    ///\n\n    // Render track backgrounds\n    g.selectAll('rect')\n        .data(trackInfo)\n        .enter()\n        .append('rect')\n        .attr('x', d => d.boundingBox.x)\n        .attr('width', d => d.boundingBox.width)\n        .attr('y', d => d.boundingBox.y)\n        .attr('height', d => d.boundingBox.height)\n        .attr('fill', d => trackStyle.background(d.track as Track))\n        .attr('stroke', d => trackStyle.stroke(d.track as Track))\n        .attr('stroke-width', d => trackStyle.strokeWidth(d.track as Track))\n\n    // Render links and bands\n    renderBetweenLink(g, trackInfo.filter(d => d.track.mark === 'link-between'));\n\n    // Render HiGlass tracks\n    renderHiGlass(g, trackInfo.filter(d => IsHiGlassTrack(d.track)), setHiGlassInfo);\n}","export const DEFAULT_VISUAL_PROPERTIES = {\n    opacity: 1\n}\n\n// gab between tracks\nexport const TRACK_GAP = 3;\n\n// empty space inside the visualization for circular layouts\nexport const INNER_CIRCLE_RADIUS = 150","import { BoundingBox } from '../utils/bounding-box';\nimport { Track, GenericType, Channel } from '../gemini.schema';\nimport { compiler } from '../higlass/gemini-to-higlass';\nimport testViewConfig from '../test/higlass/hg-only-heatmap.json';\n\nexport interface HiGlassTrack {\n    viewConfig: Object\n    boundingBox: BoundingBox,\n}\n\nexport function renderHiGlass(\n    g: d3.Selection<SVGGElement, any, any, any>,\n    tracksWithBB: { boundingBox: BoundingBox, track: Track | GenericType<Channel> }[],\n    setHiGlassInfo: (higlassInfo: HiGlassTrack[]) => void\n) {\n    const hiGlassInfo: HiGlassTrack[] = [];\n    tracksWithBB.forEach(tb => {\n        const { track, boundingBox: bb } = tb;\n\n        // add a HiGlass view config\n        hiGlassInfo.push({ boundingBox: bb, viewConfig: compiler(track, bb) });\n    })\n    setHiGlassInfo(hiGlassInfo);\n\n    /////// DEBUG\n    // const testHGInfo = tracksWithBB.map(tb => ({ boundingBox: tb.bb, viewConfig: testViewConfig }));\n    // console.log(testHGInfo);\n    // setHiGlassInfo(tracksWithBB.map(tb => ({\n    //     boundingBox: tb.bb,\n    //     viewConfig: testViewConfig\n    // })));\n    ///////\n}","import * as d3 from 'd3'\nimport { GeminiSpec, Track, Layout, GenericType, EmptyTrack, Channel } from '../gemini.schema'\nimport { HiGlassTrack } from './higlass'\nimport { BoundingBox } from '../utils/bounding-box'\nimport { renderCircularLayout } from './layout-circular'\nimport { renderLinearLayout } from './layout-linear'\n\nexport const trackStyle = {\n    background: (track: Track) => track.style?.background ?? 'white',\n    stroke: (track: Track) => track.style?.stroke ?? 'lightgray',\n    strokeWidth: (track: Track) => track.style?.strokeWidth ?? 1\n}\n\nexport function renderLayout(\n    g: d3.Selection<SVGGElement, any, any, any>,\n    gm: GeminiSpec,\n    setHiGlassInfo: (higlassInfo: HiGlassTrack[]) => void,\n    boundingBox: BoundingBox\n) {\n    g.selectAll('*').remove()\n\n    if (gm.layout?.type === 'circular') {\n        renderCircularLayout(g, gm, setHiGlassInfo, boundingBox)\n    } else {\n        renderLinearLayout(g, gm, setHiGlassInfo, boundingBox)\n    }\n}\n\n/**\n * Convert the vertical-direction layout of tracks to the identical, horizontal-version, tracks.\n * This is deprecated since this cannot support some specifications (e.g., six tracks with `wrap` === 3).\n * TODO: Support this function when we use `EmptyTrack`.\n * @param gm A Gemini specification.\n */\nexport function convertLayout(gm: GeminiSpec) {\n    if (gm.layout?.direction !== 'vertical') {\n        return gm\n    }\n    const wrap = (gm.layout.wrap ?? 0) > gm.tracks.length ? gm.tracks.length : (gm.layout.wrap ?? gm.tracks.length)\n    const newWrap = Math.ceil(gm.tracks.length / wrap)\n\n    const newLayout: Layout = {\n        ...gm.layout,\n        direction: 'horizontal',\n        wrap: newWrap\n    }\n\n    const tracks = gm.tracks\n    const newTracks: (Track | GenericType<Channel> | EmptyTrack)[] = []\n    for (let remainder = 0; remainder < wrap; remainder++) {\n        newTracks.push(...tracks.filter((t, i) => i % wrap === remainder))\n    }\n\n    return {\n        ...gm,\n        layout: newLayout,\n        tracks: newTracks\n    }\n}","import * as d3 from \"d3\";\nimport { GeminiSpec, Track, GenericType, Channel, IsNotEmptyTrack } from \"../gemini.schema\";\nimport { BoundingBox } from \"../utils/bounding-box\";\nimport { HiGlassTrack } from \"./higlass\";\nimport { TRACK_GAP } from \"./defaults\";\nimport { DefaultArcObject } from \"d3\";\nimport { trackStyle } from \"./layout\";\n\ninterface ArcInfo {\n    innerRadius: number\n    outerRadius: number\n    startAngle: number\n    endAngle: number\n}\n\nexport function renderCircularLayout(\n    g: d3.Selection<SVGGElement, any, any, any>,\n    gm: GeminiSpec,\n    setHiGlassInfo: (higlassInfo: HiGlassTrack[]) => void,\n    boundingBox: BoundingBox\n) {\n    const wrap: number = gm.layout?.wrap ?? 999;\n    const totalRadius = boundingBox.height / 2.0\n    const totalLength = d3.sum(\n        // Look into the first row\n        gm.layout?.direction === 'horizontal' ?\n            gm.tracks.filter((t, i) => i < wrap)\n                .map(d => IsNotEmptyTrack(d) ? d.width as number : 0) :\n            gm.tracks.filter((t, i) => i % wrap == 0)\n                .map(d => IsNotEmptyTrack(d) ? d.width as number : 0)\n\n    )\n    const angleGap = Math.PI * 2 / 160.0;\n\n    // Generate layout data\n    const trackInfo: { arc: ArcInfo, track: Track | GenericType<Channel> }[] = []\n    let cumDonutBandWidth = 0\n    let cumLength = 0\n    if (gm.layout?.direction === \"horizontal\") {\n        // adjacently place first\n        gm.tracks.forEach((track, i) => {\n            if (IsNotEmptyTrack(track)) {\n                const donutBandWidth = track.height as number // Height is used for the width of donut band.\n                const length = track.width as number // Width is used for calculating the proportion of the circumference.\n                const startAngle = (Math.PI * 2) * cumLength / totalLength + angleGap\n                const endAngle = startAngle + (Math.PI * 2) * length / totalLength - angleGap\n                trackInfo.push({\n                    track, arc: {\n                        innerRadius: totalRadius - cumDonutBandWidth - donutBandWidth,\n                        outerRadius: totalRadius - cumDonutBandWidth,\n                        startAngle,\n                        endAngle\n                    }\n                })\n                cumLength += length\n                if (i % wrap === wrap - 1) {\n                    cumLength = 0\n                    cumDonutBandWidth += donutBandWidth + TRACK_GAP\n                }\n            }\n        })\n    }\n    else {\n        // stack first\n        gm.tracks.forEach((track, i) => {\n            if (IsNotEmptyTrack(track)) {\n                const donutBandWidth = track.height as number // Height is used for the width of donut band.\n                const length = track.width as number // Width is used for calculating the proportion of the circumference.\n                const startAngle = (Math.PI * 2) * cumLength / totalLength + angleGap\n                const endAngle = startAngle + (Math.PI * 2) * length / totalLength - angleGap\n                trackInfo.push({\n                    track, arc: {\n                        innerRadius: totalRadius - cumDonutBandWidth - donutBandWidth,\n                        outerRadius: totalRadius - cumDonutBandWidth,\n                        startAngle,\n                        endAngle\n                    }\n                })\n                cumDonutBandWidth += donutBandWidth + TRACK_GAP\n                if (i % wrap === wrap - 1) {\n                    cumDonutBandWidth = 0\n                    cumLength += length;\n                }\n            }\n        })\n    }\n\n    console.log('arcs', trackInfo);\n    g.append('g')\n        .attr('transform', `translate(${boundingBox.x + totalRadius}, ${boundingBox.y + totalRadius})`)\n        .selectAll('path')\n        .data(trackInfo)\n        .enter()\n        .append('path')\n        .attr('fill', d => trackStyle.background(d.track as Track))\n        .attr('stroke', d => trackStyle.stroke(d.track as Track))\n        .attr('stroke-width', d => trackStyle.strokeWidth(d.track as Track))\n        .attr('d', d => d3.arc()\n            .innerRadius(d.arc.innerRadius)\n            .outerRadius(d.arc.outerRadius)(d.arc)\n        )\n\n}","import { GeminiSpec, IsNotEmptyTrack } from \"../gemini.schema\"\nimport { TRACK_GAP, INNER_CIRCLE_RADIUS } from \"../visualizations/defaults\"\nimport * as d3 from \"d3\"\n\nexport interface BoundingBox {\n    x: number\n    y: number\n    width: number\n    height: number\n}\n\n/**\n * Naive approach to calculate the entire size of visualization.\n * @param gm \n */\nexport function calculateSize(gm: GeminiSpec) {\n    const size = { width: 0, height: 0 }\n    const wrap: number = gm.layout?.wrap ?? 999\n    if (gm.layout?.type === 'circular') {\n        // square and tightest bounding box enclousing circular tracks\n        size.height = INNER_CIRCLE_RADIUS * 2\n        size.height += d3.sum(\n            // Add the height of tracks in the first column.\n            // TODO: not considering different directions\n            gm.tracks.filter((t, i) => i % wrap === 0)\n                .map(track => IsNotEmptyTrack(track) ? track.height as number : 0)\n        )\n        size.width = size.height\n    }\n    else if (gm.layout?.direction === \"horizontal\") {\n        size.width = d3.sum(\n            // Add the width of tracks in the first row.\n            gm.tracks.filter((t, i) => i < wrap)\n                .map(track => IsNotEmptyTrack(track) ? track.width as number : 0)\n        )\n        size.height = d3.sum(\n            // Add the height of tracks in the first column.\n            gm.tracks.filter((t, i) => i % wrap === 0)\n                .map(track => IsNotEmptyTrack(track) ? track.height as number : 0)\n        ) as number\n        // Add gaps\n        size.width += d3.min([wrap - 1, gm.tracks.length - 1]) as number * TRACK_GAP\n        size.height += Math.floor(gm.tracks.length / wrap) * TRACK_GAP\n    } else {\n        size.width = d3.sum(\n            // Add the width of tracks in the first row.\n            gm.tracks.filter((t, i) => i % wrap === 0)\n                .map(track => IsNotEmptyTrack(track) ? track.width as number : 0)\n        )\n        size.height = d3.sum(\n            // Add the height of tracks in the first column.\n            gm.tracks.filter((t, i) => i < wrap)\n                .map(track => IsNotEmptyTrack(track) ? track.height as number : 0)\n        ) as number\n        // Add gaps\n        size.width += Math.floor(gm.tracks.length / wrap) * TRACK_GAP\n        size.height += d3.min([wrap - 1, gm.tracks.length - 1]) as number * TRACK_GAP\n    }\n    return size\n}","// @ts-ignore\nimport { HiGlassComponent } from 'higlass'\nimport React, { useState, useEffect, useRef, useMemo } from 'react'\nimport * as d3 from \"d3\"\nimport EditorPanel from './editor-panel'\nimport stringify from 'json-stringify-pretty-compact'\nimport SplitPane from 'react-split-pane'\nimport { GeminiSpec, Track, IsDataDeep, IsMarkDeep, IsNotEmptyTrack } from '../lib/gemini.schema'\nimport { debounce } from \"lodash\"\nimport { demos } from './examples'\nimport { renderGlyphPreview } from '../lib/visualizations/glyph-preview'\nimport { replaceGlyphs } from '../lib/utils'\nimport { renderLayoutPreview } from '../lib/visualizations/layout-preview'\nimport { calculateSize } from '../lib/utils/bounding-box'\nimport { HiGlassTrack } from '../lib/visualizations/higlass'\nimport './editor.css'\n\nconst DEBUG_INIT_DEMO_INDEX = 0 // demos.length - 1\n\nfunction Editor() {\n\n    const glyphSvg = useRef<SVGSVGElement>(null)\n    const layoutSvg = useRef<SVGSVGElement>(null)\n    const [higlassTrackOptions, setHiGlassTrackOptions] = useState<HiGlassTrack[]>([\n        // Debug\n        // { viewConfig: testViewConfig, boundingBox: { x: 60, y: 60, width: 60, height: 500 } }\n    ])\n    const [demo, setDemo] = useState(demos[DEBUG_INIT_DEMO_INDEX])\n    const [editorMode, setEditorMode] = useState<'Full Glyph Definition' | 'Predefined Glyph'>('Full Glyph Definition')\n    const [gm, setGm] = useState(stringify(demos[DEBUG_INIT_DEMO_INDEX].spec as GeminiSpec))\n    const [glyphWidth, setGlyphWidth] = useState(demos[DEBUG_INIT_DEMO_INDEX].glyphWidth)\n    const [glyphHeight, setGlyphHeight] = useState(demos[DEBUG_INIT_DEMO_INDEX].glyphHeight)\n\n    useEffect(() => {\n        if (editorMode === 'Full Glyph Definition') {\n            setGm(stringify(replaceGlyphs(\n                JSON.parse(stringify(demo.spec)) as GeminiSpec\n            )))\n        } else {\n            setGm(stringify(demo.spec as GeminiSpec))\n        }\n        setGlyphWidth(demo.glyphWidth)\n        setGlyphHeight(demo.glyphHeight)\n        setHiGlassTrackOptions([])\n    }, [demo, editorMode])\n\n    useEffect(() => {\n        let editedGm\n        try {\n            editedGm = replaceGlyphs(JSON.parse(gm))\n        } catch (e) {\n            console.warn(\"Cannnot parse the edited code.\")\n        }\n        if (!editedGm) return\n\n        // Render layout preview\n        renderLayoutPreview(\n            layoutSvg.current as SVGSVGElement,\n            editedGm as GeminiSpec,\n            {\n                x: 60, y: 60,\n                width: calculateSize(editedGm).width,\n                height: calculateSize(editedGm).height\n            },\n            (higlassInfo: HiGlassTrack[]) => {\n                setHiGlassTrackOptions(higlassInfo)\n            }\n        )\n\n        // Render glyph preview\n        d3.select(glyphSvg.current).selectAll('*').remove()\n        const track = (editedGm as GeminiSpec)?.tracks?.find(\n            d => IsNotEmptyTrack(d) && IsMarkDeep(d.mark) ? d.mark.type === 'compositeMark' : false\n        )\n        if (!track) return\n\n        if (IsNotEmptyTrack(track) && IsDataDeep(track.data)) {\n            d3.csv(track.data.url).then(data =>\n                renderGlyphPreview(\n                    glyphSvg.current as SVGSVGElement,\n                    { ...track, data } as Track,\n                    glyphWidth,\n                    glyphHeight\n                )\n            )\n        }\n    }, [gm, glyphWidth, glyphHeight])\n\n    const hglass = useMemo(() => {\n        return higlassTrackOptions.map(op =>\n            <div key={stringify(op.viewConfig)}\n                style={{\n                    position: 'absolute',\n                    display: 'block',\n                    left: op.boundingBox.x,\n                    top: op.boundingBox.y,\n                    width: op.boundingBox.width,\n                    height: op.boundingBox.height,\n                }}>\n                <HiGlassComponent\n                    options={{\n                        bounded: true,\n                        containerPaddingX: 0,\n                        containerPaddingY: 0,\n                        viewMarginTop: 0,\n                        viewMarginBottom: 0,\n                        viewMarginLeft: 0,\n                        viewMarginRight: 0,\n                        viewPaddingTop: 0,\n                        viewPaddingBottom: 0,\n                        viewPaddingLeft: 0,\n                        viewPaddingRight: 0,\n                        sizeMode: \"bounded\"\n                    }}\n                    viewConfig={op.viewConfig}\n                />\n            </div>\n        )\n    }, [higlassTrackOptions])\n\n    return (\n        <>\n            <div className=\"demo-navbar\">\n                🧬 Gemini <code>Editor</code>\n                <select\n                    onChange={e => {\n                        setDemo(demos.find(d => d.name === e.target.value) as any)\n                    }}\n                    defaultValue={demo.name}>\n                    {demos.map(d => (\n                        <option key={d.name} value={d.name}>\n                            {d.name}\n                        </option>\n                    ))}\n                </select>\n                <select\n                    onChange={e => {\n                        setEditorMode(e.target.value as any)\n                    }}\n                    defaultValue={'Full Glyph Definition'}>\n                    {['Full Glyph Definition', 'Predefined Glyph'].map(d => (\n                        <option key={d} value={d}>\n                            {d}\n                        </option>\n                    ))}\n                </select>\n            </div>\n            <div className=\"editor\">\n                <SplitPane split=\"vertical\" defaultSize=\"50%\" onChange={() => { }}>\n                    {/* Gemini Editor */}\n                    <EditorPanel\n                        code={gm}\n                        readOnly={false}\n                        onChange={debounce(code => {\n                            setGm(code)\n                        }, 1000)}\n                    />\n                    {/* D3 Visualizations */}\n                    <SplitPane split=\"horizontal\" defaultSize=\"20%\" onChange={() => { }}>\n                        <div className=\"preview-container\">\n                            <b>Composite Mark Preview</b>\n                            <div><svg ref={glyphSvg} /></div>\n                        </div>\n                        <div className=\"preview-container\">\n                            <b>Layout Preview</b>\n                            <div style={{ position: 'relative' }}>\n                                <svg ref={layoutSvg} />\n                                {hglass}\n                            </div>\n                        </div>\n                    </SplitPane>\n                </SplitPane>\n            </div>\n        </>\n    )\n}\nexport default Editor","import { GeminiSpec } from \"../gemini.schema\";\nimport * as d3 from 'd3';\nimport { renderBackground } from \"./guidelines\";\nimport { renderLayout } from \"./layout\";\nimport { BoundingBox } from \"../utils/bounding-box\";\nimport { HiGlassTrack } from \"./higlass\";\n\nexport function renderLayoutPreview(\n    svg: SVGSVGElement,\n    gm: GeminiSpec,\n    boundingBox: BoundingBox,\n    setHiGlassInfo: (higlassInfo: HiGlassTrack[]) => void\n) {\n    if (!svg || !gm) return;\n    d3.select(svg).selectAll('*').remove();\n\n    // styles\n    const PADDING_X = boundingBox.x, PADDING_Y = boundingBox.y;\n    const WIDTH = boundingBox.width + PADDING_X * 2;\n    const HEIGHT = boundingBox.height + PADDING_Y * 2;\n\n    // background and guidelines\n    renderBackground(svg, WIDTH, HEIGHT, PADDING_X, PADDING_Y, false);\n\n    const innerG = d3.select(svg).append(\"g\")\n        .attr(\"width\", boundingBox.width)\n        .attr(\"height\", boundingBox.height)\n\n    renderLayout(innerG, gm, setHiGlassInfo, boundingBox);\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Editor from './editor/editor';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Editor />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}