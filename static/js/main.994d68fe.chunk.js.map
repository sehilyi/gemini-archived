{"version":3,"sources":["editor/editor-panel.tsx","lib/test/gemini/glyph/index.ts","lib/test/gemini/glyph/glyph-gene-annotation-plot.ts","lib/test/gemini/glyph/glyph-gene-annotation-plot-v2.ts","lib/test/gemini/glyph/glyph-cytogenetic-band.ts","lib/test/gemini/glyph/glyph-logo.ts","lib/utils/index.ts","lib/gemini.schema.ts","editor/examples.tsx","lib/test/gemini/glyph-examples.ts","lib/test/gemini/layout-examples.ts","lib/models/track.ts","lib/utils/spec-preprocess.ts","lib/visualizations/guidelines.ts","lib/visualizations/glyph-preview.ts","lib/visualizations/glyph.ts","lib/utils/data-process.ts","lib/higlass/higlass-model.ts","lib/utils/contants.ts","lib/higlass/gemini-to-higlass.ts","lib/visualizations/validate.ts","lib/visualizations/link.ts","lib/visualizations/link-validate.ts","lib/visualizations/chart-type.ts","lib/visualizations/line-connection.ts","lib/visualizations/band-connection.ts","lib/visualizations/layout-linear.ts","lib/visualizations/defaults.ts","lib/visualizations/higlass.ts","lib/visualizations/layout.ts","lib/visualizations/layout-circular.ts","lib/utils/bounding-box.ts","editor/editor.tsx","lib/visualizations/layout-preview.ts","serviceWorker.ts","index.tsx"],"names":["EditorPanel","props","templateCode","code","readOnly","editor","useRef","useState","setCode","useEffect","handleWidth","handleHeight","onResize","width","height","current","layout","language","value","theme","options","autoClosingBrackets","autoClosingQuotes","cursorBlinking","folding","lineNumbersMinChars","minimap","enabled","scrollBeyondLastLine","wordWrap","lineNumbers","renderLineHighlight","renderIndentGuides","onChange","e","editorDidMount","monacoEditor","monaco","focus","editorWillMount","GLYPH_PRESETS","name","mark","type","requiredChannels","elements","description","select","channel","oneOf","color","size","bind","domain","range","xe","x","opacity","style","dy","text","dashed","stroke","strokeWidth","GLYPH_LOCAL_PRESET_TYPES","replaceGlyphs","spec","i","tracks","length","track","IsNotEmptyTrack","IsMarkDeep","predefinedGlyph","includes","find","d","IsDataDeep","data","IsGlyphMark","IsHiGlassTrack","url","IsChannelValue","IsChannelBind","IsChannelDeep","demos","server","field","y","geneOrExon","glyphWidth","glyphHeight","exonVersion","exonId","stain","x1","y1","references","direction","wrap","background","axis","x1e","TrackModel","channelToField","domains","scales","ranges","this","longElements","forEach","element","push","deepToLongElements","setDomains","c","targetChannel","map","Object","keys","d3","values","bb","boundingBox","setRanges","datum","scaleChannel","getFieldByChannel","altSize","Math","abs","getEncoding","undefined","renderBackground","svg","w","h","px","py","isGuideline","attr","g","append","renderGlyphPreview","selectAll","remove","WIDTH","HEIGHT","tm","setScales","getElements","markE","filters","transformed_data","filteredData","slice","f","filter","indexOf","transformData","enter","console","warn","renderGlyph","PADDING_X","PADDING_Y","HiGlassModel","hg","setEditable","setChromInfoPath","trackSourceServers","views","uid","uuid","v1","genomePositionSearchBoxVisible","top","left","center","right","bottom","gallery","whole","initialXDomain","initialYDomain","xDomain","yDomain","editable","chromInfoPath","position","widthOrHeight","validate","Ajv","extendRefs","compile","HiGlassSchema","valid","errors","JSON","stringify","COLOR_SCHEME_VIRIDIS","compiler","higlass","split","tilesetUid","isXGenomic","isYGenomic","trackDirection","trackType","setDomain","typeMap","defaultOptions","pointColor","labelPosition","axisPositionHorizontal","barFillColor","lineStrokeColor","colorRange","higlassTrackType","setMainTrack","addTrackSourceServers","chanToPos","channelDef","setAxisTrack","validateSpec","log","SpecValidityModel","validity","msg","isValid","setIsValid","setMsg","getValidity","DEFAULT_LINK_STYLE","fill","LinkChannelToStyleMap","LinkStyleModel","getLinkPosition","xField","x1Field","yField","y1Field","renderBetweenLink","tracksWithBB","tb","definedFields","validateBetweenLinkSpec","xeField","x1eField","yeField","ye","y1eField","y1e","numOfChannelsDefined","key","getChartType","then","styles","f1","f2","xScale","yScale","point","getStyle","renderBetweenLineLink","primaryPointStart","primaryPointEnd","secondaryPointStart","secondaryPointEnd","renderBetweenBandLink","printValidity","renderLinearLayout","gm","setHiGlassInfo","trackInfo","cumX","cumY","trackStyle","hiGlassInfo","viewConfig","renderHiGlass","renderLayout","totalRadius","totalLength","t","angleGap","PI","cumDonutBandWidth","cumLength","donutBandWidth","startAngle","endAngle","arc","innerRadius","outerRadius","renderCircularLayout","calculateSize","INNER_CIRCLE_RADIUS","floor","Editor","glyphSvg","layoutSvg","higlassTrackOptions","setHiGlassTrackOptions","demo","setDemo","editorMode","setEditorMode","setGm","setGlyphWidth","setGlyphHeight","parse","editedGm","renderLayoutPreview","higlassInfo","hglass","useMemo","op","display","bounded","containerPaddingX","containerPaddingY","viewMarginTop","viewMarginBottom","viewMarginLeft","viewMarginRight","viewPaddingTop","viewPaddingBottom","viewPaddingLeft","viewPaddingRight","sizeMode","className","target","defaultValue","defaultSize","debounce","ref","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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BACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,oBACA,oBACA,oBACA,oBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,sBCvPG,SAASC,EAASnI,EAAqCoD,GAE1D,Ib4B4CzC,Ea5BtCyH,EAAU,IAAIpC,EAEpB,GAAItF,EAAeV,IAAUO,EAAWP,EAAMQ,MAAO,CAAC,IAAD,Gb0BTG,EazBuBX,EAAMQ,KAAKG,Kb2BrEP,SAAS,sBAEZO,EAAIP,SAAS,WAAcO,EAAIP,SAAS,UAUvC,CAAEY,OAFML,EAAI0H,MAAM,oBAAoB,GAE5BC,WADE3H,EAAI0H,MAAM,oBAAoB,KAN7C1C,QAAQC,KAAK,gCAAkCjF,GACxC,CAAEK,YAAQ8C,EAAWwE,gBAAYxE,IajChC9C,EADyC,EACzCA,OAAQsH,EADiC,EACjCA,WAGVC,EAAazH,EAAcd,EAAMd,IAAuB,YAAjBc,EAAMd,EAAEb,KAC/CmK,EAAa1H,EAAcd,EAAMkB,IAAuB,YAAjBlB,EAAMkB,EAAE7C,KAC/C8I,EAAUoB,GAAczH,EAAcd,EAAMd,GAAKc,EAAMd,EAAEH,YAA6B+E,EACtFsD,EAAUoB,GAAc1H,EAAcd,EAAMkB,GAAKlB,EAAMkB,EAAEnC,YAA6B+E,EACtF2E,EAAiBF,GAAcC,EAAa,OAASD,EAAa,aAAe,WACjFG,EZgOa,kBYhOa1I,EAAM5B,KAAQ4B,EAAM5B,KAAO8B,EAAWF,EAAM5B,MAAQ4B,EAAM5B,KAAKC,KAAO,UAEtG+J,EAAQO,UAAUxB,EAASC,GAE3B,IAAMwB,EAA0C,CAE5C,0BAA0B,GAA1B,OAA8BH,EAA9B,qBACA,MAAQ,GAAR,OAAYA,EAAZ,UACA,IAAM,GAAN,OAAUA,EAAV,QACA,KAAO,GAAP,OAAWA,EAAX,SACA,KAAO,GAAP,OAAWA,EAAX,gBAIEI,EAA0C,CAC5C,MAAS,CACLC,WAAY,UACZC,cAAe,SACfC,uBAAwB,QAE5B,IAAO,CACHC,aAAc,UACdF,cAAe,SACfC,uBAAwB,QAE5B,KAAQ,CACJE,gBAAiB,UACjBH,cAAe,SACfC,uBAAwB,QAE5B,KAAQ,CACJG,WAAYjB,EACZa,cAAe,WAIjBK,EAAmBR,EAAQF,GACjC,IAAKU,EAAkB,MAAO,GAE9BhB,EAAQiB,aAAa,CACjBhL,KAAM+K,EACNpI,OAAQA,EACRsH,WAAYA,EACZ/L,MAAO6G,EAAG7G,MACVC,OAAQ4G,EAAG5G,OACXM,QAAS+L,EAAeH,KACzBY,sBAAsBtI,GAEzB,IAAMuI,EAAkE,CACpErK,EAAG,SACHuC,GAAI,MACJP,EAAG,OACHQ,GAAI,SAaR,OAXAsB,OAAOC,KAAKsG,GAAW/G,SAAQ,SAAAK,GAC3B,IAAM2G,EAAcxJ,EAA+B6C,GAC/C/B,EAAc0I,IAAeA,EAAWzH,MACxCqG,EAAQqB,aAAaF,EAAU1G,OAIvCuF,EAAQsB,eAER/D,QAAQgE,IAAI,sBAAuBvB,EAAQxI,QAEpCwI,EAAQxI,OAEnB,MAAO,GCpFJ,IAAMgK,EAAb,WAEI,WAAY9B,GAAkB,yBADtB+B,cACqB,EACzBvH,KAAKuH,SAAW,CACZC,IAAK,aACLC,QAASjC,IAAgB,GALrC,0DASQ,OAAOxF,KAAKuH,WATpB,gCAYQ,OAAOvH,KAAKuH,SAASE,UAZ7B,6BAckBD,GAEV,OADAxH,KAAKuH,SAASC,IAAMA,EACbxH,OAhBf,iCAkBsByH,GAEd,OADAzH,KAAKuH,SAASE,QAAUA,EACjBzH,OApBf,kCAsBuBuH,GAGf,OAFAvH,KAAK0H,WAAWH,EAASE,SACzBzH,KAAK2H,OAAOJ,EAASC,KACdxH,OAzBf,sCA4BaA,KAAK4H,cAAcH,QAGpBpE,QAAQgE,IAAIrH,KAAKuH,SAASC,KAF1BnE,QAAQC,KAAKtD,KAAKuH,SAASC,SA7BvC,KCmBO,IAAMK,EAA0C,CACnDC,KAAM,YACN5K,OAAQ,OACRC,YAAa,EACbN,QAAS,IAGAkL,EAA0E,CACnFzL,MAAO,OACPY,OAAQ,SACRC,YAAa,cACbN,QAAS,WAGAmL,EAAb,WAEI,WAAYtK,GAAsC,IAAD,gCADzCZ,WACyC,EAC7CkD,KAAKlD,MAAL,eAAkB+K,GAElBnH,OAAOC,KAAKoH,GAAuB7H,SAAQ,SAAAK,GACvC,IAAMnE,EAAWsB,EAA+B6C,GAC5CjC,EAAelC,KACd,EAAKU,MAAMiL,EAAsBxH,IAA0BnE,EAAQ9B,UARpF,uDAaQ,OAAO0F,KAAKlD,UAbpB,KAiBO,SAASmL,EAAgBvK,GAC5B,IAAMwK,EAAS1J,EAAcd,EAAMd,GAAKc,EAAMd,EAAE+B,WAAQ6C,EAClD2G,EAAU3J,EAAcd,EAAMyB,IAAMzB,EAAMyB,GAAGR,WAAQ6C,EACrD4G,EAAS5J,EAAcd,EAAMkB,GAAKlB,EAAMkB,EAAED,WAAQ6C,EAClD6G,EAAU7J,EAAcd,EAAM0B,IAAM1B,EAAM0B,GAAGT,WAAQ6C,EAE3D,OAAI0G,GAAUE,EAAe,cACpBD,GAAWC,EAAe,WAC1BD,GAAWE,EAAgB,YAC3BH,GAAUG,EAAgB,eAC1BH,GAAUC,EAAgB,aAC1BC,GAAUC,EAAgB,aACvB,UAGT,SAASC,EACZrG,EACAsG,GAEAA,EAAarI,SAAQ,SAAAsI,GAEjB,IAAMhD,ECzEP,SAAiC9H,GACpC,IAAM6J,EAAW,IAAID,GAAkB,GAOjCmB,EAAgB,CALPjK,EAAcd,EAAMd,GAAKc,EAAMd,EAAE+B,WAAQ6C,EACxChD,EAAcd,EAAMyB,IAAMzB,EAAMyB,GAAGR,WAAQ6C,EAC5ChD,EAAcd,EAAMkB,GAAKlB,EAAMkB,EAAED,WAAQ6C,EACxChD,EAAcd,EAAM0B,IAAM1B,EAAM0B,GAAGT,WAAQ6C,GAEFyB,QAAO,SAAAjF,GAAC,OAAIA,KASrE,OAPIyK,EAAchL,OAAS,GACvB8J,EAASI,OAAO,iEAChBJ,EAASG,YAAW,IAEfe,EAAchL,OAAS,GAC5B8J,EAASI,OAAO,iEAEbJ,EDwDWmB,CAAwBF,EAAG9K,OACzC,GAAK8H,EAAMiC,UAKX,OE1ED,SAAsB/J,GAIzB,IAAMwK,EAAS1J,EAAcd,EAAMd,GAAKc,EAAMd,EAAE+B,WAAQ6C,EAClDmH,EAAUnK,EAAcd,EAAMf,IAAMe,EAAMf,GAAGgC,WAAQ6C,EACrD2G,EAAU3J,EAAcd,EAAMyB,IAAMzB,EAAMyB,GAAGR,WAAQ6C,EACrDoH,EAAWpK,EAAcd,EAAMgC,KAAOhC,EAAMgC,IAAIf,WAAQ6C,EACxD4G,EAAS5J,EAAcd,EAAMkB,GAAKlB,EAAMkB,EAAED,WAAQ6C,EAClDqH,EAAUrK,EAAcd,EAAMoL,IAAMpL,EAAMoL,GAAGnK,WAAQ6C,EACrD6G,EAAU7J,EAAcd,EAAM0B,IAAM1B,EAAM0B,GAAGT,WAAQ6C,EACrDuH,EAAWvK,EAAcd,EAAMsL,KAAOtL,EAAMsL,IAAIrK,WAAQ6C,EAExDyH,EAA4D,CAC9DrM,EAAG,CAACsL,EAAQS,GAAS1F,QAAO,SAAAjF,GAAC,OAAIA,KAAGP,OACpCd,GAAI,CAACwL,EAASS,GAAU3F,QAAO,SAAAjF,GAAC,OAAIA,KAAGP,OACvCmB,EAAG,CAACwJ,EAAQS,GAAS5F,QAAO,SAAAjF,GAAC,OAAIA,KAAGP,OACpCqL,GAAI,CAACT,EAASU,GAAU9F,QAAO,SAAAjF,GAAC,OAAIA,KAAGP,QAG3C,MAAmB,iBAAfC,EAAM5B,KAC2B4E,OAAOC,KAAKsI,GAAsBxI,KAC/D,SAAAyI,GAAG,OAAID,EAAqBC,MAC9BjG,QAAO,SAAAjF,GAAC,OAAIA,GAAK,KAAGP,QACU,EACrB,kBAEA,kBAGR,UF4CK0L,CAAaX,EAAG9K,QACpB,IAAK,kBACGO,EAAWuK,EAAG9K,MAAMQ,OACpB0C,IAAO4H,EAAG9K,MAAMQ,KAAKG,KAAK+K,MAAK,SAAAlL,GAAI,OGhFhD,SACH+D,EACAvE,EACAoD,GAEA,IAAMuI,EAAS,IAAIrB,EAAetK,GAE5BwK,EAAS1J,EAAcd,EAAMd,GAAKc,EAAMd,EAAE+B,WAAQ6C,EAClD2G,EAAU3J,EAAcd,EAAMyB,IAAMzB,EAAMyB,GAAGR,WAAQ6C,EACrD4G,EAAS5J,EAAcd,EAAMkB,GAAKlB,EAAMkB,EAAED,WAAQ6C,EAClD6G,EAAU7J,EAAcd,EAAM0B,IAAM1B,EAAM0B,GAAGT,WAAQ6C,EAN7D,EAQmB,CAAC0G,EAAQC,EAASC,EAAQC,GAASpF,QAAO,SAAAjF,GAAC,OAAIA,KARlE,mBAQSsL,EART,KAQaC,EARb,KAUQC,EAAS5I,MACVnE,OAAO,CAAC,EAAG,KACXC,MAAM,CAACoE,EAAGlE,EAAGkE,EAAGlE,EAAIkE,EAAG7G,QACtBwP,EAAS7I,MACVnE,OAAO,CAAC,EAAG,KACXC,MAAM,CAACoE,EAAGlC,EAAGkC,EAAGlC,EAAIkC,EAAG5G,SAGtBwP,EAGA,GAEAzE,EAAWgD,EAAgBvK,GAC7BuH,EAASnH,SAAS,SAClB4L,EAAMtJ,KAAK,CACPxD,EAAG,kBAAMkE,EAAGlE,GACZgC,EAAG,SAACZ,GAAD,OAAcyL,EAAOzL,EAAEoK,OAG9BnD,EAASnH,SAAS,WAClB4L,EAAMtJ,KAAK,CACPxD,EAAG,SAACoB,GAAD,OAAcwL,EAAOxL,EAAEkK,KAC1BtJ,EAAG,kBAAMkC,EAAGlC,EAAIkC,EAAG5G,UAGvB+K,EAASnH,SAAS,QAClB4L,EAAMtJ,KAAK,CACPxD,EAAG,SAACoB,GAAD,OAAcwL,EAAOxL,EAAEmK,KAC1BvJ,EAAG,kBAAMkC,EAAGlC,KAGhBqG,EAASnH,SAAS,UAClB4L,EAAMtJ,KAAK,CACPxD,EAAG,kBAAMkE,EAAGlE,EAAIkE,EAAG7G,OACnB2E,EAAG,SAACZ,GAAD,OAAcyL,EAAQzL,EAAEqK,OAKnCpG,EAAEG,UAAU,SACPlE,KAAKR,EAAMQ,MACXkF,QACAH,QAEG,SAAAjF,GAAC,OAAIqD,KAAKC,IAAKtD,EAAEsL,GAA4BtL,EAAEuL,IAA4B,MAE9ErH,OAAO,QACPF,KAAK,MAAM,SAAAhE,GAAC,OAAI0L,EAAM,GAAG9M,EAAEoB,MAC3BgE,KAAK,MAAM,SAAAhE,GAAC,OAAI0L,EAAM,GAAG9K,EAAEZ,MAC3BgE,KAAK,MAAM,SAAAhE,GAAC,OAAI0L,EAAM,GAAG9M,EAAEoB,MAC3BgE,KAAK,MAAM,SAAAhE,GAAC,OAAI0L,EAAM,GAAG9K,EAAEZ,MAC3BgE,KAAK,OAAQqH,EAAOM,WAAW7B,MAC/B9F,KAAK,SAAUqH,EAAOM,WAAWzM,QACjC8E,KAAK,eAAgBqH,EAAOM,WAAWxM,aACvC6E,KAAK,UAAWqH,EAAOM,WAAW9M,SHYnB+M,CAAsB3H,EAAD,YAAC,eAAQuG,EAAG9K,OAAZ,IAAmBQ,SAAiBsK,EAAGzH,gBAGpE,MACJ,IAAK,kBACG9C,EAAWuK,EAAG9K,MAAMQ,OACpB0C,IAAO4H,EAAG9K,MAAMQ,KAAKG,KAAK+K,MAAK,SAAAlL,GAAI,OIvFhD,SACH+D,EACAvE,EACAoD,GAEA,IAAMuI,EAAS,IAAIrB,EAAetK,GAE5BwK,EAAS1J,EAAcd,EAAMd,GAAKc,EAAMd,EAAE+B,WAAQ6C,EAClDmH,EAAUnK,EAAcd,EAAMf,IAAMe,EAAMf,GAAGgC,WAAQ6C,EACrD2G,EAAU3J,EAAcd,EAAMyB,IAAMzB,EAAMyB,GAAGR,WAAQ6C,EACrDoH,EAAWpK,EAAcd,EAAMgC,KAAOhC,EAAMgC,IAAIf,WAAQ6C,EACxD4G,EAAS5J,EAAcd,EAAMkB,GAAKlB,EAAMkB,EAAED,WAAQ6C,EAClDqH,EAAUrK,EAAcd,EAAMoL,IAAMpL,EAAMoL,GAAGnK,WAAQ6C,EACrD6G,EAAU7J,EAAcd,EAAM0B,IAAM1B,EAAM0B,GAAGT,WAAQ6C,EACrDuH,EAAWvK,EAAcd,EAAMsL,KAAOtL,EAAMsL,IAAIrK,WAAQ6C,EAExDgI,EAAS5I,MACVnE,OAAO,CAAC,EAAG,KACXC,MAAM,CAACoE,EAAGlE,EAAGkE,EAAGlE,EAAIkE,EAAG7G,QACtBwP,EAAS7I,MACVnE,OAAO,CAAC,EAAG,KACXC,MAAM,CAACoE,EAAGlC,EAAGkC,EAAGlC,EAAIkC,EAAG5G,SAGtBwP,EAKA,GAEAzE,EAAWgD,EAAgBvK,GAC7BuH,EAASnH,SAAS,SAClB4L,EAAMtJ,KAAK,CACPxD,EAAG,kBAAMkE,EAAGlE,GACZD,GAAI,kBAAMmE,EAAGlE,GACbgC,EAAG,SAACZ,GAAD,OAAcyL,EAAOzL,EAAEoK,KAC1BU,GAAI,SAAC9K,GAAD,OAAcyL,EAAOzL,EAAE6K,OAG/B5D,EAASnH,SAAS,WAClB4L,EAAMtJ,KAAK,CACPxD,EAAG,SAACoB,GAAD,OAAcwL,EAAOxL,EAAEkK,KAC1BvL,GAAI,SAACqB,GAAD,OAAcwL,EAAOxL,EAAE2K,KAC3B/J,EAAG,kBAAMkC,EAAGlC,EAAIkC,EAAG5G,QACnB4O,GAAI,kBAAMhI,EAAGlC,EAAIkC,EAAG5G,UAGxB+K,EAASnH,SAAS,QAClB4L,EAAMtJ,KAAK,CACPxD,EAAG,SAACoB,GAAD,OAAcwL,EAAOxL,EAAEmK,KAC1BxL,GAAI,SAACqB,GAAD,OAAcwL,EAAOxL,EAAE4K,KAC3BhK,EAAG,kBAAMkC,EAAGlC,GACZkK,GAAI,kBAAMhI,EAAGlC,KAGjBqG,EAASnH,SAAS,UAClB4L,EAAMtJ,KAAK,CACPxD,EAAG,kBAAMkE,EAAGlE,EAAIkE,EAAG7G,OACnB0C,GAAI,kBAAMmE,EAAGlE,EAAIkE,EAAG7G,OACpB2E,EAAG,SAACZ,GAAD,OAAcyL,EAAQzL,EAAEqK,KAC3BS,GAAI,SAAC9K,GAAD,OAAcyL,EAAQzL,EAAE+K,OAKpC9G,EAAEG,UAAU,YACPlE,KAAKR,EAAMQ,MACXkF,QACAlB,OAAO,WACPF,KAAK,UAAU,SAAAhE,GACZ,IAAM6L,EAAiB,UAAMH,EAAM,GAAG9M,EAAEoB,GAAjB,YAAuB0L,EAAM,GAAG9K,EAAEZ,IACnD8L,EAAe,UAAMJ,EAAM,GAAG/M,GAAGqB,GAAlB,YAAwB0L,EAAM,GAAGZ,GAAG9K,IACnD+L,EAAmB,UAAML,EAAM,GAAG/M,GAAGqB,GAAlB,YAAwB0L,EAAM,GAAGZ,GAAG9K,IACvDgM,EAAiB,UAAMN,EAAM,GAAG9M,EAAEoB,GAAjB,YAAuB0L,EAAM,GAAG9K,EAAEZ,IACzD,MAAM,GAAN,OAAU6L,EAAV,YAA+BC,EAA/B,YAAkDC,EAAlD,YAAyEC,MAE5EhI,KAAK,OAAQqH,EAAOM,WAAW7B,MAC/B9F,KAAK,SAAUqH,EAAOM,WAAWzM,QACjC8E,KAAK,eAAgBqH,EAAOM,WAAWxM,aACvC6E,KAAK,UAAWqH,EAAOM,WAAW9M,SJQnBoN,CAAsBhI,EAAD,YAAC,eAAQuG,EAAG9K,OAAZ,IAAmBQ,SAAiBsK,EAAGzH,qBAfxEyE,EAAM0E,mBKtEX,SAASC,EACZlI,EACAmI,EACAC,EACAtJ,GACD,IAAD,MACQxB,EAAY,oBAAG6K,EAAGhQ,cAAN,aAAG,EAAWmF,YAAd,QAAsB,IAGlC+K,EAAiF,GACnFC,EAAOxJ,EAAYnE,EACnB4N,EAAOzJ,EAAYnC,EACM,gBAAzB,UAAAwL,EAAGhQ,cAAH,eAAWkF,WACX8K,EAAG5M,OAAO0C,SAAQ,SAACxC,EAAOH,GAClBI,EAAgBD,KAChB4M,EAAUlK,KAAK,CACX1C,QAAOqD,YAAa,CAChBnE,EAAG2N,EAAMtQ,MAAOyD,EAAMzD,MACtB2E,EAAG4L,EAAMtQ,OAAQwD,EAAMxD,UAG/BqQ,GAAQ7M,EAAMzD,MCxBL,EDyBLsD,EAAIgC,IAASA,EAAO,IACpBgL,EAAOxJ,EAAYnE,EACnB4N,EAAOA,GAAQ9M,EAAMxD,OC3BhB,ODgCjBkQ,EAAG5M,OAAO0C,SAAQ,SAACxC,EAAOH,GAClBI,EAAgBD,KAChB4M,EAAUlK,KAAK,CACX1C,QAAOqD,YAAa,CAChBnE,EAAG2N,EAAMtQ,MAAOyD,EAAMzD,MACtB2E,EAAG4L,EAAMtQ,OAAQwD,EAAMxD,UAG/BsQ,GAAQ9M,EAAMxD,OCxCL,EDyCLqD,EAAIgC,IAASA,EAAO,IACpBgL,EAAOA,GAAQ7M,EAAMzD,MC1ChB,ED2CLuQ,EAAOzJ,EAAYnC,OAQnCqD,EAAEG,UAAU,QACPlE,KAAKoM,GACLlH,QACAlB,OAAO,QACPF,KAAK,KAAK,SAAAhE,GAAC,OAAIA,EAAE+C,YAAYnE,KAC7BoF,KAAK,SAAS,SAAAhE,GAAC,OAAIA,EAAE+C,YAAY9G,SACjC+H,KAAK,KAAK,SAAAhE,GAAC,OAAIA,EAAE+C,YAAYnC,KAC7BoD,KAAK,UAAU,SAAAhE,GAAC,OAAIA,EAAE+C,YAAY7G,UAClC8H,KAAK,QAAQ,SAAAhE,GAAC,OAAIyM,EAAWjL,WAAWxB,EAAEN,UAC1CsE,KAAK,UAAU,SAAAhE,GAAC,OAAIyM,EAAWvN,OAAOc,EAAEN,UACxCsE,KAAK,gBAAgB,SAAAhE,GAAC,OAAIyM,EAAWtN,YAAYa,EAAEN,UAGxD4K,EAAkBrG,EAAGqI,EAAUrH,QAAO,SAAAjF,GAAC,MAAqB,iBAAjBA,EAAEN,MAAM5B,SE3DhD,SACHmG,EACAsG,EACA8B,GAEA,IAAMK,EAA8B,GACpCnC,EAAarI,SAAQ,SAAAsI,GAAO,IAChB9K,EAA2B8K,EAA3B9K,MAAoBoD,EAAO0H,EAApBzH,YAGf2J,EAAYtK,KAAK,CAAEW,YAAaD,EAAI6J,WAAY9E,EAASnI,EAAOoD,QAEpEuJ,EAAeK,GFkDfE,CAAc3I,EAAGqI,EAAUrH,QAAO,SAAAjF,GAAC,OAAII,EAAeJ,EAAEN,UAAS2M,GGjE9D,IAAMI,EAAa,CACtBjL,WAAY,SAAC9B,GAAD,mCAAkBA,EAAMZ,aAAxB,aAAkB,EAAa0C,kBAA/B,QAA6C,SACzDtC,OAAQ,SAACQ,GAAD,mCAAkBA,EAAMZ,aAAxB,aAAkB,EAAaI,cAA/B,QAAyC,WACjDC,YAAa,SAACO,GAAD,mCAAkBA,EAAMZ,aAAxB,aAAkB,EAAaK,mBAA/B,QAA8C,IAGxD,SAAS0N,GACZ5I,EACAmI,EACAC,EACAtJ,GACD,IAAD,EACEkB,EAAEG,UAAU,KAAKC,SAEO,cAApB,UAAA+H,EAAGhQ,cAAH,eAAW2B,MCNZ,SACHkG,EACAmI,EACAC,EACAtJ,GACD,IAAD,QACQxB,EAAY,oBAAG6K,EAAGhQ,cAAN,aAAG,EAAWmF,YAAd,QAAsB,IAClCuL,EAAc/J,EAAY7G,OAAS,EACnC6Q,EAAcnK,IAES,gBAAzB,UAAAwJ,EAAGhQ,cAAH,eAAWkF,WACP8K,EAAG5M,OAAOyF,QAAO,SAAC+H,EAAGzN,GAAJ,OAAUA,EAAIgC,KAC1BkB,KAAI,SAAAzC,GAAC,OAAIL,EAAgBK,GAAKA,EAAE/D,MAAkB,KACvDmQ,EAAG5M,OAAOyF,QAAO,SAAC+H,EAAGzN,GAAJ,OAAUA,EAAIgC,GAAQ,KAClCkB,KAAI,SAAAzC,GAAC,OAAIL,EAAgBK,GAAKA,EAAE/D,MAAkB,MAGzDgR,EAAqB,EAAV5J,KAAK6J,GAAS,IAGzBZ,EAAqE,GACvEa,EAAoB,EACpBC,EAAY,EACa,gBAAzB,UAAAhB,EAAGhQ,cAAH,eAAWkF,WAEX8K,EAAG5M,OAAO0C,SAAQ,SAACxC,EAAOH,GACtB,GAAII,EAAgBD,GAAQ,CACxB,IAAM2N,EAAiB3N,EAAMxD,OACvBuD,EAASC,EAAMzD,MACfqR,EAAwB,EAAVjK,KAAK6J,GAAUE,EAAYL,EAAcE,EACvDM,EAAWD,EAAwB,EAAVjK,KAAK6J,GAAUzN,EAASsN,EAAcE,EACrEX,EAAUlK,KAAK,CACX1C,QAAO8N,IAAK,CACRC,YAAaX,EAAcK,EAAoBE,EAC/CK,YAAaZ,EAAcK,EAC3BG,aACAC,cAGRH,GAAa3N,EACTF,EAAIgC,IAASA,EAAO,IACpB6L,EAAY,EACZD,GAAqBE,EHpDhB,OG2DjBjB,EAAG5M,OAAO0C,SAAQ,SAACxC,EAAOH,GACtB,GAAII,EAAgBD,GAAQ,CACxB,IAAM2N,EAAiB3N,EAAMxD,OACvBuD,EAASC,EAAMzD,MACfqR,EAAwB,EAAVjK,KAAK6J,GAAUE,EAAYL,EAAcE,EACvDM,EAAWD,EAAwB,EAAVjK,KAAK6J,GAAUzN,EAASsN,EAAcE,EACrEX,EAAUlK,KAAK,CACX1C,QAAO8N,IAAK,CACRC,YAAaX,EAAcK,EAAoBE,EAC/CK,YAAaZ,EAAcK,EAC3BG,aACAC,cAGRJ,GAAqBE,EHzEZ,EG0EL9N,EAAIgC,IAASA,EAAO,IACpB4L,EAAoB,EACpBC,GAAa3N,OAM7B4F,QAAQgE,IAAI,OAAQiD,GACpBrI,EAAEC,OAAO,KACJF,KAAK,YADV,oBACoCjB,EAAYnE,EAAIkO,EADpD,aACoE/J,EAAYnC,EAAIkM,EADpF,MAEK1I,UAAU,QACVlE,KAAKoM,GACLlH,QACAlB,OAAO,QACPF,KAAK,QAAQ,SAAAhE,GAAC,OAAIyM,EAAWjL,WAAWxB,EAAEN,UAC1CsE,KAAK,UAAU,SAAAhE,GAAC,OAAIyM,EAAWvN,OAAOc,EAAEN,UACxCsE,KAAK,gBAAgB,SAAAhE,GAAC,OAAIyM,EAAWtN,YAAYa,EAAEN,UACnDsE,KAAK,KAAK,SAAAhE,GAAC,OAAI4C,MACX6K,YAAYzN,EAAEwN,IAAIC,aAClBC,YAAY1N,EAAEwN,IAAIE,YAFP9K,CAEoB5C,EAAEwN,QD7EtCG,CAAqB1J,EAAGmI,EAAIC,EAAgBtJ,GAE5CoJ,EAAmBlI,EAAGmI,EAAIC,EAAgBtJ,GET3C,SAAS6K,GAAcxB,GAAiB,IAAD,QACpC7N,EAAO,CAAEtC,MAAO,EAAGC,OAAQ,GAC3BqF,EAAY,oBAAG6K,EAAGhQ,cAAN,aAAG,EAAWmF,YAAd,QAAsB,IA0CxC,MAzCwB,cAApB,UAAA6K,EAAGhQ,cAAH,eAAW2B,OAGXQ,EAAKrC,OAAS2R,IACdtP,EAAKrC,QAAU0G,IAGXwJ,EAAG5M,OAAOyF,QAAO,SAAC+H,EAAGzN,GAAJ,OAAUA,EAAIgC,IAAS,KACnCkB,KAAI,SAAA/C,GAAK,OAAIC,EAAgBD,GAASA,EAAMxD,OAAmB,MAExEqC,EAAKtC,MAAQsC,EAAKrC,QAEY,gBAAzB,UAAAkQ,EAAGhQ,cAAH,eAAWkF,YAChB/C,EAAKtC,MAAQ2G,IAETwJ,EAAG5M,OAAOyF,QAAO,SAAC+H,EAAGzN,GAAJ,OAAUA,EAAIgC,KAC1BkB,KAAI,SAAA/C,GAAK,OAAIC,EAAgBD,GAASA,EAAMzD,MAAkB,MAEvEsC,EAAKrC,OAAS0G,IAEVwJ,EAAG5M,OAAOyF,QAAO,SAAC+H,EAAGzN,GAAJ,OAAUA,EAAIgC,IAAS,KACnCkB,KAAI,SAAA/C,GAAK,OAAIC,EAAgBD,GAASA,EAAMxD,OAAmB,MAGxEqC,EAAKtC,OJrCY,EIqCH2G,IAAO,CAACrB,EAAO,EAAG6K,EAAG5M,OAAOC,OAAS,IACnDlB,EAAKrC,QJtCY,EIsCFmH,KAAKyK,MAAM1B,EAAG5M,OAAOC,OAAS8B,KAE7ChD,EAAKtC,MAAQ2G,IAETwJ,EAAG5M,OAAOyF,QAAO,SAAC+H,EAAGzN,GAAJ,OAAUA,EAAIgC,IAAS,KACnCkB,KAAI,SAAA/C,GAAK,OAAIC,EAAgBD,GAASA,EAAMzD,MAAkB,MAEvEsC,EAAKrC,OAAS0G,IAEVwJ,EAAG5M,OAAOyF,QAAO,SAAC+H,EAAGzN,GAAJ,OAAUA,EAAIgC,KAC1BkB,KAAI,SAAA/C,GAAK,OAAIC,EAAgBD,GAASA,EAAMxD,OAAmB,MAGxEqC,EAAKtC,OJnDY,EImDHoH,KAAKyK,MAAM1B,EAAG5M,OAAOC,OAAS8B,GAC5ChD,EAAKrC,QJpDY,EIoDF0G,IAAO,CAACrB,EAAO,EAAG6K,EAAG5M,OAAOC,OAAS,KAEjDlB,E,OCmHIwP,OA3Jf,WAEI,IAAMC,EAAWtS,iBAAsB,MACjCuS,EAAYvS,iBAAsB,MAH1B,EAIwCC,mBAAyB,IAJjE,mBAIPuS,EAJO,KAIcC,EAJd,OAQUxS,mBAAS8E,EAVP,IAEZ,mBAQP2N,EARO,KAQDC,EARC,OASsB1S,mBAAuD,yBAT7E,mBASP2S,EATO,KASKC,EATL,OAUM5S,mBAASgM,IAAUlH,EAZb,GAY0CnB,OAVtD,mBAUP8M,EAVO,KAUHoC,EAVG,OAWsB7S,mBAAS8E,EAbnB,GAagDK,YAX5D,mBAWPA,EAXO,KAWK2N,EAXL,OAYwB9S,mBAAS8E,EAdrB,GAckDM,aAZ9D,mBAYPA,EAZO,KAYM2N,EAZN,KAcd7S,qBAAU,WAGF2S,EAFe,0BAAfF,EAEM3G,IAAUtI,EAAcqI,KAAKiH,MAAMhH,IAAUyG,EAAK9O,SAElDqI,IAAUyG,EAAK9O,OAEzBmP,EAAcL,EAAKtN,YACnB4N,EAAeN,EAAKrN,aACpBoN,EAAuB,MACxB,CAACC,EAAME,IAEVzS,qBAAU,WAAO,IAAD,IACR+S,EACJ,IACIA,EAAWvP,EAAcqI,KAAKiH,MAAMvC,IACtC,MAAO9O,GACL+H,QAAQC,KAAK,kCAEjB,GAAKsJ,EAAL,EC7CD,SACHlL,EACA0I,EACArJ,EACAsJ,GAEA,GAAK3I,GAAQ0I,EAAb,CACAxJ,IAAUc,GAAKU,UAAU,KAAKC,SAG9B,IAAMmB,EAAYzC,EAAYnE,EAAG6G,EAAY1C,EAAYnC,EAKzD6C,EAAiBC,EAJHX,EAAY9G,MAAoB,EAAZuJ,EACnBzC,EAAY7G,OAAqB,EAAZuJ,EAGCD,EAAWC,GAAW,GAM3DoH,GAJejK,IAAUc,GAAKQ,OAAO,KAChCF,KAAK,QAASjB,EAAY9G,OAC1B+H,KAAK,SAAUjB,EAAY7G,QAEXkQ,EAAIC,EAAgBtJ,ID2BrC8L,CACIZ,EAAU9R,QACVyS,EACA,CACIhQ,EAAG,GAAIgC,EAAG,GACV3E,MAAO2R,GAAcgB,GAAU3S,MAC/BC,OAAQ0R,GAAcgB,GAAU1S,SAEpC,SAAC4S,GACGX,EAAuBW,MAG/BlM,IAAUoL,EAAS7R,SAASiI,UAAU,KAAKC,SAC3C,IAAM3E,EAAK,UAAIkP,SAAJ,iBAAG,EAA0BpP,cAA7B,aAAG,EAAkCO,MAC5C,SAAAC,GAAC,SAAIL,EAAgBK,KAAMJ,EAAWI,EAAElC,QAAwB,kBAAhBkC,EAAElC,KAAKC,QAEtD2B,GAGDC,EAAgBD,IAAUO,EAAWP,EAAMQ,OAC3C0C,IAAOlD,EAAMQ,KAAKG,KAAK+K,MAAK,SAAAlL,GAAI,OAC5BiE,EACI6J,EAAS7R,QADK,YAAC,eAEVuD,GAFS,IAEFQ,SACZY,EACAC,SAIb,CAACqL,EAAItL,EAAYC,IAEpB,IAAMgO,EAASC,mBAAQ,WACnB,OAAOd,EAAoBzL,KAAI,SAAAwM,GAAE,OAC7B,yBAAK/D,IAAKvD,IAAUsH,EAAGtC,YACnB7N,MAAO,CACHmI,SAAU,WACViI,QAAS,QACT7I,KAAM4I,EAAGlM,YAAYnE,EACrBwH,IAAK6I,EAAGlM,YAAYnC,EACpB3E,MAAOgT,EAAGlM,YAAY9G,MACtBC,OAAQ+S,EAAGlM,YAAY7G,SAE3B,kBAAC,mBAAD,CACIM,QAAS,CACL2S,SAAS,EACTC,kBAAmB,EACnBC,kBAAmB,EACnBC,cAAe,EACfC,iBAAkB,EAClBC,eAAgB,EAChBC,gBAAiB,EACjBC,eAAgB,EAChBC,kBAAmB,EACnBC,gBAAiB,EACjBC,iBAAkB,EAClBC,SAAU,WAEdnD,WAAYsC,EAAGtC,mBAI5B,CAACuB,IAEJ,OACI,oCACI,yBAAK6B,UAAU,eAAf,uBACc,wCACV,4BACI1S,SAAU,SAAAC,GACN+Q,EAAQ5N,EAAMV,MAAK,SAAAC,GAAC,OAAIA,EAAEnC,OAASP,EAAE0S,OAAO1T,WAEhD2T,aAAc7B,EAAKvQ,MAClB4C,EAAMgC,KAAI,SAAAzC,GAAC,OACR,4BAAQkL,IAAKlL,EAAEnC,KAAMvB,MAAO0D,EAAEnC,MACzBmC,EAAEnC,UAIf,4BACIR,SAAU,SAAAC,GACNiR,EAAcjR,EAAE0S,OAAO1T,QAE3B2T,aAAc,yBACb,CAAC,wBAAyB,oBAAoBxN,KAAI,SAAAzC,GAAC,OAChD,4BAAQkL,IAAKlL,EAAG1D,MAAO0D,GAClBA,QAKjB,yBAAK+P,UAAU,UACX,kBAAC,IAAD,CAAWhI,MAAM,WAAWmI,YAAY,MAAM7S,SAAU,cAEpD,kBAAC,EAAD,CACI9B,KAAM6Q,EACN5Q,UAAU,EACV6B,SAAU8S,oBAAS,SAAA5U,GACfiT,EAAMjT,KACP,OAGP,kBAAC,IAAD,CAAWwM,MAAM,aAAamI,YAAY,MAAM7S,SAAU,cACtD,yBAAK0S,UAAU,qBACX,qDACA,6BAAK,yBAAKK,IAAKpC,MAEnB,yBAAK+B,UAAU,qBACX,6CACA,yBAAKjR,MAAO,CAAEmI,SAAU,aACpB,yBAAKmJ,IAAKnC,IACTc,SEzJbsB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,SDiIpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB7F,MAAK,SAAA8F,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLhM,QAAQgM,MAAMA,EAAMC,c","file":"static/js/main.994d68fe.chunk.js","sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\nimport MonacoEditor from 'react-monaco-editor';\nimport * as Monaco from 'monaco-editor/esm/vs/editor/editor.api';\nimport ReactResizeDetector from 'react-resize-detector';\n\nconst DEBUG_WITHOUT_DIAGNOSIS = true;\n\nfunction EditorPanel(props: {\n    code: string,\n    readOnly?: boolean,\n    onChange?: (code: string) => void\n}) {\n\n    const { code: templateCode, readOnly } = props;\n    const editor = useRef<Monaco.editor.IStandaloneCodeEditor | null>(null);\n    const [code, setCode] = useState(templateCode);\n\n    useEffect(() => {\n        setCode(templateCode);\n    }, [templateCode]);\n\n    function editorDidMount(monacoEditor: Monaco.editor.IStandaloneCodeEditor, monaco: typeof Monaco) {\n        editor.current = monacoEditor;\n        monacoEditor.focus();\n    }\n\n    function setupDiagnostics() {\n        if (DEBUG_WITHOUT_DIAGNOSIS) return;\n        Monaco.languages.json.jsonDefaults.setDiagnosticsOptions({\n            allowComments: false,\n            enableSchemaRequest: true,\n            validate: true,\n            schemas: [{\n                uri: \"https://raw.githubusercontent.com/higlass/higlass/develop/app/schema.json\",\n                fileMatch: ['*']\n            }]\n        });\n        Monaco.languages.json.jsonDefaults.setModeConfiguration({\n            documentFormattingEdits: false,\n            documentRangeFormattingEdits: false,\n            completionItems: true,\n            hovers: true,\n            documentSymbols: true,\n            tokens: true,\n            colors: true,\n            foldingRanges: true,\n            diagnostics: true,\n        });\n    }\n\n    function onChangeHandle(code: string, e: any) {\n        setCode(code);\n        if (props.onChange) props.onChange(code);\n        // console.log('onChange', code, e);\n\n        setupDiagnostics();\n    }\n\n    function editorWillMount(monaco: typeof Monaco) {\n        setupDiagnostics();\n    }\n\n    return (\n        <>\n            <ReactResizeDetector\n                handleWidth\n                handleHeight\n                onResize={(width: number, height: number) => {\n                    editor?.current?.layout({ width, height });\n                }}\n            ></ReactResizeDetector>\n            <MonacoEditor\n                // Refer to https://github.com/react-monaco-editor/react-monaco-editor\n                language=\"json\"\n                value={code}\n                theme={\"test\"}\n                options={{\n                    autoClosingBrackets: \"never\",\n                    autoClosingQuotes: \"never\",\n                    cursorBlinking: \"smooth\",\n                    folding: true,\n                    lineNumbersMinChars: 4,\n                    minimap: { enabled: false },\n                    scrollBeyondLastLine: false,\n                    wordWrap: \"on\",\n                    lineNumbers: \"off\",\n                    renderLineHighlight: \"line\",\n                    renderIndentGuides: true,\n                    readOnly\n                }}\n                onChange={onChangeHandle}\n                editorDidMount={editorDidMount}\n                editorWillMount={editorWillMount}\n            />\n        </>\n    );\n}\nexport default EditorPanel;","import { Mark } from '../../../gemini.schema';\n\nimport { GLYPH_GENE_ANNOTATAION } from './glyph-gene-annotation-plot';\nimport { GLYPH_LOGO } from './glyph-logo';\nimport { GLYPH_GENE_ANNOTATAION_V2 } from './glyph-gene-annotation-plot-v2';\nimport { GLYPH_CYTOGENETIC_BAND } from './glyph-cytogenetic-band';\n\nexport const GLYPH_PRESETS: {\n    name: GLYPH_LOCAL_PRESET_TYPE,\n    mark: Mark\n}[] = [\n        {\n            name: 'glyph-gene-annotation-v1',\n            mark: GLYPH_GENE_ANNOTATAION\n        },\n        {\n            name: 'glyph-gene-annotation-v2',\n            mark: GLYPH_GENE_ANNOTATAION_V2\n        },\n        {\n            name: 'cytogenetic-band-v1',\n            mark: GLYPH_CYTOGENETIC_BAND\n        },\n        {\n            name: 'glyph-logo-plot-v1',\n            mark: GLYPH_LOGO\n        }\n    ];\n\nexport type GLYPH_LOCAL_PRESET_TYPE =\n    | 'glyph-gene-annotation-v1'\n    | 'glyph-gene-annotation-v2'\n    | 'cytogenetic-band-v1'\n    | 'glyph-logo-plot-v1'\n\nexport type GLYPH_HIGLASS_PRESET_TYPE =\n    | 'gene-annotation-higlass'\n\nexport const GLYPH_HIGLASS_PRESET_TYPES: GLYPH_HIGLASS_PRESET_TYPE[] = [\n    'gene-annotation-higlass'\n]\n\nexport const GLYPH_LOCAL_PRESET_TYPES: (GLYPH_LOCAL_PRESET_TYPE | GLYPH_HIGLASS_PRESET_TYPE)[] = [\n    'glyph-gene-annotation-v1',\n    'glyph-gene-annotation-v2',\n    'cytogenetic-band-v1',\n    'glyph-logo-plot-v1'\n];","import { MarkGlyph } from '../../../gemini.schema';\n\nexport const GLYPH_GENE_ANNOTATAION: MarkGlyph = {\n    type: 'compositeMark',\n    name: 'gene-annotation',\n    requiredChannels: [\n        // TODO: What about optional channels?\n        'x', 'xe',\n        'y', 'color', // + or - strand?\n        'geneOrExon', // genes or exons?\n        'exonId',\n        'exonVersion' // filtering by\n    ],\n    elements: [\n        {\n            // Should render once\n            description: 'horizontal line',\n            select: [\n                { channel: 'geneOrExon', oneOf: ['gene'] },\n            ],\n            mark: 'line',\n            color: { value: 'black' },\n            size: { value: 3 }\n        },\n        {\n            description: 'exon',\n            select: [\n                { channel: 'geneOrExon', oneOf: ['exon'] },\n                { channel: 'exonVersion', oneOf: ['2'] }\n            ],\n            mark: 'rect',\n            size: { value: 25 }\n        },\n        {\n            description: 'gene left',\n            select: [\n                { channel: 'geneOrExon', oneOf: ['gene'] },\n            ],\n            mark: {\n                bind: 'y',\n                domain: ['-', '+'],\n                range: ['triangle-l', 'rule']\n            },\n            size: { value: 25 },\n            xe: 'none'\n        },\n        {\n            description: 'gene right',\n            select: [\n                { channel: 'geneOrExon', oneOf: ['gene'] },\n            ],\n            mark: {\n                bind: 'y',\n                domain: ['-', '+'],\n                range: ['rule', 'triangle-r']\n            },\n            size: { value: 25 },\n            x: { bind: 'xe' },\n            xe: 'none'\n        },\n        {\n            mark: 'text',\n            select: [\n                { channel: 'geneOrExon', 'oneOf': ['gene'] }\n            ],\n            opacity: { value: 1 },\n            size: { value: 18 },\n            style: {\n                dy: -20\n            }\n        },\n        {\n            mark: 'text',\n            select: [\n                { channel: 'geneOrExon', oneOf: ['exon'] },\n                { channel: 'exonVersion', oneOf: ['2'] }\n            ],\n            text: { bind: 'exonId' },\n            opacity: { value: 1 },\n            size: { value: 6 },\n            style: {\n                dy: 28\n            }\n        }\n    ]\n}","import { MarkGlyph } from \"../../../gemini.schema\";\n\nexport const GLYPH_GENE_ANNOTATAION_V2: MarkGlyph = {\n    \"type\": 'compositeMark',\n    \"name\": \"gene-annotation\",\n    \"requiredChannels\": [\n        // TODO: What about optional channels?\n        \"x\", \"xe\",\n        \"y\", 'color', // + or - strand?\n        \"geneOrExon\" // genes or exons?\n    ],\n    \"elements\": [\n        {\n            // Should render once\n            \"description\": \"gene\",\n            \"select\": [\n                { \"channel\": \"geneOrExon\", \"oneOf\": [\"gene\"] },\n            ],\n            \"mark\": \"rect\",\n            \"size\": { \"value\": 25 }\n        },\n        {\n            \"description\": \"gene head\",\n            \"select\": [\n                { \"channel\": \"geneOrExon\", \"oneOf\": [\"gene\"] },\n                { \"channel\": \"y\", \"oneOf\": [\"-\"] }\n            ],\n            \"mark\": \"triangle-l\",\n            \"size\": { \"value\": 25 },\n            \"xe\": 'none'\n        },\n        {\n            \"description\": \"gene right\",\n            \"select\": [\n                { \"channel\": \"geneOrExon\", \"oneOf\": [\"gene\"] },\n                { \"channel\": \"y\", \"oneOf\": [\"+\"] },\n            ],\n            \"mark\": \"triangle-r\",\n            \"size\": { \"value\": 25 },\n            \"x\": { \"bind\": \"xe\" },\n            \"xe\": 'none'\n        },\n        {\n            \"description\": \"horizontal line\",\n            \"select\": [\n                { \"channel\": \"geneOrExon\", \"oneOf\": [\"gene\"] },\n            ],\n            \"mark\": \"line\",\n            \"color\": { \"value\": \"gray\" },\n            \"size\": { \"value\": 2 },\n            'style': {\n                dashed: \"3, 3\"\n            }\n        },\n        {\n            \"mark\": \"text\",\n            \"select\": [\n                { \"channel\": \"geneOrExon\", 'oneOf': [\"gene\"] }\n            ],\n            \"color\": { \"value\": \"black\" },\n            \"opacity\": { \"value\": 1 },\n            size: { value: 18 },\n            style: {\n                dy: -20\n            }\n        }\n    ]\n}","import { MarkGlyph } from \"../../../gemini.schema\";\n\nexport const GLYPH_CYTOGENETIC_BAND: MarkGlyph = {\n    \"type\": 'compositeMark',\n    \"name\": \"cytogenetic-band\",\n    \"requiredChannels\": [\n        // TODO: What about optional channels?\n        \"x\", \"xe\", // start, end\n        \"y\", // chr\n        'color', // strain\n        'text', // band\n        'stain' // gneg, gpos, gvar, or acen\n    ],\n    \"elements\": [\n        {\n            \"description\": \"symbols\",\n            \"select\": [{ channel: 'stain', oneOf: ['gneg', 'gpos', 'gvar'] }],\n            \"mark\": \"rect\",\n            \"size\": { \"value\": 25 },\n            style: {\n                stroke: 'black',\n                strokeWidth: 1\n            }\n        },\n        {\n            \"description\": \"acen\",\n            \"select\": [{ channel: 'text', oneOf: ['11', '11.1'] }],\n            \"mark\": { bind: 'text', domain: ['11', '11.1'], range: ['triangle-l', 'triangle-r'] },\n            'color': { value: '#B40101' },\n            \"size\": { \"value\": 25 },\n            style: {\n                stroke: 'black',\n                strokeWidth: 1\n            }\n        },\n        {\n            mark: 'text',\n            select: [{ channel: 'color', oneOf: ['100', '75', '50'] }],\n            color: { value: 'black' },\n            size: { value: 10 },\n            style: {\n                dy: -20\n            }\n        }\n    ]\n}","import { Mark } from \"../../../gemini.schema\";\n\nexport const GLYPH_LOGO: Mark = {\n    \"type\": 'compositeMark',\n    \"name\": \"logo\",\n    \"requiredChannels\": [\n        \"x\", \"xe\", \"y\"\n    ],\n    \"elements\": [\n        {\n            \"mark\": \"bar\"\n        },\n        {\n            \"mark\": \"text\",\n            \"color\": { \"value\": \"black\" }\n        }\n    ]\n}","import Ajv from 'ajv';\nimport uuid from \"uuid\";\nimport { GeminiSpec, Mark, IsNotEmptyTrack, IsMarkDeep } from '../gemini.schema';\nimport { GLYPH_LOCAL_PRESET_TYPES, GLYPH_PRESETS } from \"../test/gemini/glyph\";\n\nexport function replaceGlyphs(spec: GeminiSpec): GeminiSpec {\n    for (let i = 0; i < spec.tracks.length; i++) {\n        const track = spec.tracks[i];\n        if (IsNotEmptyTrack(track) && IsMarkDeep(track.mark)) {\n            const predefinedGlyph = track.mark.type;\n            if (GLYPH_LOCAL_PRESET_TYPES.includes(predefinedGlyph as any /* TODO */)) {\n                track.mark = GLYPH_PRESETS.find(d => d.name === predefinedGlyph)?.mark as Mark;\n            }\n        }\n    }\n    return spec;\n}\n\nexport function generateReadableTrackUid(pre: string | undefined, n: number) {\n    // TODO: Add track type\n\n    // TODO: This is to properly update higlass upon editor changes. Ultimately, remove this.\n    // (Refer to https://github.com/sehilyi/gemini/issues/7)\n    const id = uuid.v1();\n    if (pre) return `${pre}-track-${n}-(${id})`;\n    else return `track-${n}-${id}`;\n}\n\nexport function validTilesetUrl(url: string) {\n    if (\n        !url.includes(\"tileset_info/?d=\")\n        ||\n        (!url.includes(\"https:\") && !url.includes(\"http:\"))\n    ) {\n        return false;\n    }\n    return true;\n}\n\nexport function parseServerAndTilesetUidFromUrl(url: string) {\n    if (\n        !url.includes(\"tileset_info/?d=\")\n        ||\n        (!url.includes(\"https:\") && !url.includes(\"http:\"))\n    ) {\n        // TODO: Add RE to validate the format.\n        console.warn(\"Data url format is incorrect:\" + url);\n        return { server: undefined, tilesetUid: undefined };\n    }\n\n\n    const server = url.split(\"tileset_info/?d=\")[0]\n    const tilesetUid = url.split(\"tileset_info/?d=\")[1]\n    return { server, tilesetUid };\n}\n\nexport function validateHG(hg: any): boolean {\n\n    const validate = new Ajv({ extendRefs: true }).compile({ /*  */ });\n    const valid = validate(hg);\n\n    if (validate.errors) {\n        console.warn(JSON.stringify(validate.errors, null, 2));\n    }\n\n    // TODO: check types such as default values and locationLocks\n\n    return valid as boolean;\n}","// Refer to the following url for dealing with defaults:\n// https://github.com/vega/vega-lite/blob/23fe2b9c6a82551f321ccab751370ca48ae002c9/src/channeldef.ts#L961\n\nimport { GLYPH_LOCAL_PRESET_TYPE, GLYPH_HIGLASS_PRESET_TYPE } from './test/gemini/glyph'\nimport { validTilesetUrl } from './utils';\n\nexport interface GeminiSpec {\n    references?: string[]\n    description?: string\n    layout?: Layout\n    tracks: (Track | GenericType<Channel> | EmptyTrack)[] // TODO: `Track` does not mean anything here because of `GenericType`\n}\n\nexport interface Layout {\n    type: \"linear\" | \"circular\"\n    direction: \"vertical\" | \"horizontal\"\n    wrap?: number // TODO: does not work now\n    // TODO: Currently, these two are used only for circular layout.\n    width?: number\n    height?: number\n}\n\nexport interface GenericType<T> {\n    [k: string]: T\n}\n\n/**\n * Tracks\n */\nexport interface DataDeep { url: string, type: 'tileset' | 'csv' }\nexport interface EmptyTrack { }\nexport interface Track {\n    // primitives\n    data: DataDeep | Datum[]\n    mark: Mark\n    // coordinates\n    x?: Channel\n    y?: Channel\n    xe?: Channel\n    ye?: Channel\n    // coordinates for link\n    x1?: Channel\n    y1?: Channel\n    x1e?: Channel\n    y1e?: Channel\n    // others\n    color?: Channel\n    opacity?: Channel\n    size?: Channel\n    text?: Channel\n    w?: Channel\n    h?: Channel\n    // styles\n    width?: number\n    height?: number\n    style?: TrackStyle\n}\n\nexport interface TrackStyle {\n    background?: string\n    stroke?: string\n    strokeWidth?: number\n}\n\n/**\n * Data\n */\nexport interface Datum {\n    [k: string]: number | string\n}\n\n/**\n * Channel\n */\nexport const ChannelTypes = {\n    // coordinates\n    x: 'x',\n    y: 'y',\n    xe: 'xe',\n    ye: 'ye',\n    // coordinates for link\n    x1: 'x1',\n    y1: 'y1',\n    x1e: 'x1e',\n    y1e: 'y1e',\n    // others\n    color: 'color',\n    opacity: 'opacity',\n    size: 'size',\n    text: 'text',\n    w: 'w'\n} as const;\n\nexport type ChannelType = keyof typeof ChannelTypes | string\n\nexport type Channel = ChannelDeep | ChannelValue\n\nexport interface ChannelDeep {\n    field?: string\n    type?: 'genomic' | 'nominal' | 'quantitative'\n    aggregate?: Aggregate\n    domain?: string[] | number[]\n    range?: string[]\n    axis?: boolean\n}\n\nexport interface ChannelValue {\n    value: number | string\n}\n\nexport type Aggregate = 'max' | 'min' | 'mean'\n\n/**\n * Mark\n */\nexport type Mark = MarkType | MarkDeep\n\nexport type MarkType =\n    | 'bar'\n    | 'point'\n    | 'line'\n    | 'link-between'\n    | 'link-within' // uses either x and x1 or y and y1\n    | 'rect'\n    | 'text'\n    | 'rule'\n    | 'triangle-l'\n    | 'triangle-r'\n    | 'dummy'\n\n/**\n * Glyph\n */\nexport type MarkDeep = MarkGlyphPreset | MarkGlyph | MarkWithStyle\n\nexport interface MarkWithStyle {\n    type: MarkType\n    curvature?: 'straight' | 'stepwise' | 'curved'\n}\n\nexport interface MarkGlyphPreset {\n    type: GLYPH_LOCAL_PRESET_TYPE | GLYPH_HIGLASS_PRESET_TYPE\n    server: string // TODO: Support this.\n}\n\nexport interface MarkGlyph {\n    type: 'compositeMark'\n    name: string\n    referenceColumn?: string // reference column for selecting data tuples for each glyph\n    requiredChannels: ChannelType[] // channels that must be assigned\n    elements: GlyphElement[]\n}\n\nexport interface GlyphElement {\n    // primitives\n    description?: string\n    select?: { channel: ChannelType, oneOf: string[] }[]\n    mark: MarkType | MarkBind\n    // coordinates\n    x?: ChannelBind | ChannelValue | 'none'\n    y?: ChannelBind | ChannelValue | 'none'\n    xe?: ChannelBind | ChannelValue | 'none'\n    ye?: ChannelBind | ChannelValue | 'none'\n    // coordinates for link\n    x1?: ChannelBind | ChannelValue | 'none'\n    y1?: ChannelBind | ChannelValue | 'none'\n    x1e?: ChannelBind | ChannelValue | 'none'\n    y1e?: ChannelBind | ChannelValue | 'none'\n    // others\n    color?: ChannelBind | ChannelValue | 'none'\n    size?: ChannelBind | ChannelValue | 'none'\n    w?: ChannelBind | ChannelValue | 'none'\n    opacity?: ChannelBind | ChannelValue | 'none'\n    text?: ChannelBind | ChannelValue | 'none'\n    style?: MarkStyle\n}\n\nexport interface MarkStyle {\n    dashed?: string\n    dy?: number\n    stroke?: string\n    strokeWidth?: number\n    background?: string\n}\n\nexport interface MarkBind {\n    bind: string\n    domain: string[]\n    range: MarkType[]\n}\n\nexport interface ChannelBind {\n    bind: ChannelType\n    aggregate?: Aggregate\n}\n\nexport interface AnyGlyphChannels {\n    // Allow defining any kinds of chennels for binding data in Glyph\n    [key: string]: ChannelBind | ChannelValue\n}\n\n/**\n * Consistency\n */\ninterface Consistency {\n    /**\n     * `true` and `false` correspond to 'shared' and 'independent', respectively.\n     */\n    // List of `uniqueName` of `view` or `track` or indexes appear in the specification.\n    targets: string[] | number[]\n    // Default: The first element of `targets`.\n    reference?: string\n    color?: 'shared' | 'independent' | 'distinct' | true | false\n    x?: 'shared' | 'independent' | true | false\n    y?: 'shared' | 'independent' | true | false\n    zoomScale?: 'shared' | 'independent' | true | false\n    zoomCenter?: 'shared' | 'independent' | true | false\n}\n\n/**\n * Type Checks\n */\nexport function IsDataDeep(data:\n    | DataDeep\n    | Datum[]\n    /* remove the two types below */\n    | ChannelDeep\n    | ChannelValue\n): data is DataDeep {\n    return typeof data === 'object'\n}\n\nexport function IsNotEmptyTrack(\n    track:\n        | Track\n        | GenericType<Channel>\n        | EmptyTrack\n): track is Track | GenericType<Channel> {\n    return track !== {}\n}\n\nexport function IsTrackStyle(track: TrackStyle | undefined): track is TrackStyle {\n    return track !== undefined\n}\n\nexport function IsShallowMark(mark: any /* TODO */): mark is MarkType {\n    return typeof mark !== 'object'\n}\n\nexport function IsMarkDeep(mark: any /* TODO */): mark is MarkDeep {\n    return typeof mark === 'object'\n}\n\nexport function IsGlyphMark(mark: any /* TODO */): mark is MarkGlyph {\n    return typeof mark === 'object' && mark.type === 'compositeMark'\n}\n\nexport function IsHiGlassTrack(track: Track | GenericType<Channel>) {\n    return (\n        (\n            typeof track.mark === 'object' &&\n            IsGlyphMark(track.mark) &&\n            track.mark.type !== 'compositeMark'\n        ) ||\n        (IsDataDeep(track.data) && validTilesetUrl(track.data.url))\n    );\n}\n\nexport function IsChannelValue(\n    channel:\n        | ChannelDeep\n        | ChannelValue\n        | ChannelBind\n        | undefined\n        | 'none'\n): channel is ChannelValue {\n    return channel !== null && typeof channel === 'object' && 'value' in channel;\n}\n\nexport function IsChannelBind(\n    channel:\n        | ChannelDeep\n        | ChannelValue\n        | ChannelBind\n        | undefined\n        | 'none'\n): channel is ChannelBind {\n    return channel !== null && typeof channel === 'object' && 'bind' in channel;\n}\n\nexport function IsChannelDeep(\n    channel:\n        | ChannelDeep\n        | ChannelValue\n        | undefined\n): channel is ChannelDeep {\n    return typeof channel === 'object' && !('value' in channel);\n}","import { GeminiSpec } from \"../lib/gemini.schema\";\nimport {\n    GENE_ANNOTATION_PLOT,\n    GENE_ANNOTATION_PLOT_SIMPLE,\n    CYTOGENETIC_BAND\n} from \"../lib/test/gemini/glyph-examples\";\nimport {\n    LAYOUT_EXAMPLE_COMBO_HORIZONTAL,\n    LAYOUT_EXAMPLE_LINK,\n    LAYOUT_EXAMPLE_COMBO,\n    LAYOUT_EXAMPLE_COMBO_BAND,\n    LAYOUT_EXAMPLE_STACKED_MULTI_TRACKS,\n    LAYOUT_EXAMPLE_STACKED_MULTI_TRACKS_CIRCULAR\n} from \"../lib/test/gemini/layout-examples\";\n\ninterface Demo {\n    name: string,\n    spec: GeminiSpec,\n    glyphWidth: number,\n    glyphHeight: number\n}\n\nexport const demos: ReadonlyArray<Demo> = [\n    {\n        name: \"Gene Annotation Plot (Simple)\",\n        spec: GENE_ANNOTATION_PLOT_SIMPLE,\n        glyphWidth: 300,\n        glyphHeight: 150\n    },\n    {\n        name: \"Gene Annotation Plot\",\n        spec: GENE_ANNOTATION_PLOT,\n        glyphWidth: 600,\n        glyphHeight: 150\n    },\n    {\n        name: \"Cytogenetic Band\",\n        spec: CYTOGENETIC_BAND,\n        glyphWidth: 900,\n        glyphHeight: 150\n    },\n    {\n        name: \"Six Different Between-Links\",\n        spec: LAYOUT_EXAMPLE_LINK,\n        glyphWidth: 0,\n        glyphHeight: 0\n    },\n    {\n        name: \"Between-Links (Combo)\",\n        spec: LAYOUT_EXAMPLE_COMBO,\n        glyphWidth: 0,\n        glyphHeight: 0\n    },\n    {\n        name: \"Between-Links (Combo, Horizontal)\",\n        spec: LAYOUT_EXAMPLE_COMBO_HORIZONTAL,\n        glyphWidth: 0,\n        glyphHeight: 0\n    },\n    {\n        name: \"Stacked Multiple Tracks\",\n        spec: LAYOUT_EXAMPLE_STACKED_MULTI_TRACKS,\n        glyphWidth: 0,\n        glyphHeight: 0\n    },\n    {\n        name: \"Stacked Multiple Tracks (Circular)\",\n        spec: LAYOUT_EXAMPLE_STACKED_MULTI_TRACKS_CIRCULAR,\n        glyphWidth: 0,\n        glyphHeight: 0\n    },\n    {\n        name: \"Between-Bands (HiGlass Tracks)\",\n        spec: LAYOUT_EXAMPLE_COMBO_BAND,\n        glyphWidth: 0,\n        glyphHeight: 0\n    },\n] as const;","import { GeminiSpec } from \"../../gemini.schema\";\n\nexport const GENE_ANNOTATION_PLOT_SIMPLE: GeminiSpec = {\n    tracks: [\n        {\n            data: { url: \"https://raw.githubusercontent.com/sehilyi/gemini-datasets/master/data/Homo_sapiens.GRCh38.92.glyph.csv\", type: 'csv' },\n            mark: { server: \"gemini.v1\", type: \"glyph-gene-annotation-v2\" },\n            x: { field: \"start\", type: \"genomic\" },\n            xe: { field: \"end\", type: \"genomic\" },\n            y: { field: \"strand\", type: \"nominal\" },\n            text: { field: \"gene_name\", type: \"nominal\" },\n            geneOrExon: { field: \"feature\", type: \"nominal\" },\n            color: { value: \"#D1D28D\" },\n            opacity: { value: 0.7 },\n            stroke: { value: \"white\" }\n        }\n    ]\n};\n\nexport const GENE_ANNOTATION_PLOT: GeminiSpec = {\n    tracks: [\n        {\n            data: { url: \"https://raw.githubusercontent.com/sehilyi/gemini-datasets/master/data/Homo_sapiens.GRCh38.92.glyph.csv\", type: 'csv' },\n            mark: { server: \"gemini.v1\", type: \"glyph-gene-annotation-v1\" },\n            x: { field: \"start\", type: \"genomic\" },\n            xe: { field: \"end\", type: \"genomic\" },\n            y: { field: \"strand\", type: \"nominal\" },\n            text: { field: \"gene_name\", type: \"nominal\" },\n            color: { field: \"strand\", type: \"nominal\" },\n            exonVersion: { field: \"exon_version\", type: \"nominal\" },\n            geneOrExon: { field: \"feature\", type: \"nominal\" },\n            exonId: { field: \"exon_id\", type: \"nominal\" },\n            opacity: { value: 0.9 }\n        }\n    ]\n};\n\nexport const CYTOGENETIC_BAND: GeminiSpec = {\n    tracks: [\n        {\n            data: { url: 'https://raw.githubusercontent.com/sehilyi/gemini-datasets/master/data/chr1_cytogenetic_band.glyph.csv', type: 'csv' },\n            mark: { server: 'gemini.v1', type: 'cytogenetic-band-v1' },\n            x: { field: 'Basepair_start', type: 'genomic' },\n            xe: { field: 'Basepair_stop', type: 'genomic' },\n            y: { field: 'Chr.', type: 'nominal' },\n            text: { field: 'Band', type: 'nominal' },\n            stain: { field: 'Stain', type: 'nominal' },\n            color: { field: 'Density', type: 'nominal', domain: ['', '25', '50', '75', '100'], range: ['white', '#D9D9D9', '#979797', '#636363', 'black'] }\n        }\n    ]\n};","import { GeminiSpec } from \"../../gemini.schema\";\n\nexport const LAYOUT_EXAMPLE_LINK: GeminiSpec = {\n    tracks: [\n        {\n            data: { url: 'https://raw.githubusercontent.com/sehilyi/gemini-datasets/master/data/potint-to-point-relation.csv', type: 'csv' },\n            mark: 'link-between',\n            x: { field: 'from', type: \"nominal\" },\n            y: { field: 'to', type: \"nominal\" },\n            width: 50, height: 50\n        },\n        {\n            data: { url: 'https://raw.githubusercontent.com/sehilyi/gemini-datasets/master/data/potint-to-point-relation.csv', type: 'csv' },\n            mark: 'link-between',\n            x1: { field: 'from', type: \"nominal\" },\n            y: { field: 'to', type: \"nominal\" },\n            width: 50, height: 50\n        },\n        {\n            data: { url: 'https://raw.githubusercontent.com/sehilyi/gemini-datasets/master/data/potint-to-point-relation.csv', type: 'csv' },\n            mark: 'link-between',\n            x1: { field: 'from', type: \"nominal\" },\n            y1: { field: 'to', type: \"nominal\" },\n            width: 50, height: 50\n        },\n        {\n            data: { url: 'https://raw.githubusercontent.com/sehilyi/gemini-datasets/master/data/potint-to-point-relation.csv', type: 'csv' },\n            mark: 'link-between',\n            x: { field: 'from', type: \"nominal\" },\n            y1: { field: 'to', type: \"nominal\" },\n            width: 50, height: 50\n        },\n        {\n            data: { url: 'https://raw.githubusercontent.com/sehilyi/gemini-datasets/master/data/potint-to-point-relation.csv', type: 'csv' },\n            mark: 'link-between',\n            x: { field: 'from', type: \"nominal\" },\n            x1: { field: 'to', type: \"nominal\" },\n            width: 50, height: 50\n        },\n        {\n            data: { url: 'https://raw.githubusercontent.com/sehilyi/gemini-datasets/master/data/potint-to-point-relation.csv', type: 'csv' },\n            mark: 'link-between',\n            y: { field: 'from', type: \"nominal\" },\n            y1: { field: 'to', type: \"nominal\" },\n            width: 50, height: 50\n        },\n    ]\n}\n\nexport const LAYOUT_EXAMPLE_COMBO: GeminiSpec = {\n    references: [\n        \"http://genocat.tools/tools/combo.html\",\n        \"http://genocat.tools/tools/gbrowse_syn.html\",\n        \"http://genocat.tools/tools/ggbio.html\",\n        \"http://genocat.tools/tools/give.html\",\n        \"http://genocat.tools/tools/variant_view.html\"\n    ],\n    tracks: [\n        {\n            data: { url: 'dummy', type: 'csv' }, mark: 'dummy',\n            width: 600, height: 50\n        },\n        {\n            data: { url: 'https://raw.githubusercontent.com/sehilyi/gemini-datasets/master/data/potint-to-point-relation.csv', type: 'csv' },\n            mark: 'link-between',\n            x1: { field: 'from', type: \"nominal\" },\n            x: { field: 'to', type: \"nominal\" },\n            width: 600, height: 50\n        },\n        {\n            data: { url: 'dummy', type: 'csv' }, mark: 'dummy',\n            width: 600, height: 50\n        }\n    ]\n}\n\nexport const LAYOUT_EXAMPLE_COMBO_HORIZONTAL: GeminiSpec = {\n    layout: { type: 'linear', direction: 'horizontal' },\n    tracks: [\n        {\n            data: { url: 'dummy', type: 'csv' }, mark: 'dummy',\n            width: 60, height: 500\n        },\n        {\n            data: { url: 'https://raw.githubusercontent.com/sehilyi/gemini-datasets/master/data/potint-to-point-relation.csv', type: 'csv' },\n            mark: 'link-between',\n            y: { field: 'from', type: \"nominal\" },\n            y1: { field: 'to', type: \"nominal\" },\n            width: 60, height: 500\n        },\n        {\n            data: { url: 'dummy', type: 'csv' }, mark: 'dummy',\n            width: 60, height: 500\n        }\n    ]\n}\n\nexport const LAYOUT_EXAMPLE_COMBO_BAND: GeminiSpec = {\n    references: [\n        \"http://genocat.tools/tools/combo.html\",\n        \"http://genocat.tools/tools/gbrowse_syn.html\",\n        \"http://genocat.tools/tools/ggbio.html\",\n        \"http://genocat.tools/tools/give.html\",\n        \"http://genocat.tools/tools/variant_view.html\"\n    ],\n    tracks: [\n        {\n            data: { url: 'https://resgen.io/api/v1/tileset_info/?d=a-iBpdh3Q_uO2FLCWKpOOw', type: 'tileset' },\n            mark: 'rect',\n            x: { type: 'genomic' },\n            width: 600, height: 60\n        },\n        {\n            data: { url: 'https://resgen.io/api/v1/tileset_info/?d=a-iBpdh3Q_uO2FLCWKpOOw', type: 'tileset' },\n            mark: 'line',\n            x: { type: 'genomic' },\n            width: 600, height: 60\n        },\n        {\n            data: { url: 'http://higlass.io/api/v1/tileset_info/?d=OHJakQICQD6gTD7skx4EWA', type: 'tileset' },\n            mark: {\n                type: 'gene-annotation-higlass',\n                server: 'gemini-v1'\n            },\n            x: { type: 'genomic', axis: true, domain: [1519086324.7628496, 1519471836.3240566] },\n            width: 600, height: 120\n        },\n        {\n            data: { url: 'https://raw.githubusercontent.com/sehilyi/gemini-datasets/master/data/range-to-range-relation.csv', type: 'csv' },\n            mark: 'link-between',\n            x1: { field: 'from' },\n            x1e: { field: 'from1' },\n            x: { field: 'to' },\n            xe: { field: 'to1' },\n            width: 600, height: 150,\n            stroke: { value: 'none' }\n        },\n        {\n            data: { url: 'http://higlass.io/api/v1/tileset_info/?d=OHJakQICQD6gTD7skx4EWA', type: 'tileset' },\n            mark: {\n                type: 'gene-annotation-higlass',\n                server: 'gemini-v1'\n            },\n            x: { type: 'genomic' },\n            x1: { axis: true },\n            width: 600, height: 120\n        },\n        {\n            data: { url: 'https://resgen.io/api/v1/tileset_info/?d=a-iBpdh3Q_uO2FLCWKpOOw', type: 'tileset' },\n            mark: 'bar',\n            x: { type: 'genomic' },\n            width: 600, height: 60\n        },\n        {\n            data: { url: 'https://resgen.io/api/v1/tileset_info/?d=a-iBpdh3Q_uO2FLCWKpOOw', type: 'tileset' },\n            mark: 'point',\n            x: { type: 'genomic' },\n            width: 600, height: 60\n        },\n    ]\n}\n\nexport const LAYOUT_EXAMPLE_STACKED_MULTI_TRACKS: GeminiSpec = {\n    layout: { type: 'linear', direction: 'horizontal', wrap: 2 },\n    tracks: [\n        { data: { url: 'dummy', type: 'csv' }, mark: 'dummy', width: 350, height: 30, style: { background: '#FAF9F7' }, },\n        { data: { url: 'dummy', type: 'csv' }, mark: 'dummy', width: 350, height: 30 },\n        { data: { url: 'dummy', type: 'csv' }, mark: 'dummy', width: 350, height: 30, style: { background: '#FAF9F7' } },\n        { data: { url: 'dummy', type: 'csv' }, mark: 'dummy', width: 350, height: 30 },\n        { data: { url: 'dummy', type: 'csv' }, mark: 'dummy', width: 350, height: 30, style: { background: '#FAF9F7' } },\n        { data: { url: 'dummy', type: 'csv' }, mark: 'dummy', width: 350, height: 30 },\n    ]\n}\n\nexport const LAYOUT_EXAMPLE_STACKED_MULTI_TRACKS_CIRCULAR: GeminiSpec = {\n    layout: { type: 'circular', direction: 'horizontal', wrap: 2 },\n    tracks: [\n        { data: { url: 'dummy', type: 'csv' }, mark: 'dummy', width: 500, height: 30, style: { background: '#FAF9F7' } },\n        { data: { url: 'dummy', type: 'csv' }, mark: 'dummy', width: 500, height: 30 },\n        { data: { url: 'dummy', type: 'csv' }, mark: 'dummy', width: 500, height: 30, style: { background: '#FAF9F7' } },\n        { data: { url: 'dummy', type: 'csv' }, mark: 'dummy', width: 500, height: 30 },\n        { data: { url: 'dummy', type: 'csv' }, mark: 'dummy', width: 500, height: 30, style: { background: '#FAF9F7' } },\n        { data: { url: 'dummy', type: 'csv' }, mark: 'dummy', width: 500, height: 30 },\n    ]\n}","import { Track, Channel, MarkType, GenericType, IsGlyphMark, IsChannelValue, ChannelTypes, ChannelBind, MarkGlyph, IsChannelDeep, ChannelDeep, Datum, ChannelType, GlyphElement, IsChannelBind } from \"../gemini.schema\";\nimport { deepToLongElements } from \"../utils/spec-preprocess\";\nimport * as d3 from \"d3\";\nimport { BoundingBox } from \"../utils/bounding-box\";\n\nexport class TrackModel {\n    private track: Track | GenericType<Channel>;\n    private channelToField: { [k: string]: string };\n    private domains: { [channel: string]: (string | number)[] };\n    private scales: { [channel: string]: d3.ScaleLinear<any, any> | d3.ScaleOrdinal<any, any> | d3.ScaleSequential<any> };\n    private ranges: { [channel: string]: number[] | string[] };\n    constructor(track: Track | GenericType<Channel>) {\n        this.track = track;\n        this.domains = {};\n        this.channelToField = {};\n        this.scales = {};\n        this.ranges = {};\n\n        /**\n         * Validate\n         */\n        // TODO: Check if required channels are specified.\n        // ...\n\n        /**\n         * Default\n         */\n        if (IsGlyphMark(this.track.mark)) {\n            this.track.mark.elements = deepToLongElements(this.track.mark.elements);\n        }\n        // TODO: Add binds for not-specified channels.\n\n        /**\n         * Prepare Rendering\n         */\n        this.setDomains();\n    }\n    public getTrack() {\n        return this.track;\n    }\n\n    public getElements() {\n        if (IsGlyphMark(this.track.mark)) {\n            return this.track.mark.elements;\n        }\n        return [];\n    }\n\n    public getFieldByChannel(field: string) {\n        return this.channelToField[field];\n    }\n\n    private setDomains() {\n        const data = this.track.data as Datum[];\n\n        if (IsGlyphMark(this.track.mark)) {\n            const { requiredChannels: required } = this.track.mark;\n\n            // Add channel-to-domain mappings when `field` suggested.\n            required.forEach(c => {\n                const channel = (this.track as GenericType<Channel>)[c];\n                if (IsChannelDeep(channel)) {\n                    const { field } = channel;\n\n                    if (!field) return;\n\n                    this.channelToField[c] = field;\n\n                    // Domains for x1 and y1 needs to be added to that of x and y, respectively.\n                    const targetChannel = c === 'xe' ? 'x' : c === 'ye' ? 'y' : c;\n\n                    if (!this.domains[targetChannel]) {\n                        this.domains[targetChannel] = [];\n                    }\n                    this.domains[targetChannel] = [\n                        ...this.domains[targetChannel],\n                        ...(channel.domain ? channel.domain : data.map(d => d[field]))\n                    ]\n                }\n            });\n            Object.keys(this.domains).forEach(c => {\n                const channel = (this.track as GenericType<Channel>)[c];\n                if (IsChannelDeep(channel)) {\n                    const { type } = channel;\n                    this.domains[c] = type === \"nominal\"\n                        ? d3.set(this.domains[c]).values()\n                        : d3.extent(this.domains[c].map(d => +d)) as [number, number]\n                }\n            });\n        }\n    }\n\n    private setRanges(bb: BoundingBox) {\n        Object.keys(this.domains).forEach(c => {\n            const channel = (this.track as GenericType<Channel>)[c];\n            if (IsChannelDeep(channel)) {\n                if (c === 'x') {\n                    this.ranges['x'] = [bb.x, bb.x + bb.width];\n                } else if (c === 'y') {\n                    this.ranges['y'] = [bb.y, bb.y + bb.height];\n                } else if (c === 'color') {\n                    this.ranges['color'] = channel.range ? channel.range : d3.schemeTableau10 as string[]\n                } else {\n                    // TODO: Support specifying `range` and `domain`.\n                    // ...\n                }\n            }\n        });\n    }\n\n    public setScales(boundingBox: BoundingBox) {\n        this.setRanges(boundingBox);\n        Object.keys(this.domains).forEach(c => {\n            const channel = (this.track as GenericType<Channel>)[c];\n            if (IsChannelDeep(channel)) {\n                const { type } = channel;\n                if (this.ranges[c]) {\n                    // TODO: simplify\n                    this.scales[c] = c === 'color' && type === 'nominal'\n                        ? d3.scaleOrdinal()\n                            .domain(this.domains[c] as string[])\n                            .range(this.ranges[c])\n                        : c === 'color' && type === 'quantitative'\n                            ? d3.scaleSequential(d3.interpolateBrBG)\n                                .domain(this.domains[c] as [number, number])\n                            : type === \"nominal\"\n                                ? d3.scaleOrdinal()\n                                    .domain(this.domains[c] as string[])\n                                    .range(this.ranges[c])\n                                : d3.scaleLinear()\n                                    .domain(this.domains[c] as [number, number])\n                                    .range(this.ranges[c] as [number, number]);\n                }\n            }\n        });\n    }\n\n    public getEncoding(\n        element: GlyphElement /* Remove this */,\n        c: keyof typeof ChannelTypes,\n        datum: Datum,\n        mark?: MarkType\n    ): any {\n        // TODO: Move out\n        const DEFAULT_ENCODING: { [k: string]: number | string } = {\n            'opacity': 1,\n            'size': 10,\n            'color': 'black',\n            'text': ''\n        }\n        ////\n\n        const scaleChannel = c === 'xe' ? 'x' : c === 'ye' ? 'y' : c;\n\n        if (IsChannelValue(element[c])) {\n            switch (c) {\n                case 'size':\n                case 'opacity':\n                case 'color':\n                case 'text':\n                    return (element[c] as any).value;\n            }\n        }\n        else if (IsChannelValue(this.track[c])) {\n            switch (c) {\n                case 'size':\n                case 'opacity':\n                case 'color':\n                case 'text':\n                    return (this.track[c] as any).value;\n            }\n        }\n        else if (this.scales[scaleChannel]) {\n            const field = IsChannelBind(element[c])\n                ? this.getFieldByChannel((element[c] as ChannelBind).bind)\n                : this.getFieldByChannel(c);\n            return this.scales[scaleChannel](datum[field] as any);\n        } else if (c === 'text') {\n            const field = IsChannelBind(element.text)\n                ? this.getFieldByChannel(element.text.bind)\n                : IsChannelDeep(this.track.text)\n                    ? this.track.text.field\n                    : undefined;\n            if (field) {\n                return datum[field];\n            }\n        }\n        else if (c === 'w') {\n            if (this.scales['x'] && IsChannelDeep(this.track.x) && IsChannelDeep(this.track.xe) && element.x !== 'none' && element.xe !== 'none') {\n                const altSize = Math.abs((datum[this.getFieldByChannel('xe')] as number) - (datum[this.getFieldByChannel('x')] as number));\n                return this.scales['x'](altSize);\n            } else {\n                return this.getEncoding(element, 'size', datum);\n            }\n        }\n        else {\n            // If not specified, use default value.\n            return DEFAULT_ENCODING[c];\n        }\n    }\n\n    public getScale(c: ChannelType | string) {\n        return this.scales[c];\n    }\n}","import { GlyphElement } from \"../gemini.schema\";\n\n/**\n * Domains and ranges in conditional marks are moved into `select` option for the compiling simplicity.\n * @param elements \n */\nexport function deepToLongElements(elements: GlyphElement[]) {\n    const longElements: GlyphElement[] = [];\n    elements.forEach(element => {\n        if (typeof element.mark === \"object\") {\n            const { bind } = element.mark;\n            for (let i = 0; i < element.mark.domain.length; i++) {\n                const domain = element.mark.domain[i];\n                const range = element.mark.range[i];\n                const select = element.select ? element.select : [];\n                longElements.push({\n                    ...element,\n                    mark: range,\n                    select: [\n                        ...select,\n                        { channel: bind, oneOf: [domain] }\n                    ]\n                });\n            }\n        } else {\n            longElements.push(element);\n        }\n    });\n    return longElements;\n}","import * as d3 from 'd3'\n\nexport function renderBackground(\n    svg: SVGGElement,\n    w: number,\n    h: number,\n    px: number,\n    py: number,\n    isGuideline: boolean = true\n) {\n    d3.select(svg)\n        .attr(\"width\", w)\n        .attr(\"height\", h);\n    const g = d3.select(svg).append(\"g\");\n    g.append(\"rect\")\n        .attr(\"width\", w)\n        .attr(\"height\", h)\n        .attr(\"stroke\", \"lightgray\")\n        .attr(\"fill\", \"white\");\n    if (!isGuideline) return;\n    g.append(\"line\")\n        .attr(\"x1\", 0)\n        .attr(\"x2\", w)\n        .attr(\"y1\", py)\n        .attr(\"y2\", py)\n        .attr(\"class\", \"preview-guideline\");\n    g.append(\"line\")\n        .attr(\"x1\", 0)\n        .attr(\"x2\", w)\n        .attr(\"y1\", h - py)\n        .attr(\"y2\", h - py)\n        .attr(\"class\", \"preview-guideline\");\n    g.append(\"line\")\n        .attr(\"x1\", px)\n        .attr(\"x2\", px)\n        .attr(\"y1\", 0)\n        .attr(\"y2\", h)\n        .attr(\"class\", \"preview-guideline\");\n    g.append(\"line\")\n        .attr(\"x1\", w - px)\n        .attr(\"x2\", w - px)\n        .attr(\"y1\", 0)\n        .attr(\"y2\", h)\n        .attr(\"class\", \"preview-guideline\");\n    g.append(\"line\")\n        .attr(\"x1\", 0)\n        .attr(\"x2\", w)\n        .attr(\"y1\", h / 2)\n        .attr(\"y2\", h / 2)\n        .attr(\"class\", \"preview-guideline\");\n    g.append(\"line\")\n        .attr(\"x1\", w / 2)\n        .attr(\"x2\", w / 2)\n        .attr(\"y1\", 0)\n        .attr(\"y2\", h)\n        .attr(\"class\", \"preview-guideline\");\n}","import { Track, GenericType, Channel } from \"../gemini.schema\";\nimport * as d3 from \"d3\";\nimport { renderGlyph } from \"./glyph\";\nimport { renderBackground } from \"./guidelines\";\n\nexport function renderGlyphPreview(\n    svg: SVGSVGElement,\n    track: Track | GenericType<Channel>,\n    width: number,\n    height: number\n) {\n    if (!svg || !track) return;\n    d3.select(svg).selectAll(\"*\").remove();\n\n    // Styles\n    const WIDTH = width, HEIGHT = height, PADDING_X = 60, PADDING_Y = 30;\n\n    // BG and Guidelines\n    renderBackground(svg, WIDTH, HEIGHT, PADDING_X, PADDING_Y);\n\n    const innerG = d3.select(svg).append(\"g\")\n        .attr(\"width\", WIDTH - PADDING_X * 2)\n        .attr(\"height\", HEIGHT - PADDING_Y * 2)\n        .attr(\"transform\", `translate(${PADDING_X},${PADDING_Y})`);\n\n    // TODO: Select a subset of data tuples for a single glyph.\n    // ...\n\n    // TODO: Should data be aggregated when specified? (e.g., x: {..., aggregate: \"mean\"})\n    // ...\n\n    renderGlyph(\n        innerG,\n        track,\n        { x: 0, width: WIDTH - PADDING_X * 2, y: 0, height: HEIGHT - PADDING_Y * 2 }\n    );\n}","import * as d3 from \"d3\";\nimport { Track, Datum, GenericType, Channel, IsGlyphMark } from \"../gemini.schema\";\nimport { transformData, FilterSpec } from \"../utils/data-process\";\nimport { TrackModel } from \"../models/track\";\nimport { BoundingBox } from \"../utils/bounding-box\";\n\nexport function renderGlyph(\n    g: d3.Selection<SVGGElement, any, any, any>,\n    track: Track | GenericType<Channel>,\n    bb: BoundingBox\n) {\n    const tm = new TrackModel(track);\n    tm.setScales({\n        ...bb,\n        // TODO: Cheating here!\n        y: bb.y + bb.height / 2.0\n    });\n\n    // checks\n    const data = track.data as Datum[];\n    if (!data) {\n        console.warn(\"No array of a JSON object suggested.\");\n        return;\n    }\n\n    if (!IsGlyphMark(track.mark)) {\n        console.warn(\"Glyph is not defined.\");\n        return;\n    }\n    /////////////\n\n    // TODO: Add title using `name`\n    // ...\n\n    // Render each element\n    tm.getElements().forEach(element => {\n        const { select, mark: markE, } = element;\n\n        // Select\n        const filters: FilterSpec[] = [];\n        select?.forEach(d => {\n            const { channel, oneOf } = d;\n            if (tm.getFieldByChannel(channel)) {\n                filters.push({ field: tm.getFieldByChannel(channel), oneOf });\n            }\n        });\n\n        // Render glyph\n        const transformed_data = transformData(data, filters);\n        // TODO: Aggregation\n        if (markE === \"line\") {\n            g.selectAll()\n                .data(transformed_data)\n                .enter()\n                .append('line')\n                .attr('x1', d => tm.getEncoding(element, 'x', d))\n                .attr('x2', d => tm.getEncoding(element, 'xe', d))\n                .attr('y1', d => tm.getEncoding(element, 'y', d))\n                .attr('y2', d => tm.getEncoding(element, 'y', d))\n                .attr('stroke', d => tm.getEncoding(element, 'color', d))\n                .attr('stroke-width', d => tm.getEncoding(element, 'size', d))\n                .attr('opacity', d => tm.getEncoding(element, 'opacity', d))\n                .style('stroke-dasharray', (element.style?.dashed ?? ''))\n        } else if (markE === 'point') {\n            g.selectAll('point')\n                .data(transformed_data)\n                .enter()\n                .append('circle')\n                .attr('fill', d => tm.getEncoding(element, 'color', d))\n                .attr('cx', d => tm.getEncoding(element, 'x', d))\n                .attr('cy', d => tm.getEncoding(element, 'x', d))\n                .attr('r', 15)\n                .attr('opacity', d => tm.getEncoding(element, 'opacity', d))\n        } else if (markE === \"rect\") {\n            g.selectAll()\n                .data(transformed_data)\n                .enter()\n                .append('rect')\n                .attr('x', d => tm.getEncoding(element, 'x', d))\n                .attr('y', d => tm.getEncoding(element, 'y', d) - tm.getEncoding(element, 'size', d) / 2.0)\n                .attr('width', d => tm.getEncoding(element, 'xe', d) - tm.getEncoding(element, 'x', d))\n                .attr('height', d => tm.getEncoding(element, 'size', d))\n                .attr('fill', d => tm.getEncoding(element, 'color', d))\n                .attr('opacity', d => tm.getEncoding(element, 'opacity', d))\n                .attr('stroke', element.style?.stroke ?? '')\n                .attr('stroke-width', element.style?.strokeWidth ?? '')\n        } else if (markE === 'text') {\n            g.selectAll()\n                .data(transformed_data)\n                .enter()\n                .append('text')\n                .text(d => tm.getEncoding(element, 'text', d))\n                .attr('x', d => (tm.getEncoding(element, 'x', d) + tm.getEncoding(element, 'xe', d)) / 2.0)\n                .attr('y', d => tm.getEncoding(element, 'y', d) + element.style?.dy)\n                .attr('fill', d => tm.getEncoding(element, 'color', d))\n                .attr('font-size', d => tm.getEncoding(element, 'size', d))\n                .attr('alignment-baseline', \"top\")\n                .attr('text-anchor', \"middle\")\n                .attr('opacity', d => tm.getEncoding(element, 'opacity', d))\n        } else if (markE === 'rule') {\n            g.selectAll('rule')\n                .data(transformed_data)\n                .enter()\n                .append('line')\n                .attr('x1', d => tm.getEncoding(element, 'x', d))\n                .attr('x2', d => tm.getEncoding(element, 'x', d))\n                .attr('y1', d => tm.getEncoding(element, 'x', d) - tm.getEncoding(element, 'size', d) / 2.0)\n                .attr('y2', d => tm.getEncoding(element, 'x', d) - tm.getEncoding(element, 'size', d) / 2.0)\n                .attr('stroke', d => tm.getEncoding(element, 'color', d))\n                .attr('stroke-width', 3)\n                .attr('opacity', d => tm.getEncoding(element, 'opacity', d))\n        } else if (markE === 'triangle-r') {\n            g.selectAll('trangle-r')\n                .data(transformed_data)\n                .enter()\n                .append('path')\n                .attr('d', d => {\n                    const h = tm.getEncoding(element, 'size', d);\n                    const w = tm.getEncoding(element, 'w', d);\n                    const x = tm.getEncoding(element, 'x', d);\n                    const y = tm.getEncoding(element, 'y', d);\n                    return `M${x + w} ${y}`\n                        + `L${x} ${y + h / 2.0}`\n                        + `L${x} ${y - h / 2.0} Z`;\n                })\n                .attr('fill', d => tm.getEncoding(element, 'color', d))\n                .attr('opacity', d => tm.getEncoding(element, 'opacity', d))\n                .attr('stroke', element.style?.stroke ?? '')\n                .attr('stroke-width', element.style?.strokeWidth ?? '')\n        } else if (markE === 'triangle-l') {\n            g.selectAll('trangle-l')\n                .data(transformed_data)\n                .enter()\n                .append('path')\n                .attr('d', d => {\n                    const h = tm.getEncoding(element, 'size', d);\n                    const w = tm.getEncoding(element, 'w', d);\n                    const x = tm.getEncoding(element, 'x', d);\n                    const y = tm.getEncoding(element, 'y', d);\n                    return `M${x} ${y}`\n                        + `L${x + w} ${y + h / 2.0}`\n                        + `L${x + w} ${y - h / 2.0} Z`;\n                })\n                .attr('fill', d => tm.getEncoding(element, 'color', d))\n                .attr('opacity', d => tm.getEncoding(element, 'opacity', d))\n                .attr('stroke', element.style?.stroke ?? '')\n                .attr('stroke-width', element.style?.strokeWidth ?? '')\n        }\n    });\n}","import { Datum } from \"../gemini.schema\";\n\nexport interface FilterSpec {\n    field: string;\n    oneOf: string[];\n}\n\nexport function transformData(data: Datum[], filters: FilterSpec[]) {\n    let filteredData = data.slice();\n    filters.forEach(f => {\n        filteredData = filteredData.filter(d => f.oneOf.indexOf(d[f.field] as string) !== -1);\n    });\n    return filteredData;\n}","import Ajv from 'ajv';\nimport uuid from \"uuid\";\nimport { HiGlassSpec, Track, EnumTrackType, EnumTrack } from \"./higlass.schema\";\nimport HiGlassSchema from \"./higlass.schema.json\";\n\n/**\n * Model for managing HiGlass spec.\n * (We are only using one center track with additional tracks for axes in a single view)\n */\nexport class HiGlassModel {\n    private hg: HiGlassSpec;\n    constructor() {\n        this.hg = {};\n\n        // Add default specs.\n        this.setEditable(false);\n        this.setChromInfoPath('//s3.amazonaws.com/pkerp/data/hg19/chromSizes.tsv');\n        this.hg.trackSourceServers = [];\n        this.hg.views = [{\n            uid: uuid.v1(),\n            genomePositionSearchBoxVisible: false,\n            layout: { w: 12, h: 12, x: 0, y: 0 },\n            tracks: {\n                top: [],\n                left: [],\n                center: [],\n                right: [],\n                bottom: [],\n                gallery: [],\n                whole: []\n            },\n            // TODO: better default values\n            initialXDomain: [5.960464477539063e-8, 3100000000.0000005],\n            initialYDomain: [5.960464477539063e-8, 3100000000.0000005]\n        }];\n    }\n\n    public spec(): Readonly<HiGlassSpec> {\n        return this.hg;\n    }\n\n    public setDomain(\n        xDomain: [number, number] | undefined,\n        yDomain: [number, number] | undefined\n    ) {\n        if (xDomain && this.hg.views?.[0]) {\n            this.hg.views[0].initialXDomain = xDomain;\n        }\n        if (yDomain && this.hg.views?.[0]) {\n            this.hg.views[0].initialYDomain = yDomain;\n        }\n    }\n\n    private getView() {\n        return this.hg.views?.[0];\n    }\n    private setEditable(editable: boolean | undefined) {\n        this.hg.editable = editable;\n        return this;\n    }\n\n    private setChromInfoPath(chromInfoPath: string | undefined) {\n        this.hg.chromInfoPath = chromInfoPath;\n        return this;\n    }\n\n    public addTrackSourceServers(trackSourceServers: string | undefined) {\n        if (trackSourceServers && this.hg.trackSourceServers?.indexOf(trackSourceServers) === -1)\n            this.hg.trackSourceServers?.push(trackSourceServers);\n        return this;\n    }\n\n    public setMainTrack(track: Track) {\n        if (!this.hg.views) return this;\n        this.hg.views[0].tracks.center = [track];\n        return this;\n    }\n\n    public setAxisTrack(position: 'left' | 'right' | 'top' | 'bottom') {\n        if (!this.hg.views) return this;\n        const baseTrackType = '-chromosome-labels';\n        const direction = position === 'left' || position === 'right' ? 'vertical' : 'horizontal';\n        const widthOrHeight = direction === 'vertical' ? 'width' : 'height'\n        this.hg.views[0].tracks[position] = [{\n            uid: uuid.v1(),\n            type: (direction + baseTrackType) as any /* TODO */,\n            [widthOrHeight]: 20,\n            chromInfoPath: this.hg.chromInfoPath\n        }]\n        return this;\n    }\n\n    public validateSpec() {\n        const validate = new Ajv({ extendRefs: true }).compile(HiGlassSchema);\n        const valid = validate(this.spec());\n\n        if (validate.errors) {\n            console.warn(JSON.stringify(validate.errors, null, 2));\n        }\n\n        return valid as boolean;\n    }\n} ","export const COLOR_SCHEME_VIRIDIS = [\n    \"rgba(68,1,84,1)\",\n    \"rgba(68,2,85,1)\",\n    \"rgba(69,3,87,1)\",\n    \"rgba(69,5,88,1)\",\n    \"rgba(69,6,90,1)\",\n    \"rgba(70,8,91,1)\",\n    \"rgba(70,9,93,1)\",\n    \"rgba(70,11,94,1)\",\n    \"rgba(70,12,96,1)\",\n    \"rgba(71,14,97,1)\",\n    \"rgba(71,15,98,1)\",\n    \"rgba(71,17,100,1)\",\n    \"rgba(71,18,101,1)\",\n    \"rgba(71,20,102,1)\",\n    \"rgba(72,21,104,1)\",\n    \"rgba(72,22,105,1)\",\n    \"rgba(72,24,106,1)\",\n    \"rgba(72,25,108,1)\",\n    \"rgba(72,26,109,1)\",\n    \"rgba(72,28,110,1)\",\n    \"rgba(72,29,111,1)\",\n    \"rgba(72,30,112,1)\",\n    \"rgba(72,32,113,1)\",\n    \"rgba(72,33,115,1)\",\n    \"rgba(72,34,116,1)\",\n    \"rgba(72,36,117,1)\",\n    \"rgba(72,37,118,1)\",\n    \"rgba(72,38,119,1)\",\n    \"rgba(72,39,120,1)\",\n    \"rgba(71,41,121,1)\",\n    \"rgba(71,42,121,1)\",\n    \"rgba(71,43,122,1)\",\n    \"rgba(71,44,123,1)\",\n    \"rgba(71,46,124,1)\",\n    \"rgba(70,47,125,1)\",\n    \"rgba(70,48,126,1)\",\n    \"rgba(70,49,126,1)\",\n    \"rgba(70,51,127,1)\",\n    \"rgba(69,52,128,1)\",\n    \"rgba(69,53,129,1)\",\n    \"rgba(69,54,129,1)\",\n    \"rgba(68,56,130,1)\",\n    \"rgba(68,57,131,1)\",\n    \"rgba(68,58,131,1)\",\n    \"rgba(67,59,132,1)\",\n    \"rgba(67,60,132,1)\",\n    \"rgba(67,62,133,1)\",\n    \"rgba(66,63,133,1)\",\n    \"rgba(66,64,134,1)\",\n    \"rgba(65,65,134,1)\",\n    \"rgba(65,66,135,1)\",\n    \"rgba(65,67,135,1)\",\n    \"rgba(64,69,136,1)\",\n    \"rgba(64,70,136,1)\",\n    \"rgba(63,71,136,1)\",\n    \"rgba(63,72,137,1)\",\n    \"rgba(62,73,137,1)\",\n    \"rgba(62,74,137,1)\",\n    \"rgba(61,75,138,1)\",\n    \"rgba(61,77,138,1)\",\n    \"rgba(60,78,138,1)\",\n    \"rgba(60,79,138,1)\",\n    \"rgba(59,80,139,1)\",\n    \"rgba(59,81,139,1)\",\n    \"rgba(58,82,139,1)\",\n    \"rgba(58,83,139,1)\",\n    \"rgba(57,84,140,1)\",\n    \"rgba(57,85,140,1)\",\n    \"rgba(56,86,140,1)\",\n    \"rgba(56,87,140,1)\",\n    \"rgba(55,88,140,1)\",\n    \"rgba(55,89,140,1)\",\n    \"rgba(54,91,141,1)\",\n    \"rgba(54,92,141,1)\",\n    \"rgba(53,93,141,1)\",\n    \"rgba(53,94,141,1)\",\n    \"rgba(52,95,141,1)\",\n    \"rgba(52,96,141,1)\",\n    \"rgba(51,97,141,1)\",\n    \"rgba(51,98,141,1)\",\n    \"rgba(51,99,141,1)\",\n    \"rgba(50,100,142,1)\",\n    \"rgba(50,101,142,1)\",\n    \"rgba(49,102,142,1)\",\n    \"rgba(49,103,142,1)\",\n    \"rgba(48,104,142,1)\",\n    \"rgba(48,105,142,1)\",\n    \"rgba(47,106,142,1)\",\n    \"rgba(47,107,142,1)\",\n    \"rgba(47,108,142,1)\",\n    \"rgba(46,109,142,1)\",\n    \"rgba(46,110,142,1)\",\n    \"rgba(45,111,142,1)\",\n    \"rgba(45,112,142,1)\",\n    \"rgba(45,112,142,1)\",\n    \"rgba(44,113,142,1)\",\n    \"rgba(44,114,142,1)\",\n    \"rgba(43,115,142,1)\",\n    \"rgba(43,116,142,1)\",\n    \"rgba(43,117,142,1)\",\n    \"rgba(42,118,142,1)\",\n    \"rgba(42,119,142,1)\",\n    \"rgba(41,120,142,1)\",\n    \"rgba(41,121,142,1)\",\n    \"rgba(41,122,142,1)\",\n    \"rgba(40,123,142,1)\",\n    \"rgba(40,124,142,1)\",\n    \"rgba(40,125,142,1)\",\n    \"rgba(39,126,142,1)\",\n    \"rgba(39,127,142,1)\",\n    \"rgba(38,128,142,1)\",\n    \"rgba(38,129,142,1)\",\n    \"rgba(38,130,142,1)\",\n    \"rgba(37,131,142,1)\",\n    \"rgba(37,131,142,1)\",\n    \"rgba(37,132,142,1)\",\n    \"rgba(36,133,142,1)\",\n    \"rgba(36,134,142,1)\",\n    \"rgba(35,135,142,1)\",\n    \"rgba(35,136,142,1)\",\n    \"rgba(35,137,142,1)\",\n    \"rgba(34,138,141,1)\",\n    \"rgba(34,139,141,1)\",\n    \"rgba(34,140,141,1)\",\n    \"rgba(33,141,141,1)\",\n    \"rgba(33,142,141,1)\",\n    \"rgba(33,143,141,1)\",\n    \"rgba(32,144,141,1)\",\n    \"rgba(32,145,140,1)\",\n    \"rgba(32,146,140,1)\",\n    \"rgba(32,147,140,1)\",\n    \"rgba(31,147,140,1)\",\n    \"rgba(31,148,140,1)\",\n    \"rgba(31,149,139,1)\",\n    \"rgba(31,150,139,1)\",\n    \"rgba(31,151,139,1)\",\n    \"rgba(30,152,139,1)\",\n    \"rgba(30,153,138,1)\",\n    \"rgba(30,154,138,1)\",\n    \"rgba(30,155,138,1)\",\n    \"rgba(30,156,137,1)\",\n    \"rgba(30,157,137,1)\",\n    \"rgba(30,158,137,1)\",\n    \"rgba(30,159,136,1)\",\n    \"rgba(30,160,136,1)\",\n    \"rgba(31,161,136,1)\",\n    \"rgba(31,162,135,1)\",\n    \"rgba(31,163,135,1)\",\n    \"rgba(31,163,134,1)\",\n    \"rgba(32,164,134,1)\",\n    \"rgba(32,165,134,1)\",\n    \"rgba(33,166,133,1)\",\n    \"rgba(33,167,133,1)\",\n    \"rgba(34,168,132,1)\",\n    \"rgba(35,169,131,1)\",\n    \"rgba(35,170,131,1)\",\n    \"rgba(36,171,130,1)\",\n    \"rgba(37,172,130,1)\",\n    \"rgba(38,173,129,1)\",\n    \"rgba(39,174,129,1)\",\n    \"rgba(40,175,128,1)\",\n    \"rgba(41,175,127,1)\",\n    \"rgba(42,176,127,1)\",\n    \"rgba(43,177,126,1)\",\n    \"rgba(44,178,125,1)\",\n    \"rgba(46,179,124,1)\",\n    \"rgba(47,180,124,1)\",\n    \"rgba(48,181,123,1)\",\n    \"rgba(50,182,122,1)\",\n    \"rgba(51,183,121,1)\",\n    \"rgba(53,183,121,1)\",\n    \"rgba(54,184,120,1)\",\n    \"rgba(56,185,119,1)\",\n    \"rgba(57,186,118,1)\",\n    \"rgba(59,187,117,1)\",\n    \"rgba(61,188,116,1)\",\n    \"rgba(62,189,115,1)\",\n    \"rgba(64,190,114,1)\",\n    \"rgba(66,190,113,1)\",\n    \"rgba(68,191,112,1)\",\n    \"rgba(70,192,111,1)\",\n    \"rgba(72,193,110,1)\",\n    \"rgba(73,194,109,1)\",\n    \"rgba(75,194,108,1)\",\n    \"rgba(77,195,107,1)\",\n    \"rgba(79,196,106,1)\",\n    \"rgba(81,197,105,1)\",\n    \"rgba(83,198,104,1)\",\n    \"rgba(85,198,102,1)\",\n    \"rgba(88,199,101,1)\",\n    \"rgba(90,200,100,1)\",\n    \"rgba(92,201,99,1)\",\n    \"rgba(94,201,98,1)\",\n    \"rgba(96,202,96,1)\",\n    \"rgba(98,203,95,1)\",\n    \"rgba(101,204,94,1)\",\n    \"rgba(103,204,92,1)\",\n    \"rgba(105,205,91,1)\",\n    \"rgba(108,206,90,1)\",\n    \"rgba(110,206,88,1)\",\n    \"rgba(112,207,87,1)\",\n    \"rgba(115,208,85,1)\",\n    \"rgba(117,208,84,1)\",\n    \"rgba(119,209,82,1)\",\n    \"rgba(122,210,81,1)\",\n    \"rgba(124,210,79,1)\",\n    \"rgba(127,211,78,1)\",\n    \"rgba(129,212,76,1)\",\n    \"rgba(132,212,75,1)\",\n    \"rgba(134,213,73,1)\",\n    \"rgba(137,213,72,1)\",\n    \"rgba(139,214,70,1)\",\n    \"rgba(142,215,68,1)\",\n    \"rgba(144,215,67,1)\",\n    \"rgba(147,216,65,1)\",\n    \"rgba(149,216,63,1)\",\n    \"rgba(152,217,62,1)\",\n    \"rgba(155,217,60,1)\",\n    \"rgba(157,218,58,1)\",\n    \"rgba(160,218,57,1)\",\n    \"rgba(163,219,55,1)\",\n    \"rgba(165,219,53,1)\",\n    \"rgba(168,220,51,1)\",\n    \"rgba(171,220,50,1)\",\n    \"rgba(173,221,48,1)\",\n    \"rgba(176,221,46,1)\",\n    \"rgba(179,221,45,1)\",\n    \"rgba(181,222,43,1)\",\n    \"rgba(184,222,41,1)\",\n    \"rgba(187,223,39,1)\",\n    \"rgba(189,223,38,1)\",\n    \"rgba(192,223,36,1)\",\n    \"rgba(195,224,35,1)\",\n    \"rgba(197,224,33,1)\",\n    \"rgba(200,225,32,1)\",\n    \"rgba(203,225,30,1)\",\n    \"rgba(205,225,29,1)\",\n    \"rgba(208,226,28,1)\",\n    \"rgba(211,226,27,1)\",\n    \"rgba(213,226,26,1)\",\n    \"rgba(216,227,25,1)\",\n    \"rgba(219,227,24,1)\",\n    \"rgba(221,227,24,1)\",\n    \"rgba(224,228,24,1)\",\n    \"rgba(226,228,24,1)\",\n    \"rgba(229,228,24,1)\",\n    \"rgba(232,229,25,1)\",\n    \"rgba(234,229,25,1)\",\n    \"rgba(237,229,26,1)\",\n    \"rgba(239,230,27,1)\",\n    \"rgba(242,230,28,1)\",\n    \"rgba(244,230,30,1)\",\n    \"rgba(247,230,31,1)\",\n    \"rgba(249,231,33,1)\",\n    \"rgba(251,231,35,1)\",\n    \"rgba(254,231,36,1)\"\n]","import Ajv from 'ajv';\nimport HiGlassSchema from \"./higlass.schema.json\";\nimport { HiGlassSpec, EnumTrackType } from \"./higlass.schema\";\nimport { HiGlassModel } from './higlass-model';\nimport { parseServerAndTilesetUidFromUrl, validTilesetUrl } from '../utils';\nimport { GenericType, Track, Channel, IsDataDeep, IsHiGlassTrack, IsChannelDeep, IsShallowMark, IsMarkDeep } from '../gemini.schema';\nimport { BoundingBox } from '../utils/bounding-box';\nimport { COLOR_SCHEME_VIRIDIS } from '../utils/contants';\n\nexport function compiler(track: Track | GenericType<Channel>, bb: BoundingBox): HiGlassSpec {\n\n    const higlass = new HiGlassModel();\n\n    if (IsHiGlassTrack(track) && IsDataDeep(track.data)) {\n        const { server, tilesetUid } = parseServerAndTilesetUidFromUrl(track.data.url);\n\n        // Is this track horizontal or vertical?\n        const isXGenomic = IsChannelDeep(track.x) && track.x.type === \"genomic\"\n        const isYGenomic = IsChannelDeep(track.y) && track.y.type === \"genomic\"\n        const xDomain = isXGenomic && IsChannelDeep(track.x) ? track.x.domain as [number, number] : undefined\n        const yDomain = isYGenomic && IsChannelDeep(track.y) ? track.y.domain as [number, number] : undefined\n        const trackDirection = isXGenomic && isYGenomic ? 'both' : isXGenomic ? 'horizontal' : 'vertical'\n        const trackType = IsShallowMark(track.mark) ? track.mark : IsMarkDeep(track.mark) ? track.mark.type : 'unknown'\n\n        higlass.setDomain(xDomain, yDomain);\n\n        const typeMap: { [k: string]: EnumTrackType } = {\n            // TODO: Add horizontal vs. vertical\n            'gene-annotation-higlass': `${trackDirection}-gene-annotations`,\n            'point': `${trackDirection}-point`,\n            'bar': `${trackDirection}-bar`,\n            'line': `${trackDirection}-line`,\n            'rect': `${trackDirection}-1d-heatmap`,\n            // ...\n        } as { [k: string]: EnumTrackType }\n\n        const defaultOptions: { [k: string]: Object } = {\n            'point': {\n                pointColor: '#0072B2',\n                labelPosition: 'hidden',\n                axisPositionHorizontal: 'left'\n            },\n            'bar': {\n                barFillColor: '#0072B2',\n                labelPosition: 'hidden',\n                axisPositionHorizontal: 'left'\n            },\n            'line': {\n                lineStrokeColor: '#0072B2',\n                labelPosition: 'hidden',\n                axisPositionHorizontal: 'left'\n            },\n            'rect': {\n                colorRange: COLOR_SCHEME_VIRIDIS,\n                labelPosition: 'hidden'\n            }\n\n        }\n        const higlassTrackType = typeMap[trackType];\n        if (!higlassTrackType) return {};\n\n        higlass.setMainTrack({\n            type: higlassTrackType,\n            server: server,\n            tilesetUid: tilesetUid,\n            width: bb.width,\n            height: bb.height, // TODO: consider the height of axes\n            options: defaultOptions[trackType]\n        }).addTrackSourceServers(server);\n\n        const chanToPos: { [k: string]: 'left' | 'right' | 'top' | 'bottom' } = {\n            x: 'bottom',\n            x1: 'top',\n            y: 'left',\n            y1: 'right'\n        }\n        Object.keys(chanToPos).forEach(c => {\n            const channelDef = (track as GenericType<Channel>)[c];\n            if (IsChannelDeep(channelDef) && channelDef.axis) {\n                higlass.setAxisTrack(chanToPos[c]);\n            }\n        })\n\n        higlass.validateSpec();\n\n        console.log('HiGlass viewConfig:', higlass.spec());\n\n        return higlass.spec();\n    }\n    return {};\n}\n\nexport function validateHG(hg: HiGlassSpec): boolean {\n\n    const validate = new Ajv({ extendRefs: true }).compile(HiGlassSchema);\n    const valid = validate(hg);\n\n    if (validate.errors) {\n        console.warn(JSON.stringify(validate.errors, null, 2));\n    }\n\n    // TODO: check types such as default values and locationLocks\n\n    return valid as boolean;\n} ","export interface SpecValidity {\n    msg: string\n    isValid: boolean\n}\n\nexport class SpecValidityModel {\n    private validity: SpecValidity\n    constructor(valid?: boolean) {\n        this.validity = {\n            msg: \"No message\",\n            isValid: valid ? valid : false\n        }\n    }\n    public getValidity() {\n        return this.validity;\n    }\n    public isValid() {\n        return this.validity.isValid;\n    }\n    public setMsg(msg: string) {\n        this.validity.msg = msg;\n        return this;\n    }\n    public setIsValid(isValid: boolean) {\n        this.validity.isValid = isValid;\n        return this;\n    }\n    public setValidity(validity: SpecValidity) {\n        this.setIsValid(validity.isValid);\n        this.setMsg(validity.msg);\n        return this;\n    }\n    public printValidity() {\n        if (!this.getValidity().isValid) {\n            console.warn(this.validity.msg);\n        } else {\n            console.log(this.validity.msg);\n        }\n    }\n}","import { BoundingBox } from \"../utils/bounding-box\";\nimport { Track, GenericType, Channel, IsChannelDeep, Datum, IsChannelValue, IsDataDeep } from \"../gemini.schema\";\nimport * as d3 from 'd3'\nimport { validateBetweenLinkSpec } from \"./link-validate\";\nimport { getChartType } from \"./chart-type\";\nimport { renderBetweenLineLink } from \"./line-connection\";\nimport { renderBetweenBandLink } from \"./band-connection\";\n\nexport type LinkPosition =\n    | 'left-bottom'\n    | 'left-top'\n    | 'left-right'\n    | 'top-right'\n    | 'top-bottom'\n    | 'right-bottom'\n    | 'unknown'\n\nexport interface LinkStyle { // TODO: Extend general styles.\n    fill?: string\n    stroke?: string\n    strokeWidth?: number\n    opacity?: number\n}\n\nexport const DEFAULT_LINK_STYLE: Required<LinkStyle> = {\n    fill: 'lightgray',\n    stroke: 'gray',\n    strokeWidth: 1,\n    opacity: 0.7\n} as const\n\nexport const LinkChannelToStyleMap: { [k: string]: keyof typeof DEFAULT_LINK_STYLE } = {\n    color: 'fill',\n    stroke: 'stroke',\n    strokeWidth: 'strokeWidth',\n    opacity: 'opacity'\n}\n\nexport class LinkStyleModel {\n    private style: Required<LinkStyle>;\n    constructor(track: Track | GenericType<Channel>) {\n        this.style = { ...DEFAULT_LINK_STYLE };\n        // Fill styles using spec.\n        Object.keys(LinkChannelToStyleMap).forEach(c => {\n            const channel = (track as GenericType<Channel>)[c];\n            if (IsChannelValue(channel)) {\n                (this.style[LinkChannelToStyleMap[c]] as any /* TODO: */) = channel.value;\n            }\n        })\n    }\n    public getStyle() {\n        return this.style;\n    }\n}\n\nexport function getLinkPosition(track: Track | GenericType<Channel>): LinkPosition {\n    const xField = IsChannelDeep(track.x) ? track.x.field : undefined;\n    const x1Field = IsChannelDeep(track.x1) ? track.x1.field : undefined;\n    const yField = IsChannelDeep(track.y) ? track.y.field : undefined;\n    const y1Field = IsChannelDeep(track.y1) ? track.y1.field : undefined;\n\n    if (xField && yField) return 'left-bottom';\n    else if (x1Field && yField) return 'left-top';\n    else if (x1Field && y1Field) return 'top-right';\n    else if (xField && y1Field) return 'right-bottom';\n    else if (xField && x1Field) return 'top-bottom';\n    else if (yField && y1Field) return 'left-right';\n    else return 'unknown';\n}\n\nexport function renderBetweenLink(\n    g: d3.Selection<SVGGElement, any, any, any>,\n    tracksWithBB: { boundingBox: BoundingBox, track: Track | GenericType<Channel> }[]\n) {\n    tracksWithBB.forEach(tb => {\n        // validate\n        const valid = validateBetweenLinkSpec(tb.track);\n        if (!valid.isValid()) {\n            valid.printValidity();\n            return;\n        }\n        // render\n        switch (getChartType(tb.track)) {\n            case 'line-connection':\n                if (IsDataDeep(tb.track.data)) {\n                    d3.csv(tb.track.data.url).then(data =>\n                        renderBetweenLineLink(g, { ...tb.track, data } as Track, tb.boundingBox)\n                    )\n                }\n                break;\n            case 'band-connection':\n                if (IsDataDeep(tb.track.data)) {\n                    d3.csv(tb.track.data.url).then(data =>\n                        renderBetweenBandLink(g, { ...tb.track, data } as Track, tb.boundingBox)\n                    )\n                }\n                break;\n            default:\n                break;\n        }\n    });\n}","import { Track, GenericType, Channel, IsChannelDeep } from \"../gemini.schema\";\nimport { SpecValidityModel } from \"./validate\";\n\nexport function validateBetweenLinkSpec(track: Track | GenericType<Channel>) {\n    const validity = new SpecValidityModel(true);\n\n    const xField = IsChannelDeep(track.x) ? track.x.field : undefined;\n    const x1Field = IsChannelDeep(track.x1) ? track.x1.field : undefined;\n    const yField = IsChannelDeep(track.y) ? track.y.field : undefined;\n    const y1Field = IsChannelDeep(track.y1) ? track.y1.field : undefined;\n\n    const definedFields = [xField, x1Field, yField, y1Field].filter(d => d);\n\n    if (definedFields.length < 2) {\n        validity.setMsg('Less than two fields are specified for a `link-between` mark.');\n        validity.setIsValid(false);\n    }\n    else if (definedFields.length > 2) {\n        validity.setMsg('More than two fields are specified for a `link-between` mark.');\n    }\n    return validity;\n}","import { Track, GenericType, Channel, IsChannelDeep } from \"../gemini.schema\";\n\nexport type ChartType =\n    // ...\n    | 'line-connection'\n    | 'band-connection'\n    | 'unknown'\n\nexport function getChartType(track: Track | GenericType<Channel>): ChartType {\n\n    type PrimitiveChannel = 'x' | 'xe' | 'y' | 'ye';\n\n    const xField = IsChannelDeep(track.x) ? track.x.field : undefined;\n    const xeField = IsChannelDeep(track.xe) ? track.xe.field : undefined;\n    const x1Field = IsChannelDeep(track.x1) ? track.x1.field : undefined;\n    const x1eField = IsChannelDeep(track.x1e) ? track.x1e.field : undefined;\n    const yField = IsChannelDeep(track.y) ? track.y.field : undefined;\n    const yeField = IsChannelDeep(track.ye) ? track.ye.field : undefined;\n    const y1Field = IsChannelDeep(track.y1) ? track.y1.field : undefined;\n    const y1eField = IsChannelDeep(track.y1e) ? track.y1e.field : undefined;\n\n    const numOfChannelsDefined: { [k in PrimitiveChannel]: number } = {\n        x: [xField, xeField].filter(d => d).length,\n        xe: [x1Field, x1eField].filter(d => d).length,\n        y: [yField, yeField].filter(d => d).length,\n        ye: [y1Field, y1eField].filter(d => d).length\n    }\n\n    if (track.mark === 'link-between') {\n        const numPairOfChannelsDefined = Object.keys(numOfChannelsDefined).map(\n            key => numOfChannelsDefined[key as PrimitiveChannel]\n        ).filter(d => d >= 2).length;\n        if (numPairOfChannelsDefined >= 2) {\n            return 'band-connection';\n        } else {\n            return 'line-connection';\n        }\n    }\n    return 'unknown';\n}","import { BoundingBox } from \"../utils/bounding-box\";\nimport { Track, GenericType, Channel, IsChannelDeep, Datum } from \"../gemini.schema\";\nimport * as d3 from 'd3'\nimport { getLinkPosition, LinkStyleModel } from \"./link\";\n\nexport function renderBetweenLineLink(\n    g: d3.Selection<SVGGElement, any, any, any>,\n    track: Track | GenericType<Channel>,\n    bb: BoundingBox\n) {\n    const styles = new LinkStyleModel(track);\n\n    const xField = IsChannelDeep(track.x) ? track.x.field : undefined;\n    const x1Field = IsChannelDeep(track.x1) ? track.x1.field : undefined;\n    const yField = IsChannelDeep(track.y) ? track.y.field : undefined;\n    const y1Field = IsChannelDeep(track.y1) ? track.y1.field : undefined;\n\n    const [f1, f2] = [xField, x1Field, yField, y1Field].filter(d => d);\n\n    const xScale = d3.scaleLinear<number, number>()\n        .domain([0, 99]) // TODO: Support data-driven domain.\n        .range([bb.x, bb.x + bb.width])\n    const yScale = d3.scaleLinear<number, number>()\n        .domain([0, 99])\n        .range([bb.y, bb.y + bb.height])\n\n    // calculate position of points\n    const point: {\n        x: (d: Datum) => number,\n        y: (d: Datum) => number,\n    }[] = [];\n\n    const position = getLinkPosition(track);\n    if (position.includes('left')) {\n        point.push({\n            x: () => bb.x,\n            y: (d: Datum) => yScale(d[yField as string] as number)\n        });\n    }\n    if (position.includes('bottom')) {\n        point.push({\n            x: (d: Datum) => xScale(d[xField as string] as number),\n            y: () => bb.y + bb.height\n        });\n    }\n    if (position.includes('top')) {\n        point.push({\n            x: (d: Datum) => xScale(d[x1Field as string] as number),\n            y: () => bb.y\n        });\n    }\n    if (position.includes('right')) {\n        point.push({\n            x: () => bb.x + bb.width,\n            y: (d: Datum) => yScale((d[y1Field as string] as number))\n        });\n    }\n\n    // render\n    g.selectAll('.line')\n        .data(track.data as Datum[])\n        .enter()\n        .filter(\n            // TODO: only for demo\n            d => Math.abs((d[f1 as string] as number) - (d[f2 as string] as number)) < 30\n        )\n        .append('line')\n        .attr('x1', d => point[0].x(d))\n        .attr('y1', d => point[0].y(d))\n        .attr('x2', d => point[1].x(d))\n        .attr('y2', d => point[1].y(d))\n        .attr('fill', styles.getStyle().fill)\n        .attr('stroke', styles.getStyle().stroke)\n        .attr('stroke-width', styles.getStyle().strokeWidth)\n        .attr('opacity', styles.getStyle().opacity)\n}","import { BoundingBox } from \"../utils/bounding-box\";\nimport { Track, GenericType, Channel, IsChannelDeep, Datum } from \"../gemini.schema\";\nimport * as d3 from 'd3'\nimport { getLinkPosition, LinkStyleModel } from \"./link\";\n\nexport function renderBetweenBandLink(\n    g: d3.Selection<SVGGElement, any, any, any>,\n    track: Track | GenericType<Channel>,\n    bb: BoundingBox\n) {\n    const styles = new LinkStyleModel(track);\n\n    const xField = IsChannelDeep(track.x) ? track.x.field : undefined;\n    const xeField = IsChannelDeep(track.xe) ? track.xe.field : undefined;\n    const x1Field = IsChannelDeep(track.x1) ? track.x1.field : undefined;\n    const x1eField = IsChannelDeep(track.x1e) ? track.x1e.field : undefined;\n    const yField = IsChannelDeep(track.y) ? track.y.field : undefined;\n    const yeField = IsChannelDeep(track.ye) ? track.ye.field : undefined;\n    const y1Field = IsChannelDeep(track.y1) ? track.y1.field : undefined;\n    const y1eField = IsChannelDeep(track.y1e) ? track.y1e.field : undefined;\n\n    const xScale = d3.scaleLinear<number, number>()\n        .domain([0, 99]) // TODO:\n        .range([bb.x, bb.x + bb.width])\n    const yScale = d3.scaleLinear<number, number>()\n        .domain([0, 99])\n        .range([bb.y, bb.y + bb.height])\n\n    // calculate position of points\n    const point: {\n        x: (d: Datum) => number,\n        xe: (d: Datum) => number,\n        y: (d: Datum) => number,\n        ye: (d: Datum) => number\n    }[] = [];\n\n    const position = getLinkPosition(track);\n    if (position.includes('left')) {\n        point.push({\n            x: () => bb.x,\n            xe: () => bb.x,\n            y: (d: Datum) => yScale(d[yField as string] as number),\n            ye: (d: Datum) => yScale(d[yeField as string] as number)\n        });\n    }\n    if (position.includes('bottom')) {\n        point.push({\n            x: (d: Datum) => xScale(d[xField as string] as number),\n            xe: (d: Datum) => xScale(d[xeField as string] as number),\n            y: () => bb.y + bb.height,\n            ye: () => bb.y + bb.height\n        });\n    }\n    if (position.includes('top')) {\n        point.push({\n            x: (d: Datum) => xScale(d[x1Field as string] as number),\n            xe: (d: Datum) => xScale(d[x1eField as string] as number),\n            y: () => bb.y,\n            ye: () => bb.y\n        });\n    }\n    if (position.includes('right')) {\n        point.push({\n            x: () => bb.x + bb.width,\n            xe: () => bb.x + bb.width,\n            y: (d: Datum) => yScale((d[y1Field as string] as number)),\n            ye: (d: Datum) => yScale((d[y1eField as string] as number))\n        });\n    }\n\n    // render\n    g.selectAll('.polygon')\n        .data(track.data as Datum[])\n        .enter()\n        .append('polygon')\n        .attr('points', d => {\n            const primaryPointStart = `${point[0].x(d)},${point[0].y(d)}`;\n            const primaryPointEnd = `${point[0].xe(d)},${point[0].ye(d)}`;\n            const secondaryPointStart = `${point[1].xe(d)},${point[1].ye(d)}`;\n            const secondaryPointEnd = `${point[1].x(d)},${point[1].y(d)}`;\n            return `${primaryPointStart} ${primaryPointEnd} ${secondaryPointStart} ${secondaryPointEnd}`;\n        })\n        .attr('fill', styles.getStyle().fill)\n        .attr('stroke', styles.getStyle().stroke)\n        .attr('stroke-width', styles.getStyle().strokeWidth)\n        .attr('opacity', styles.getStyle().opacity)\n}","import * as d3 from \"d3\";\nimport { GeminiSpec, Track, GenericType, Channel, IsNotEmptyTrack, IsHiGlassTrack } from \"../gemini.schema\";\nimport { HiGlassTrack, renderHiGlass } from \"./higlass\";\nimport { BoundingBox } from \"../utils/bounding-box\";\nimport { TRACK_GAP } from \"./defaults\";\nimport { renderBetweenLink } from \"./link\";\nimport { trackStyle } from \"./layout\";\n\nexport function renderLinearLayout(\n    g: d3.Selection<SVGGElement, any, any, any>,\n    gm: GeminiSpec,\n    setHiGlassInfo: (higlassInfo: HiGlassTrack[]) => void,\n    boundingBox: BoundingBox\n) {\n    const wrap: number = gm.layout?.wrap ?? 999;\n\n    // Generate layout data\n    const trackInfo: { boundingBox: BoundingBox, track: Track | GenericType<Channel> }[] = [];\n    let cumX = boundingBox.x\n    let cumY = boundingBox.y\n    if (gm.layout?.direction === 'horizontal') {\n        gm.tracks.forEach((track, i) => {\n            if (IsNotEmptyTrack(track)) {\n                trackInfo.push({\n                    track, boundingBox: {\n                        x: cumX, width: track.width as number,\n                        y: cumY, height: track.height as number\n                    }\n                })\n                cumX += track.width as number + TRACK_GAP\n                if (i % wrap === wrap - 1) {\n                    cumX = boundingBox.x\n                    cumY = cumY += track.height as number + TRACK_GAP\n                }\n            }\n        })\n    } else {\n        gm.tracks.forEach((track, i) => {\n            if (IsNotEmptyTrack(track)) {\n                trackInfo.push({\n                    track, boundingBox: {\n                        x: cumX, width: track.width as number,\n                        y: cumY, height: track.height as number\n                    }\n                })\n                cumY += track.height as number + TRACK_GAP;\n                if (i % wrap === wrap - 1) {\n                    cumX = cumX += track.width as number + TRACK_GAP\n                    cumY = boundingBox.y\n                }\n            }\n        })\n    }\n    ///\n\n    // Render track backgrounds\n    g.selectAll('rect')\n        .data(trackInfo)\n        .enter()\n        .append('rect')\n        .attr('x', d => d.boundingBox.x)\n        .attr('width', d => d.boundingBox.width)\n        .attr('y', d => d.boundingBox.y)\n        .attr('height', d => d.boundingBox.height)\n        .attr('fill', d => trackStyle.background(d.track as Track))\n        .attr('stroke', d => trackStyle.stroke(d.track as Track))\n        .attr('stroke-width', d => trackStyle.strokeWidth(d.track as Track))\n\n    // Render links and bands\n    renderBetweenLink(g, trackInfo.filter(d => d.track.mark === 'link-between'));\n\n    // Render HiGlass tracks\n    renderHiGlass(g, trackInfo.filter(d => IsHiGlassTrack(d.track)), setHiGlassInfo);\n}","export const DEFAULT_VISUAL_PROPERTIES = {\n    opacity: 1\n}\n\n// gab between tracks\nexport const TRACK_GAP = 3;\n\n// empty space inside the visualization for circular layouts\nexport const INNER_CIRCLE_RADIUS = 150","import { BoundingBox } from '../utils/bounding-box';\nimport { Track, GenericType, Channel } from '../gemini.schema';\nimport { compiler } from '../higlass/gemini-to-higlass';\nimport testViewConfig from '../test/higlass/hg-only-heatmap.json';\n\nexport interface HiGlassTrack {\n    viewConfig: Object\n    boundingBox: BoundingBox,\n}\n\nexport function renderHiGlass(\n    g: d3.Selection<SVGGElement, any, any, any>,\n    tracksWithBB: { boundingBox: BoundingBox, track: Track | GenericType<Channel> }[],\n    setHiGlassInfo: (higlassInfo: HiGlassTrack[]) => void\n) {\n    const hiGlassInfo: HiGlassTrack[] = [];\n    tracksWithBB.forEach(tb => {\n        const { track, boundingBox: bb } = tb;\n\n        // add a HiGlass view config\n        hiGlassInfo.push({ boundingBox: bb, viewConfig: compiler(track, bb) });\n    })\n    setHiGlassInfo(hiGlassInfo);\n\n    /////// DEBUG\n    // const testHGInfo = tracksWithBB.map(tb => ({ boundingBox: tb.bb, viewConfig: testViewConfig }));\n    // console.log(testHGInfo);\n    // setHiGlassInfo(tracksWithBB.map(tb => ({\n    //     boundingBox: tb.bb,\n    //     viewConfig: testViewConfig\n    // })));\n    ///////\n}","import * as d3 from 'd3'\nimport { GeminiSpec, Track, Layout, GenericType, EmptyTrack, Channel } from '../gemini.schema';\nimport { HiGlassTrack } from './higlass';\nimport { BoundingBox } from '../utils/bounding-box';\nimport { renderCircularLayout } from './layout-circular';\nimport { renderLinearLayout } from './layout-linear';\n\nexport const trackStyle = {\n    background: (track: Track) => track.style?.background ?? 'white',\n    stroke: (track: Track) => track.style?.stroke ?? '#377FB8',   // TODO: for demo\n    strokeWidth: (track: Track) => track.style?.strokeWidth ?? 1\n}\n\nexport function renderLayout(\n    g: d3.Selection<SVGGElement, any, any, any>,\n    gm: GeminiSpec,\n    setHiGlassInfo: (higlassInfo: HiGlassTrack[]) => void,\n    boundingBox: BoundingBox\n) {\n    g.selectAll('*').remove();\n\n    if (gm.layout?.type === 'circular') {\n        renderCircularLayout(g, gm, setHiGlassInfo, boundingBox)\n    } else {\n        renderLinearLayout(g, gm, setHiGlassInfo, boundingBox)\n    }\n}\n\n/**\n * Convert the vertical-direction layout of tracks to the identical, horizontal-version, tracks.\n * This is deprecated since this cannot support some specifications (e.g., six tracks with `wrap` === 3).\n * TODO: Support this function when we use `EmptyTrack`.\n * @param gm A Gemini specification.\n */\nexport function convertLayout(gm: GeminiSpec) {\n    if (gm.layout?.direction !== 'vertical') {\n        return gm;\n    }\n    const wrap = (gm.layout.wrap ?? 0) > gm.tracks.length ? gm.tracks.length : (gm.layout.wrap ?? gm.tracks.length);\n    const newWrap = Math.ceil(gm.tracks.length / wrap);\n\n    const newLayout: Layout = {\n        ...gm.layout,\n        direction: 'horizontal',\n        wrap: newWrap\n    }\n\n    const tracks = gm.tracks\n    const newTracks: (Track | GenericType<Channel> | EmptyTrack)[] = []\n    for (let remainder = 0; remainder < wrap; remainder++) {\n        newTracks.push(...tracks.filter((t, i) => i % wrap === remainder))\n    }\n\n    return {\n        ...gm,\n        layout: newLayout,\n        tracks: newTracks\n    }\n}","import * as d3 from \"d3\";\nimport { GeminiSpec, Track, GenericType, Channel, IsNotEmptyTrack } from \"../gemini.schema\";\nimport { BoundingBox } from \"../utils/bounding-box\";\nimport { HiGlassTrack } from \"./higlass\";\nimport { TRACK_GAP } from \"./defaults\";\nimport { DefaultArcObject } from \"d3\";\nimport { trackStyle } from \"./layout\";\n\ninterface ArcInfo {\n    innerRadius: number\n    outerRadius: number\n    startAngle: number\n    endAngle: number\n}\n\nexport function renderCircularLayout(\n    g: d3.Selection<SVGGElement, any, any, any>,\n    gm: GeminiSpec,\n    setHiGlassInfo: (higlassInfo: HiGlassTrack[]) => void,\n    boundingBox: BoundingBox\n) {\n    const wrap: number = gm.layout?.wrap ?? 999;\n    const totalRadius = boundingBox.height / 2.0\n    const totalLength = d3.sum(\n        // Look into the first row\n        gm.layout?.direction === 'horizontal' ?\n            gm.tracks.filter((t, i) => i < wrap)\n                .map(d => IsNotEmptyTrack(d) ? d.width as number : 0) :\n            gm.tracks.filter((t, i) => i % wrap == 0)\n                .map(d => IsNotEmptyTrack(d) ? d.width as number : 0)\n\n    )\n    const angleGap = Math.PI * 2 / 160.0;\n\n    // Generate layout data\n    const trackInfo: { arc: ArcInfo, track: Track | GenericType<Channel> }[] = []\n    let cumDonutBandWidth = 0\n    let cumLength = 0\n    if (gm.layout?.direction === \"horizontal\") {\n        // adjacently place first\n        gm.tracks.forEach((track, i) => {\n            if (IsNotEmptyTrack(track)) {\n                const donutBandWidth = track.height as number // Height is used for the width of donut band.\n                const length = track.width as number // Width is used for calculating the proportion of the circumference.\n                const startAngle = (Math.PI * 2) * cumLength / totalLength + angleGap\n                const endAngle = startAngle + (Math.PI * 2) * length / totalLength - angleGap\n                trackInfo.push({\n                    track, arc: {\n                        innerRadius: totalRadius - cumDonutBandWidth - donutBandWidth,\n                        outerRadius: totalRadius - cumDonutBandWidth,\n                        startAngle,\n                        endAngle\n                    }\n                })\n                cumLength += length\n                if (i % wrap === wrap - 1) {\n                    cumLength = 0\n                    cumDonutBandWidth += donutBandWidth + TRACK_GAP\n                }\n            }\n        })\n    }\n    else {\n        // stack first\n        gm.tracks.forEach((track, i) => {\n            if (IsNotEmptyTrack(track)) {\n                const donutBandWidth = track.height as number // Height is used for the width of donut band.\n                const length = track.width as number // Width is used for calculating the proportion of the circumference.\n                const startAngle = (Math.PI * 2) * cumLength / totalLength + angleGap\n                const endAngle = startAngle + (Math.PI * 2) * length / totalLength - angleGap\n                trackInfo.push({\n                    track, arc: {\n                        innerRadius: totalRadius - cumDonutBandWidth - donutBandWidth,\n                        outerRadius: totalRadius - cumDonutBandWidth,\n                        startAngle,\n                        endAngle\n                    }\n                })\n                cumDonutBandWidth += donutBandWidth + TRACK_GAP\n                if (i % wrap === wrap - 1) {\n                    cumDonutBandWidth = 0\n                    cumLength += length;\n                }\n            }\n        })\n    }\n\n    console.log('arcs', trackInfo);\n    g.append('g')\n        .attr('transform', `translate(${boundingBox.x + totalRadius}, ${boundingBox.y + totalRadius})`)\n        .selectAll('path')\n        .data(trackInfo)\n        .enter()\n        .append('path')\n        .attr('fill', d => trackStyle.background(d.track as Track))\n        .attr('stroke', d => trackStyle.stroke(d.track as Track))\n        .attr('stroke-width', d => trackStyle.strokeWidth(d.track as Track))\n        .attr('d', d => d3.arc()\n            .innerRadius(d.arc.innerRadius)\n            .outerRadius(d.arc.outerRadius)(d.arc)\n        )\n\n}","import { GeminiSpec, IsNotEmptyTrack } from \"../gemini.schema\";\nimport { TRACK_GAP, INNER_CIRCLE_RADIUS } from \"../visualizations/defaults\";\nimport * as d3 from \"d3\";\n\nexport interface BoundingBox {\n    x: number\n    y: number\n    width: number\n    height: number\n}\n\n/**\n * Naive approach to calculate the entire size of visualization.\n * @param gm \n */\nexport function calculateSize(gm: GeminiSpec) {\n    const size = { width: 0, height: 0 };\n    const wrap: number = gm.layout?.wrap ?? 999;\n    if (gm.layout?.type === 'circular') {\n        // TODO: https://github.com/sehilyi/gemini/issues/57\n        // square and tightest bounding box enclousing circular tracks\n        size.height = INNER_CIRCLE_RADIUS * 2\n        size.height += d3.sum(\n            // Add the height of tracks in the first column.\n            // TODO: not considering different directions\n            gm.tracks.filter((t, i) => i % wrap === 0)\n                .map(track => IsNotEmptyTrack(track) ? track.height as number : 0)\n        )\n        size.width = size.height\n    }\n    else if (gm.layout?.direction === \"horizontal\") {\n        size.width = d3.sum(\n            // Add the width of tracks in the first row.\n            gm.tracks.filter((t, i) => i < wrap)\n                .map(track => IsNotEmptyTrack(track) ? track.width as number : 0)\n        )\n        size.height = d3.sum(\n            // Add the height of tracks in the first column.\n            gm.tracks.filter((t, i) => i % wrap === 0)\n                .map(track => IsNotEmptyTrack(track) ? track.height as number : 0)\n        ) as number\n        // Add gaps\n        size.width += d3.min([wrap - 1, gm.tracks.length - 1]) as number * TRACK_GAP\n        size.height += Math.floor(gm.tracks.length / wrap) * TRACK_GAP\n    } else {\n        size.width = d3.sum(\n            // Add the width of tracks in the first row.\n            gm.tracks.filter((t, i) => i % wrap === 0)\n                .map(track => IsNotEmptyTrack(track) ? track.width as number : 0)\n        )\n        size.height = d3.sum(\n            // Add the height of tracks in the first column.\n            gm.tracks.filter((t, i) => i < wrap)\n                .map(track => IsNotEmptyTrack(track) ? track.height as number : 0)\n        ) as number\n        // Add gaps\n        size.width += Math.floor(gm.tracks.length / wrap) * TRACK_GAP\n        size.height += d3.min([wrap - 1, gm.tracks.length - 1]) as number * TRACK_GAP\n    }\n    return size;\n}","// @ts-ignore\nimport { HiGlassComponent } from 'higlass';\nimport React, { useState, useEffect, useRef, useMemo } from 'react';\nimport * as d3 from \"d3\"; // TODO: performance\nimport EditorPanel from './editor-panel';\nimport stringify from 'json-stringify-pretty-compact';\nimport SplitPane from 'react-split-pane';\nimport { GeminiSpec, Track, IsDataDeep, IsMarkDeep, IsNotEmptyTrack } from '../lib/gemini.schema';\nimport { debounce } from \"lodash\";\nimport { demos } from './examples';\nimport { renderGlyphPreview } from '../lib/visualizations/glyph-preview';\nimport { replaceGlyphs } from '../lib/utils';\nimport { renderLayoutPreview } from '../lib/visualizations/layout-preview';\nimport { calculateSize } from '../lib/utils/bounding-box';\nimport { HiGlassTrack } from '../lib/visualizations/higlass';\nimport './editor.css';\n\nconst DEBUG_INIT_DEMO_INDEX = 0; //demos.length - 1;\n\nfunction Editor() {\n\n    const glyphSvg = useRef<SVGSVGElement>(null);\n    const layoutSvg = useRef<SVGSVGElement>(null);\n    const [higlassTrackOptions, setHiGlassTrackOptions] = useState<HiGlassTrack[]>([\n        // Debug\n        // { viewConfig: testViewConfig, boundingBox: { x: 60, y: 60, width: 60, height: 500 } }\n    ]);\n    const [demo, setDemo] = useState(demos[DEBUG_INIT_DEMO_INDEX]);\n    const [editorMode, setEditorMode] = useState<'Full Glyph Definition' | 'Predefined Glyph'>('Full Glyph Definition');\n    const [gm, setGm] = useState(stringify(demos[DEBUG_INIT_DEMO_INDEX].spec as GeminiSpec));\n    const [glyphWidth, setGlyphWidth] = useState(demos[DEBUG_INIT_DEMO_INDEX].glyphWidth);\n    const [glyphHeight, setGlyphHeight] = useState(demos[DEBUG_INIT_DEMO_INDEX].glyphHeight);\n\n    useEffect(() => {\n        if (editorMode === 'Full Glyph Definition') {\n            // TODO: Better copying?\n            setGm(stringify(replaceGlyphs(JSON.parse(stringify(demo.spec)) as GeminiSpec)));\n        } else {\n            setGm(stringify(demo.spec as GeminiSpec));\n        }\n        setGlyphWidth(demo.glyphWidth);\n        setGlyphHeight(demo.glyphHeight);\n        setHiGlassTrackOptions([]);\n    }, [demo, editorMode]);\n\n    useEffect(() => {\n        let editedGm;\n        try {\n            editedGm = replaceGlyphs(JSON.parse(gm));\n        } catch (e) {\n            console.warn(\"Cannnot parse the edited code.\");\n        }\n        if (!editedGm) return;\n\n        // Render layout preview\n        renderLayoutPreview(\n            layoutSvg.current as SVGSVGElement,\n            editedGm as GeminiSpec,\n            {\n                x: 60, y: 60,\n                width: calculateSize(editedGm).width,\n                height: calculateSize(editedGm).height\n            },\n            (higlassInfo: HiGlassTrack[]) => {\n                setHiGlassTrackOptions(higlassInfo);\n            }\n        );\n        d3.select(glyphSvg.current).selectAll('*').remove(); // TODO:\n        const track = (editedGm as GeminiSpec)?.tracks?.find(\n            d => IsNotEmptyTrack(d) && IsMarkDeep(d.mark) ? d.mark.type === 'compositeMark' : false\n        )\n        if (!track) return;\n\n        // Render glyph preview\n        if (IsNotEmptyTrack(track) && IsDataDeep(track.data)) {\n            d3.csv(track.data.url).then(data =>\n                renderGlyphPreview(\n                    glyphSvg.current as SVGSVGElement,\n                    { ...track, data } as Track,\n                    glyphWidth,\n                    glyphHeight\n                )\n            );\n        }\n    }, [gm, glyphWidth, glyphHeight]);\n\n    const hglass = useMemo(() => {\n        return higlassTrackOptions.map(op =>\n            <div key={stringify(op.viewConfig)}\n                style={{\n                    position: 'absolute',\n                    display: 'block',\n                    left: op.boundingBox.x,\n                    top: op.boundingBox.y,\n                    width: op.boundingBox.width,\n                    height: op.boundingBox.height,\n                }}>\n                <HiGlassComponent\n                    options={{\n                        bounded: true,\n                        containerPaddingX: 0,\n                        containerPaddingY: 0,\n                        viewMarginTop: 0,\n                        viewMarginBottom: 0,\n                        viewMarginLeft: 0,\n                        viewMarginRight: 0,\n                        viewPaddingTop: 0,\n                        viewPaddingBottom: 0,\n                        viewPaddingLeft: 0,\n                        viewPaddingRight: 0,\n                        sizeMode: \"bounded\"\n                    }}\n                    viewConfig={op.viewConfig}\n                />\n            </div>\n        );\n    }, [higlassTrackOptions]);\n\n    return (\n        <>\n            <div className=\"demo-navbar\">\n                🧬 Gemini <code>Editor</code>\n                <select\n                    onChange={e => {\n                        setDemo(demos.find(d => d.name === e.target.value) as any);\n                    }}\n                    defaultValue={demo.name}>\n                    {demos.map(d => (\n                        <option key={d.name} value={d.name}>\n                            {d.name}\n                        </option>\n                    ))}\n                </select>\n                <select\n                    onChange={e => {\n                        setEditorMode(e.target.value as any);\n                    }}\n                    defaultValue={'Full Glyph Definition'}>\n                    {['Full Glyph Definition', 'Predefined Glyph'].map(d => (\n                        <option key={d} value={d}>\n                            {d}\n                        </option>\n                    ))}\n                </select>\n            </div>\n            <div className=\"editor\">\n                <SplitPane split=\"vertical\" defaultSize=\"50%\" onChange={() => { }}>\n                    {/* Gemini Editor */}\n                    <EditorPanel\n                        code={gm}\n                        readOnly={false}\n                        onChange={debounce(code => {\n                            setGm(code);\n                        }, 1000)}\n                    />\n                    {/* D3 Visualizations */}\n                    <SplitPane split=\"horizontal\" defaultSize=\"20%\" onChange={() => { }}>\n                        <div className=\"preview-container\">\n                            <b>Composite Mark Preview</b>\n                            <div><svg ref={glyphSvg} /></div>\n                        </div>\n                        <div className=\"preview-container\">\n                            <b>Layout Preview</b>\n                            <div style={{ position: 'relative' }}>\n                                <svg ref={layoutSvg} />\n                                {hglass}\n                            </div>\n                        </div>\n                    </SplitPane>\n                </SplitPane>\n            </div>\n        </>\n    );\n}\nexport default Editor;","import { GeminiSpec } from \"../gemini.schema\";\nimport * as d3 from 'd3';\nimport { renderBackground } from \"./guidelines\";\nimport { renderLayout } from \"./layout\";\nimport { BoundingBox } from \"../utils/bounding-box\";\nimport { HiGlassTrack } from \"./higlass\";\n\nexport function renderLayoutPreview(\n    svg: SVGSVGElement,\n    gm: GeminiSpec,\n    boundingBox: BoundingBox,\n    setHiGlassInfo: (higlassInfo: HiGlassTrack[]) => void\n) {\n    if (!svg || !gm) return;\n    d3.select(svg).selectAll('*').remove();\n\n    // styles\n    const PADDING_X = boundingBox.x, PADDING_Y = boundingBox.y;\n    const WIDTH = boundingBox.width + PADDING_X * 2;\n    const HEIGHT = boundingBox.height + PADDING_Y * 2;\n\n    // background and guidelines\n    renderBackground(svg, WIDTH, HEIGHT, PADDING_X, PADDING_Y, false);\n\n    const innerG = d3.select(svg).append(\"g\")\n        .attr(\"width\", boundingBox.width)\n        .attr(\"height\", boundingBox.height)\n\n    renderLayout(innerG, gm, setHiGlassInfo, boundingBox);\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Editor from './editor/editor';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Editor />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}