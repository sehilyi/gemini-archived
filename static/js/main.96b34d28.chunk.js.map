{"version":3,"sources":["editor/editor-panel.tsx","editor/examples.tsx","lib/test/gemini/gene-annotation-plots.ts","lib/test/gemini/cytogenetic-band.ts","lib/test/gemini/layout-examples.ts","lib/gemini.schema.ts","lib/models/track.ts","lib/utils/spec-preprocess.ts","lib/visualizations/guidelines.ts","lib/visualizations/glyph-preview.ts","lib/visualizations/glyph.ts","lib/utils/data-process.ts","lib/test/gemini/glyph/index.ts","lib/test/gemini/glyph/glyph-gene-annotation-plot.ts","lib/test/gemini/glyph/glyph-gene-annotation-plot-v2.ts","lib/test/gemini/glyph/glyph-cytogenetic-band.ts","lib/test/gemini/glyph/glyph-logo.ts","lib/utils/index.ts","lib/test/data/link-data.ts","lib/test/data/band-data.ts","lib/visualizations/layout.ts","lib/visualizations/defaults.ts","lib/visualizations/link.ts","lib/utils/bounding-box.ts","editor/editor.tsx","lib/visualizations/layout-preview.ts","serviceWorker.ts","index.tsx"],"names":["EditorPanel","props","templateCode","code","readOnly","editor","useRef","useState","setCode","useEffect","handleWidth","handleHeight","onResize","width","height","current","layout","language","value","theme","options","autoClosingBrackets","autoClosingQuotes","cursorBlinking","folding","lineNumbersMinChars","minimap","enabled","scrollBeyondLastLine","wordWrap","lineNumbers","renderLineHighlight","renderIndentGuides","onChange","e","editorDidMount","monacoEditor","monaco","console","log","focus","editorWillMount","demos","name","spec","tracks","data","mark","server","type","x","field","xe","y","text","geneOrExon","color","opacity","stroke","glyphWidth","glyphHeight","exonVersion","exonId","stain","domain","range","x1","y1","references","direction","wrap","IsGlyphMark","IsChannelValue","channel","IsChannelBind","IsChannelDeep","TrackModel","track","channelToField","domains","scales","ranges","this","elements","longElements","forEach","element","bind","i","length","select","push","oneOf","deepToLongElements","setDomains","requiredChannels","c","targetChannel","map","d","Object","keys","d3","values","bb","boundingBox","setRanges","datum","scaleChannel","getFieldByChannel","altSize","Math","abs","getEncoding","undefined","renderBackground","svg","w","h","px","py","isGuideline","attr","g","append","renderGlyphPreview","selectAll","remove","WIDTH","HEIGHT","tm","setScales","getElements","markE","filters","transformed_data","filteredData","slice","f","filter","indexOf","transformData","enter","style","styles","dashed","strokeWidth","dy","warn","renderGlyph","PADDING_X","PADDING_Y","PREDEFINED_GLYPHS","description","size","PREDEFINED_GLYPHS_TYPES","replaceGlyphs","predefinedGlyph","includes","find","DUMMY_LINK_DATA","DUMMY_BAND_DATA","from","from1","to","to1","renderLayout","gm","tracksWithBB","cumY","cumX","tb","xScale","yScale","xField","x1Field","yField","y1Field","f1","f2","lines","renderLink","calculateSize","max","DEBUG_INIT_DEMO_INDEX","Editor","glyphSvg","layoutSvg","demo","setDemo","editorMode","setEditorMode","stringify","setGm","setGlyphWidth","setGlyphHeight","JSON","parse","editedGm","renderLayoutPreview","then","className","target","defaultValue","key","split","defaultSize","debounce","ref","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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B,CAAE,KAAQ,GAAI,GAAM,IACpB,CAAE,KAAQ,GAAI,GAAM,IACpB,CAAE,KAAQ,GAAI,GAAM,IACpB,CAAE,KAAQ,GAAI,GAAM,IACpB,CAAE,KAAQ,GAAI,GAAM,IACpB,CAAE,KAAQ,GAAI,GAAM,IACpB,CAAE,KAAQ,GAAI,GAAM,GACpB,CAAE,KAAQ,GAAI,GAAM,IACpB,CAAE,KAAQ,GAAI,GAAM,IACpB,CAAE,KAAQ,GAAI,GAAM,IACpB,CAAE,KAAQ,GAAI,GAAM,IACpB,CAAE,KAAQ,GAAI,GAAM,IACpB,CAAE,KAAQ,GAAI,GAAM,IACpB,CAAE,KAAQ,GAAI,GAAM,IACpB,CAAE,KAAQ,GAAI,GAAM,IACpB,CAAE,KAAQ,GAAI,GAAM,IACpB,CAAE,KAAQ,GAAI,GAAM,IACpB,CAAE,KAAQ,GAAI,GAAM,IACpB,CAAE,KAAQ,GAAI,GAAM,GACpB,CAAE,KAAQ,GAAI,GAAM,GACpB,CAAE,KAAQ,GAAI,GAAM,IACpB,CAAE,KAAQ,GAAI,GAAM,IACpB,CAAE,KAAQ,GAAI,GAAM,IACpB,CAAE,KAAQ,GAAI,GAAM,IACpB,CAAE,KAAQ,GAAI,GAAM,IACpB,CAAE,KAAQ,GAAI,GAAM,IACpB,CAAE,KAAQ,GAAI,GAAM,IACpB,CAAE,KAAQ,GAAI,GAAM,GACpB,CAAE,KAAQ,GAAI,GAAM,IACpB,CAAE,KAAQ,GAAI,GAAM,IACpB,CAAE,KAAQ,GAAI,GAAM,IACpB,CAAE,KAAQ,GAAI,GAAM,IACpB,CAAE,KAAQ,GAAI,GAAM,GACpB,CAAE,KAAQ,GAAI,GAAM,IACpB,CAAE,KAAQ,GAAI,GAAM,IACpB,CAAE,KAAQ,GAAI,GAAM,IACpB,CAAE,KAAQ,GAAI,GAAM,IACpB,CAAE,KAAQ,GAAI,GAAM,IACpB,CAAE,KAAQ,GAAI,GAAM,IACpB,CAAE,KAAQ,GAAI,GAAM,IACpB,CAAE,KAAQ,GAAI,GAAM,IACpB,CAAE,KAAQ,GAAI,GAAM,IACpB,CAAE,KAAQ,GAAI,GAAM,IACpB,CAAE,KAAQ,GAAI,GAAM,IACpB,CAAE,KAAQ,GAAI,GAAM,IACpB,CAAE,KAAQ,GAAI,GAAM,IACpB,CA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","file":"static/js/main.96b34d28.chunk.js","sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\nimport MonacoEditor from 'react-monaco-editor';\nimport * as Monaco from 'monaco-editor/esm/vs/editor/editor.api';\nimport ReactResizeDetector from 'react-resize-detector';\n\nconst DEBUG_WITHOUT_DIAGNOSIS = true;\n\nfunction EditorPanel(props: {\n    code: string,\n    readOnly?: boolean,\n    onChange?: (code: string) => void\n}) {\n\n    const { code: templateCode, readOnly } = props;\n    const editor = useRef<Monaco.editor.IStandaloneCodeEditor | null>(null);\n    const [code, setCode] = useState(templateCode);\n\n    useEffect(() => {\n        setCode(templateCode);\n    }, [templateCode]);\n\n    function editorDidMount(monacoEditor: Monaco.editor.IStandaloneCodeEditor, monaco: typeof Monaco) {\n        console.log('editorDidMount', monacoEditor);\n        editor.current = monacoEditor;\n        monacoEditor.focus();\n    }\n\n    function setupDiagnostics() {\n        if (DEBUG_WITHOUT_DIAGNOSIS) return;\n        Monaco.languages.json.jsonDefaults.setDiagnosticsOptions({\n            allowComments: false,\n            enableSchemaRequest: true,\n            validate: true,\n            schemas: [{\n                uri: \"https://raw.githubusercontent.com/higlass/higlass/develop/app/schema.json\",\n                fileMatch: ['*']\n            }]\n        });\n        Monaco.languages.json.jsonDefaults.setModeConfiguration({\n            documentFormattingEdits: false,\n            documentRangeFormattingEdits: false,\n            completionItems: true,\n            hovers: true,\n            documentSymbols: true,\n            tokens: true,\n            colors: true,\n            foldingRanges: true,\n            diagnostics: true,\n        });\n    }\n\n    function onChangeHandle(code: string, e: any) {\n        setCode(code);\n        if (props.onChange) props.onChange(code);\n        // console.log('onChange', code, e);\n\n        setupDiagnostics();\n    }\n\n    function editorWillMount(monaco: typeof Monaco) {\n        setupDiagnostics();\n    }\n\n    return (\n        <>\n            <ReactResizeDetector\n                handleWidth\n                handleHeight\n                onResize={(width: number, height: number) => {\n                    editor?.current?.layout({ width, height });\n                }}\n            ></ReactResizeDetector>\n            <MonacoEditor\n                // Refer to https://github.com/react-monaco-editor/react-monaco-editor\n                language=\"json\"\n                value={code}\n                theme={\"test\"}\n                options={{\n                    autoClosingBrackets: \"never\",\n                    autoClosingQuotes: \"never\",\n                    cursorBlinking: \"smooth\",\n                    folding: true,\n                    lineNumbersMinChars: 4,\n                    minimap: { enabled: false },\n                    scrollBeyondLastLine: false,\n                    wordWrap: \"on\",\n                    lineNumbers: \"off\",\n                    renderLineHighlight: \"line\",\n                    renderIndentGuides: true,\n                    readOnly\n                }}\n                onChange={onChangeHandle}\n                editorDidMount={editorDidMount}\n                editorWillMount={editorWillMount}\n            />\n        </>\n    );\n}\nexport default EditorPanel;","import { GENE_ANNOTATION_PLOT, GENE_ANNOTATION_PLOT_SIMPLE } from \"../lib/test/gemini/gene-annotation-plots\";\nimport { CYTOGENETIC_BAND } from \"../lib/test/gemini/cytogenetic-band\";\nimport { LAYOUT_EXAMPLE_LINK, LAYOUT_EXAMPLE_COMBO } from \"../lib/test/gemini/layout-examples\";\nimport { GeminiSpec } from \"../lib/gemini.schema\";\nimport { LAYOUT_EXAMPLE_COMBO_HORIZONTAL } from \"../lib/test/gemini/layout-examples\";\nimport { LAYOUT_EXAMPLE_DOMINO } from \"../lib/test/gemini/layout-examples\";\n\ninterface Demo {\n    name: string,\n    spec: GeminiSpec,\n    glyphWidth: number,\n    glyphHeight: number\n}\n\nexport const demos: ReadonlyArray<Demo> = [\n    {\n        name: \"Gene Annotation Plot (Simple)\",\n        spec: GENE_ANNOTATION_PLOT_SIMPLE,\n        glyphWidth: 300,\n        glyphHeight: 300\n    },\n    {\n        name: \"Gene Annotation Plot\",\n        spec: GENE_ANNOTATION_PLOT,\n        glyphWidth: 600,\n        glyphHeight: 300\n    },\n    {\n        name: \"Cytogenetic Band\",\n        spec: CYTOGENETIC_BAND,\n        glyphWidth: 900,\n        glyphHeight: 300\n    },\n    {\n        name: \"Six Different Between-Links\",\n        spec: LAYOUT_EXAMPLE_LINK,\n        glyphWidth: 0,\n        glyphHeight: 0\n    },\n    {\n        name: \"Between-Links (Combo)\",\n        spec: LAYOUT_EXAMPLE_COMBO,\n        glyphWidth: 0,\n        glyphHeight: 0\n    },\n    {\n        name: \"Between-Links (Combo, Horizontal)\",\n        spec: LAYOUT_EXAMPLE_COMBO_HORIZONTAL,\n        glyphWidth: 0,\n        glyphHeight: 0\n    },\n    /*\n    // TODO: not ready\n    {\n        name: \"Between-Links (Domino)\",\n        spec: LAYOUT_EXAMPLE_DOMINO,\n        glyphWidth: 0,\n        glyphHeight: 0\n    },\n    */\n] as const;","import { GeminiSpec } from \"../../gemini.schema\";\n\nexport const GENE_ANNOTATION_PLOT_SIMPLE: GeminiSpec = {\n    tracks: [\n        {\n            data: \"https://raw.githubusercontent.com/sehilyi/gemini-datasets/master/data/Homo_sapiens.GRCh38.92.glyph.csv\",\n            mark: { server: \"gemini.v1\", type: \"glyph-gene-annotation-v2\" },\n            x: { field: \"start\", type: \"quantitative\" },\n            xe: { field: \"end\", type: \"quantitative\" },\n            y: { field: \"strand\", type: \"nominal\" },\n            text: { field: \"gene_name\", type: \"nominal\" },\n            geneOrExon: { field: \"feature\", type: \"nominal\" },\n            color: { value: \"#D1D28D\" },\n            opacity: { value: 0.7 },\n            stroke: { value: \"white\" }\n        }\n    ]\n};\n\nexport const GENE_ANNOTATION_PLOT: GeminiSpec = {\n    tracks: [\n        {\n            data: \"https://raw.githubusercontent.com/sehilyi/gemini-datasets/master/data/Homo_sapiens.GRCh38.92.glyph.csv\",\n            mark: { server: \"gemini.v1\", type: \"glyph-gene-annotation-v1\" },\n            x: { field: \"start\", type: \"quantitative\" },\n            xe: { field: \"end\", type: \"quantitative\" },\n            y: { field: \"strand\", type: \"nominal\" },\n            text: { field: \"gene_name\", type: \"nominal\" },\n            color: { field: \"strand\", type: \"nominal\" },\n            exonVersion: { field: \"exon_version\", type: \"nominal\" },\n            geneOrExon: { field: \"feature\", type: \"nominal\" },\n            exonId: { field: \"exon_id\", type: \"nominal\" },\n            opacity: { value: 0.9 }\n        }\n    ]\n};","import { GeminiSpec } from \"../../gemini.schema\";\n\nexport const CYTOGENETIC_BAND: GeminiSpec = {\n    tracks: [\n        {\n            data: \"https://raw.githubusercontent.com/sehilyi/gemini-datasets/master/data/chr1_cytogenetic_band.glyph.csv\",\n            mark: { server: \"gemini.v1\", type: \"cytogenetic-band-v1\" },\n            x: { field: \"Basepair_start\", type: \"quantitative\" },\n            xe: { field: \"Basepair_stop\", type: \"quantitative\" },\n            y: { field: \"Chr.\", type: \"nominal\" },\n            text: { field: \"Band\", type: \"nominal\" },\n            stain: { field: 'Stain', type: 'nominal' },\n            color: { field: \"Density\", type: \"nominal\", domain: ['', '25', '50', '75', '100'], range: ['white', '#D9D9D9', '#979797', '#636363', 'black'] }\n        }\n    ]\n};","import { GeminiSpec } from \"../../gemini.schema\";\n\nexport const LAYOUT_EXAMPLE_LINK: GeminiSpec = {\n    tracks: [\n        {\n            data: 'dummy-link', mark: 'link-between',\n            x: { field: 'from', type: \"nominal\" },\n            y: { field: 'to', type: \"nominal\" },\n            width: 50, height: 50\n        },\n        {\n            data: 'dummy-link', mark: 'link-between',\n            x1: { field: 'from', type: \"nominal\" },\n            y: { field: 'to', type: \"nominal\" },\n            width: 50, height: 50\n        },\n        {\n            data: 'dummy-link', mark: 'link-between',\n            x1: { field: 'from', type: \"nominal\" },\n            y1: { field: 'to', type: \"nominal\" },\n            width: 50, height: 50\n        },\n        {\n            data: 'dummy-link', mark: 'link-between',\n            x: { field: 'from', type: \"nominal\" },\n            y1: { field: 'to', type: \"nominal\" },\n            width: 50, height: 50\n        },\n        {\n            data: 'dummy-link', mark: 'link-between',\n            x: { field: 'from', type: \"nominal\" },\n            x1: { field: 'to', type: \"nominal\" },\n            width: 50, height: 50\n        },\n        {\n            data: 'dummy-link', mark: 'link-between',\n            y: { field: 'from', type: \"nominal\" },\n            y1: { field: 'to', type: \"nominal\" },\n            width: 50, height: 50\n        },\n    ]\n}\n\nexport const LAYOUT_EXAMPLE_COMBO: GeminiSpec = {\n    references: [\n        \"http://genocat.tools/tools/combo.html\",\n        \"http://genocat.tools/tools/gbrowse_syn.html\",\n        \"http://genocat.tools/tools/ggbio.html\",\n        \"http://genocat.tools/tools/give.html\",\n        \"http://genocat.tools/tools/variant_view.html\"\n    ],\n    tracks: [\n        {\n            data: 'dummy', mark: 'dummy',\n            width: 600, height: 50\n        },\n        {\n            data: 'dummy-link', mark: 'link-between',\n            x1: { field: 'from', type: \"nominal\" },\n            x: { field: 'to', type: \"nominal\" },\n            width: 600, height: 50\n        },\n        {\n            data: 'dummy', mark: 'dummy',\n            width: 600, height: 50\n        }\n    ]\n}\n\nexport const LAYOUT_EXAMPLE_COMBO_HORIZONTAL: GeminiSpec = {\n    layout: { type: 'linear', direction: 'horizontal', wrap: -1 },\n    tracks: [\n        {\n            data: 'dummy', mark: 'dummy',\n            width: 60, height: 500\n        },\n        {\n            data: 'dummy-link', mark: 'link-between',\n            y: { field: 'from', type: \"nominal\" },\n            y1: { field: 'to', type: \"nominal\" },\n            width: 60, height: 500\n        },\n        {\n            data: 'dummy', mark: 'dummy',\n            width: 60, height: 500\n        }\n    ]\n}\n\nexport const LAYOUT_EXAMPLE_DOMINO: GeminiSpec = {\n    layout: { type: 'linear', direction: 'horizontal', wrap: 3 },\n    tracks: [\n        {\n            data: 'dummy', mark: 'empty',\n            width: 50, height: 50\n        },\n        {\n            data: 'dummy', mark: 'dummy',\n            width: 500, height: 50\n        },\n        {\n            data: 'dummy', mark: 'empty',\n            width: 50, height: 50\n        },\n        {\n            data: 'dummy', mark: 'dummy',\n            width: 50, height: 500\n        },\n        {\n            data: 'dummy-link', mark: 'link-between',\n            y: { field: 'from', type: \"nominal\" },\n            y1: { field: 'to', type: \"nominal\" },\n            width: 500, height: 500\n        },\n        {\n            data: 'dummy', mark: 'dummy',\n            width: 50, height: 500\n        },\n        {\n            data: 'dummy', mark: 'empty',\n            width: 50, height: 50\n        },\n        {\n            data: 'dummy', mark: 'dummy',\n            width: 500, height: 50\n        },\n        {\n            data: 'dummy', mark: 'empty',\n            width: 50, height: 50\n        },\n    ]\n}","// Refer to the following url for dealing with defaults:\n// https://github.com/vega/vega-lite/blob/23fe2b9c6a82551f321ccab751370ca48ae002c9/src/channeldef.ts#L961\n\nimport { PREDEFINED_GLYPHS_TYPE as PREDEFINED_GLYPH_TYPE } from './test/gemini/glyph'\n\nexport interface GeminiSpec {\n    references?: string[]\n    description?: string\n    layout?: {\n        type: \"linear\" | \"circular\"\n        direction: \"vertical\" | \"horizontal\"\n        wrap: number // TODO: does not work now\n    }\n    tracks: (Track | GenericType<Channel>)[] // TODO: `Track` does not mean anything here because of `GenericType`\n    // ...\n}\n\nexport interface GenericType<T> {\n    [k: string]: T\n}\n\n/**\n * Tracks\n */\nexport interface Track {\n    // primitives\n    data: string | Datum[]\n    mark: Mark\n    // coordinates\n    x?: Channel\n    y?: Channel\n    xe?: Channel\n    ye?: Channel\n    // coordinates for link\n    x1?: Channel\n    y1?: Channel\n    x1e?: Channel\n    y1e?: Channel\n    // others\n    color?: Channel\n    opacity?: Channel\n    size?: Channel\n    text?: Channel\n    w?: Channel\n    h?: Channel\n    // styles\n    width?: number\n    height?: number\n}\n\n/**\n * Data\n */\nexport interface Datum {\n    [k: string]: number | string\n}\n\n/**\n * Channel\n */\nexport const ChannelTypes = {\n    // coordinates\n    x: 'x',\n    y: 'y',\n    xe: 'xe',\n    ye: 'ye',\n    // coordinates for link\n    x1: 'x1',\n    y1: 'y1',\n    x1e: 'x1e',\n    y1e: 'y1e',\n    // others\n    color: 'color',\n    opacity: 'opacity',\n    size: 'size',\n    text: 'text',\n    w: 'w'\n} as const;\n\nexport type ChannelType = keyof typeof ChannelTypes | string\n\nexport type Channel = ChannelDeep | ChannelValue\n\nexport interface ChannelDeep {\n    field: string\n    type: 'nominal' | 'quantitative'\n    aggregate?: Aggregate\n    domain?: string[]\n    range?: string[]\n}\n\nexport interface ChannelValue {\n    value: number | string\n}\n\nexport type Aggregate = 'max' | 'min' | 'mean'\n\n/**\n * Mark\n */\nexport type Mark = MarkType | MarkDeep\n\nexport type MarkType =\n    | 'bar'\n    | 'point'\n    | 'line'\n    | 'link-between'\n    | 'link-within' // uses either x and x1 or y and y1\n    | 'rect'\n    | 'text'\n    | 'rule'\n    | 'triangle-l'\n    | 'triangle-r'\n    | 'dummy'\n    | 'empty'\n\n/**\n * Glyph\n */\nexport type MarkDeep = MarkGlyphPredefined | MarkGlyph\n\nexport interface MarkGlyphPredefined {\n    type: PREDEFINED_GLYPH_TYPE\n    server: string // TODO: Support this.\n}\n\nexport interface MarkGlyph {\n    type: 'glyph'\n    name: string\n    referenceColumn?: string // reference column for selecting data tuples for each glyph\n    requiredChannels: ChannelType[] // channels that must be assigned\n    elements: GlyphElement[]\n}\n\nexport interface GlyphElement {\n    // primitives\n    description?: string\n    select?: { channel: ChannelType, oneOf: string[] }[]\n    mark: MarkType | MarkBind\n    // coordinates\n    x?: ChannelBind | ChannelValue | 'none'\n    y?: ChannelBind | ChannelValue | 'none'\n    xe?: ChannelBind | ChannelValue | 'none'\n    ye?: ChannelBind | ChannelValue | 'none'\n    // coordinates for link\n    x1?: ChannelBind | ChannelValue | 'none'\n    y1?: ChannelBind | ChannelValue | 'none'\n    x1e?: ChannelBind | ChannelValue | 'none'\n    y1e?: ChannelBind | ChannelValue | 'none'\n    // others\n    color?: ChannelBind | ChannelValue | 'none'\n    size?: ChannelBind | ChannelValue | 'none'\n    w?: ChannelBind | ChannelValue | 'none'\n    opacity?: ChannelBind | ChannelValue | 'none'\n    text?: ChannelBind | ChannelValue | 'none'\n    styles?: Style\n}\n\nexport interface Style {\n    dashed?: string\n    dy?: number\n    stroke?: string\n    strokeWidth?: number\n}\n\nexport interface MarkBind {\n    bind: string\n    domain: string[]\n    range: MarkType[]\n}\n\nexport interface ChannelBind {\n    bind: ChannelType\n    aggregate?: Aggregate\n}\n\nexport interface AnyGlyphChannels {\n    // Allow defining any kinds of chennels for binding data in Glyph\n    [key: string]: ChannelBind | ChannelValue\n}\n\n/**\n * Consistency\n */\ninterface Consistency {\n    /**\n     * `true` and `false` correspond to 'shared' and 'independent', respectively.\n     */\n    // List of `uniqueName` of `view` or `track` or indexes appear in the specification.\n    targets: string[] | number[]\n    // Default: The first element of `targets`.\n    reference?: string\n    color?: 'shared' | 'independent' | 'distinct' | true | false\n    x?: 'shared' | 'independent' | true | false\n    y?: 'shared' | 'independent' | true | false\n    zoomScale?: 'shared' | 'independent' | true | false\n    zoomCenter?: 'shared' | 'independent' | true | false\n}\n\n/**\n * Type Checks\n */\nexport function IsGlyphMark(mark: any): mark is MarkGlyph {\n    // TODO: MarkType | MarkDeep\n    return typeof mark === 'object' && mark.type === 'glyph';\n}\n\nexport function IsChannelValue(\n    channel:\n        | ChannelDeep\n        | ChannelValue\n        | ChannelBind\n        | undefined\n        | 'none'\n): channel is ChannelValue {\n    return channel !== null && typeof channel === 'object' && 'value' in channel;\n}\n\nexport function IsChannelBind(\n    channel:\n        | ChannelDeep\n        | ChannelValue\n        | ChannelBind\n        | undefined\n        | 'none'\n): channel is ChannelBind {\n    return channel !== null && typeof channel === 'object' && 'bind' in channel;\n}\n\nexport function IsChannelDeep(channel: ChannelDeep | ChannelValue | undefined): channel is ChannelDeep {\n    return typeof channel === 'object' && 'field' in channel;\n}","import { Track, Channel, MarkType, GenericType, IsGlyphMark, IsChannelValue, ChannelTypes, ChannelBind, MarkGlyph, IsChannelDeep, ChannelDeep, Datum, ChannelType, GlyphElement, IsChannelBind } from \"../gemini.schema\";\nimport { deepToLongElements } from \"../utils/spec-preprocess\";\nimport * as d3 from \"d3\";\nimport { BoundingBox } from \"../utils/bounding-box\";\n\nexport class TrackModel {\n    private track: Track | GenericType<Channel>;\n    private channelToField: { [k: string]: string };\n    private domains: { [channel: string]: (string | number)[] };\n    private scales: { [channel: string]: d3.ScaleLinear<any, any> | d3.ScaleOrdinal<any, any> | d3.ScaleSequential<any> };\n    private ranges: { [channel: string]: number[] | string[] };\n    constructor(track: Track | GenericType<Channel>) {\n        this.track = track;\n        this.domains = {};\n        this.channelToField = {};\n        this.scales = {};\n        this.ranges = {};\n\n        /**\n         * Validate\n         */\n        // TODO: Check if required channels are specified.\n        // ...\n\n        /**\n         * Default\n         */\n        if (IsGlyphMark(this.track.mark)) {\n            this.track.mark.elements = deepToLongElements(this.track.mark.elements);\n        }\n        // TODO: Add binds for not-specified channels.\n\n        /**\n         * Prepare Rendering\n         */\n        this.setDomains();\n    }\n    public getTrack() {\n        return this.track;\n    }\n\n    public getElements() {\n        if (IsGlyphMark(this.track.mark)) {\n            return this.track.mark.elements;\n        }\n        return [];\n    }\n\n    public getFieldByChannel(field: string) {\n        return this.channelToField[field];\n    }\n\n    private setDomains() {\n        const data = this.track.data as Datum[];\n\n        if (IsGlyphMark(this.track.mark)) {\n            const { requiredChannels: required } = this.track.mark;\n\n            // Add channel-to-domain mappings when `field` suggested.\n            required.forEach(c => {\n                const channel = (this.track as GenericType<Channel>)[c];\n                if (IsChannelDeep(channel)) {\n                    const { field } = channel;\n                    this.channelToField[c] = field;\n\n                    // Domains for x1 and y1 needs to be added to that of x and y, respectively.\n                    const targetChannel = c === 'xe' ? 'x' : c === 'ye' ? 'y' : c;\n\n                    if (!this.domains[targetChannel]) {\n                        this.domains[targetChannel] = [];\n                    }\n                    this.domains[targetChannel] = [\n                        ...this.domains[targetChannel],\n                        ...(channel.domain ? channel.domain : data.map(d => d[field]))\n                    ]\n                }\n            });\n            Object.keys(this.domains).forEach(c => {\n                const channel = (this.track as GenericType<Channel>)[c];\n                if (IsChannelDeep(channel)) {\n                    const { type } = channel;\n                    this.domains[c] = type === \"nominal\"\n                        ? d3.set(this.domains[c]).values()\n                        : d3.extent(this.domains[c].map(d => +d)) as [number, number]\n                }\n            });\n        }\n    }\n\n    private setRanges(bb: BoundingBox) {\n        Object.keys(this.domains).forEach(c => {\n            const channel = (this.track as GenericType<Channel>)[c];\n            if (IsChannelDeep(channel)) {\n                if (c === 'x') {\n                    this.ranges['x'] = [bb.x, bb.x + bb.width];\n                } else if (c === 'y') {\n                    this.ranges['y'] = [bb.y, bb.y + bb.height];\n                } else if (c === 'color') {\n                    this.ranges['color'] = channel.range ? channel.range : d3.schemeTableau10 as string[]\n                } else {\n                    // TODO: Support specifying `range` and `domain`.\n                    // ...\n                }\n            }\n        });\n    }\n\n    public setScales(boundingBox: BoundingBox) {\n        this.setRanges(boundingBox);\n        Object.keys(this.domains).forEach(c => {\n            const channel = (this.track as GenericType<Channel>)[c];\n            if (IsChannelDeep(channel)) {\n                const { type } = channel;\n                if (this.ranges[c]) {\n                    // TODO: simplify\n                    this.scales[c] = c === 'color' && type === 'nominal'\n                        ? d3.scaleOrdinal()\n                            .domain(this.domains[c] as string[])\n                            .range(this.ranges[c])\n                        : c === 'color' && type === 'quantitative'\n                            ? d3.scaleSequential(d3.interpolateBrBG)\n                                .domain(this.domains[c] as [number, number])\n                            : type === \"nominal\"\n                                ? d3.scaleOrdinal()\n                                    .domain(this.domains[c] as string[])\n                                    .range(this.ranges[c])\n                                : d3.scaleLinear()\n                                    .domain(this.domains[c] as [number, number])\n                                    .range(this.ranges[c] as [number, number]);\n                }\n            }\n        });\n    }\n\n    public getEncoding(\n        element: GlyphElement /* Remove this */,\n        c: keyof typeof ChannelTypes,\n        datum: Datum,\n        mark?: MarkType\n    ): any {\n        // TODO: Move out\n        const DEFAULT_ENCODING: { [k: string]: number | string } = {\n            'opacity': 1,\n            'size': 10,\n            'color': 'black',\n            'text': ''\n        }\n        ////\n\n        const scaleChannel = c === 'xe' ? 'x' : c === 'ye' ? 'y' : c;\n\n        if (IsChannelValue(element[c])) {\n            switch (c) {\n                case 'size':\n                case 'opacity':\n                case 'color':\n                case 'text':\n                    return (element[c] as any).value;\n            }\n        }\n        else if (IsChannelValue(this.track[c])) {\n            switch (c) {\n                case 'size':\n                case 'opacity':\n                case 'color':\n                case 'text':\n                    return (this.track[c] as any).value;\n            }\n        }\n        else if (this.scales[scaleChannel]) {\n            const field = IsChannelBind(element[c])\n                ? this.getFieldByChannel((element[c] as ChannelBind).bind)\n                : this.getFieldByChannel(c);\n            return this.scales[scaleChannel](datum[field] as any);\n        } else if (c === 'text') {\n            const field = IsChannelBind(element.text)\n                ? this.getFieldByChannel(element.text.bind)\n                : IsChannelDeep(this.track.text)\n                    ? this.track.text.field\n                    : undefined;\n            if (field) {\n                return datum[field];\n            }\n        }\n        else if (c === 'w') {\n            if (this.scales['x'] && IsChannelDeep(this.track.x) && IsChannelDeep(this.track.xe) && element.x !== 'none' && element.xe !== 'none') {\n                const altSize = Math.abs((datum[this.getFieldByChannel('xe')] as number) - (datum[this.getFieldByChannel('x')] as number));\n                return this.scales['x'](altSize);\n            } else {\n                return this.getEncoding(element, 'size', datum);\n            }\n        }\n        else {\n            // If not specified, use default value.\n            return DEFAULT_ENCODING[c];\n        }\n    }\n\n    public getScale(c: ChannelType | string) {\n        return this.scales[c];\n    }\n}","import { GlyphElement } from \"../gemini.schema\";\n\n/**\n * Domains and ranges in conditional marks are moved into `select` option for the compiling simplicity.\n * @param elements \n */\nexport function deepToLongElements(elements: GlyphElement[]) {\n    const longElements: GlyphElement[] = [];\n    elements.forEach(element => {\n        if (typeof element.mark === \"object\") {\n            const { bind } = element.mark;\n            for (let i = 0; i < element.mark.domain.length; i++) {\n                const domain = element.mark.domain[i];\n                const range = element.mark.range[i];\n                const select = element.select ? element.select : [];\n                longElements.push({\n                    ...element,\n                    mark: range,\n                    select: [\n                        ...select,\n                        { channel: bind, oneOf: [domain] }\n                    ]\n                });\n            }\n        } else {\n            longElements.push(element);\n        }\n    });\n    return longElements;\n}","import * as d3 from 'd3'\n\nexport function renderBackground(\n    svg: SVGGElement,\n    w: number,\n    h: number,\n    px: number,\n    py: number,\n    isGuideline: boolean = true\n) {\n    d3.select(svg)\n        .attr(\"width\", w)\n        .attr(\"height\", h);\n    const g = d3.select(svg).append(\"g\");\n    g.append(\"rect\")\n        .attr(\"width\", w)\n        .attr(\"height\", h)\n        .attr(\"stroke\", \"lightgray\")\n        .attr(\"fill\", \"white\");\n    if (!isGuideline) return;\n    g.append(\"line\")\n        .attr(\"x1\", 0)\n        .attr(\"x2\", w)\n        .attr(\"y1\", py)\n        .attr(\"y2\", py)\n        .attr(\"class\", \"preview-guideline\");\n    g.append(\"line\")\n        .attr(\"x1\", 0)\n        .attr(\"x2\", w)\n        .attr(\"y1\", h - py)\n        .attr(\"y2\", h - py)\n        .attr(\"class\", \"preview-guideline\");\n    g.append(\"line\")\n        .attr(\"x1\", px)\n        .attr(\"x2\", px)\n        .attr(\"y1\", 0)\n        .attr(\"y2\", h)\n        .attr(\"class\", \"preview-guideline\");\n    g.append(\"line\")\n        .attr(\"x1\", w - px)\n        .attr(\"x2\", w - px)\n        .attr(\"y1\", 0)\n        .attr(\"y2\", h)\n        .attr(\"class\", \"preview-guideline\");\n    g.append(\"line\")\n        .attr(\"x1\", 0)\n        .attr(\"x2\", w)\n        .attr(\"y1\", h / 2)\n        .attr(\"y2\", h / 2)\n        .attr(\"class\", \"preview-guideline\");\n    g.append(\"line\")\n        .attr(\"x1\", w / 2)\n        .attr(\"x2\", w / 2)\n        .attr(\"y1\", 0)\n        .attr(\"y2\", h)\n        .attr(\"class\", \"preview-guideline\");\n}","import { Track, GenericType, Channel } from \"../gemini.schema\";\nimport * as d3 from \"d3\";\nimport { renderGlyph } from \"./glyph\";\nimport { renderBackground } from \"./guidelines\";\n\nexport function renderGlyphPreview(\n    svg: SVGSVGElement,\n    track: Track | GenericType<Channel>,\n    width: number,\n    height: number\n) {\n    if (!svg || !track) return;\n    d3.select(svg).selectAll(\"*\").remove();\n\n    // Styles\n    const WIDTH = width, HEIGHT = height, PADDING_X = 60, PADDING_Y = 100;\n\n    // BG and Guidelines\n    renderBackground(svg, WIDTH, HEIGHT, PADDING_X, PADDING_Y);\n\n    const innerG = d3.select(svg).append(\"g\")\n        .attr(\"width\", WIDTH - PADDING_X * 2)\n        .attr(\"height\", HEIGHT - PADDING_Y * 2)\n        .attr(\"transform\", `translate(${PADDING_X},${PADDING_Y})`);\n\n    // TODO: Select a subset of data tuples for a single glyph.\n    // ...\n\n    // TODO: Should data be aggregated when specified? (e.g., x: {..., aggregate: \"mean\"})\n    // ...\n\n    renderGlyph(\n        innerG,\n        track,\n        { x: 0, width: WIDTH - PADDING_X * 2, y: 0, height: HEIGHT - PADDING_Y * 2 }\n    );\n}","import * as d3 from \"d3\";\nimport { Track, Datum, GenericType, Channel, IsGlyphMark } from \"../gemini.schema\";\nimport { transformData, FilterSpec } from \"../utils/data-process\";\nimport { TrackModel } from \"../models/track\";\nimport { BoundingBox } from \"../utils/bounding-box\";\n\nexport function renderGlyph(\n    g: d3.Selection<SVGGElement, any, any, any>,\n    track: Track | GenericType<Channel>,\n    bb: BoundingBox\n) {\n    const tm = new TrackModel(track);\n    tm.setScales({\n        ...bb,\n        // TODO: Cheating here!\n        y: bb.y + bb.height / 2.0\n    });\n\n    // checks\n    const data = track.data as Datum[];\n    if (!data) {\n        console.warn(\"No array of a JSON object suggested.\");\n        return;\n    }\n\n    if (!IsGlyphMark(track.mark)) {\n        console.warn(\"Glyph is not defined.\");\n        return;\n    }\n    /////////////\n\n    // TODO: Add title using `name`\n    // ...\n\n    // Render each element\n    tm.getElements().forEach(element => {\n        const { select, mark: markE, } = element;\n\n        // Select\n        const filters: FilterSpec[] = [];\n        select?.forEach(d => {\n            const { channel, oneOf } = d;\n            if (tm.getFieldByChannel(channel)) {\n                filters.push({ field: tm.getFieldByChannel(channel), oneOf });\n            }\n        });\n\n        // Render glyph\n        const transformed_data = transformData(data, filters);\n        // TODO: Aggregation\n        if (markE === \"line\") {\n            g.selectAll()\n                .data(transformed_data)\n                .enter()\n                .append('line')\n                .attr('x1', d => tm.getEncoding(element, 'x', d))\n                .attr('x2', d => tm.getEncoding(element, 'xe', d))\n                .attr('y1', d => tm.getEncoding(element, 'y', d))\n                .attr('y2', d => tm.getEncoding(element, 'y', d))\n                .attr('stroke', d => tm.getEncoding(element, 'color', d))\n                .attr('stroke-width', d => tm.getEncoding(element, 'size', d))\n                .attr('opacity', d => tm.getEncoding(element, 'opacity', d))\n                .style('stroke-dasharray', (element.styles?.dashed ?? ''))\n        } else if (markE === 'point') {\n            g.selectAll('point')\n                .data(transformed_data)\n                .enter()\n                .append('circle')\n                .attr('fill', d => tm.getEncoding(element, 'color', d))\n                .attr('cx', d => tm.getEncoding(element, 'x', d))\n                .attr('cy', d => tm.getEncoding(element, 'x', d))\n                .attr('r', 15)\n                .attr('opacity', d => tm.getEncoding(element, 'opacity', d))\n        } else if (markE === \"rect\") {\n            g.selectAll()\n                .data(transformed_data)\n                .enter()\n                .append('rect')\n                .attr('x', d => tm.getEncoding(element, 'x', d))\n                .attr('y', d => tm.getEncoding(element, 'y', d) - tm.getEncoding(element, 'size', d) / 2.0)\n                .attr('width', d => tm.getEncoding(element, 'xe', d) - tm.getEncoding(element, 'x', d))\n                .attr('height', d => tm.getEncoding(element, 'size', d))\n                .attr('fill', d => tm.getEncoding(element, 'color', d))\n                .attr('opacity', d => tm.getEncoding(element, 'opacity', d))\n                .attr('stroke', element.styles?.stroke ?? '')\n                .attr('stroke-width', element.styles?.strokeWidth ?? '')\n        } else if (markE === 'text') {\n            g.selectAll()\n                .data(transformed_data)\n                .enter()\n                .append('text')\n                .text(d => tm.getEncoding(element, 'text', d))\n                .attr('x', d => (tm.getEncoding(element, 'x', d) + tm.getEncoding(element, 'xe', d)) / 2.0)\n                .attr('y', d => tm.getEncoding(element, 'y', d) + element.styles?.dy)\n                .attr('fill', d => tm.getEncoding(element, 'color', d))\n                .attr('font-size', d => tm.getEncoding(element, 'size', d))\n                .attr('alignment-baseline', \"top\")\n                .attr('text-anchor', \"middle\")\n                .attr('opacity', d => tm.getEncoding(element, 'opacity', d))\n        } else if (markE === 'rule') {\n            g.selectAll('rule')\n                .data(transformed_data)\n                .enter()\n                .append('line')\n                .attr('x1', d => tm.getEncoding(element, 'x', d))\n                .attr('x2', d => tm.getEncoding(element, 'x', d))\n                .attr('y1', d => tm.getEncoding(element, 'x', d) - tm.getEncoding(element, 'size', d) / 2.0)\n                .attr('y2', d => tm.getEncoding(element, 'x', d) - tm.getEncoding(element, 'size', d) / 2.0)\n                .attr('stroke', d => tm.getEncoding(element, 'color', d))\n                .attr('stroke-width', 3)\n                .attr('opacity', d => tm.getEncoding(element, 'opacity', d))\n        } else if (markE === 'triangle-r') {\n            g.selectAll('trangle-r')\n                .data(transformed_data)\n                .enter()\n                .append('path')\n                .attr('d', d => {\n                    const h = tm.getEncoding(element, 'size', d);\n                    const w = tm.getEncoding(element, 'w', d);\n                    const x = tm.getEncoding(element, 'x', d);\n                    const y = tm.getEncoding(element, 'y', d);\n                    return `M${x + w} ${y}`\n                        + `L${x} ${y + h / 2.0}`\n                        + `L${x} ${y - h / 2.0} Z`;\n                })\n                .attr('fill', d => tm.getEncoding(element, 'color', d))\n                .attr('opacity', d => tm.getEncoding(element, 'opacity', d))\n                .attr('stroke', element.styles?.stroke ?? '')\n                .attr('stroke-width', element.styles?.strokeWidth ?? '')\n        } else if (markE === 'triangle-l') {\n            g.selectAll('trangle-l')\n                .data(transformed_data)\n                .enter()\n                .append('path')\n                .attr('d', d => {\n                    const h = tm.getEncoding(element, 'size', d);\n                    const w = tm.getEncoding(element, 'w', d);\n                    const x = tm.getEncoding(element, 'x', d);\n                    const y = tm.getEncoding(element, 'y', d);\n                    return `M${x} ${y}`\n                        + `L${x + w} ${y + h / 2.0}`\n                        + `L${x + w} ${y - h / 2.0} Z`;\n                })\n                .attr('fill', d => tm.getEncoding(element, 'color', d))\n                .attr('opacity', d => tm.getEncoding(element, 'opacity', d))\n                .attr('stroke', element.styles?.stroke ?? '')\n                .attr('stroke-width', element.styles?.strokeWidth ?? '')\n        }\n    });\n}","import { Datum } from \"../gemini.schema\";\n\nexport interface FilterSpec {\n    field: string;\n    oneOf: string[];\n}\n\nexport function transformData(data: Datum[], filters: FilterSpec[]) {\n    let filteredData = data.slice();\n    filters.forEach(f => {\n        filteredData = filteredData.filter(d => f.oneOf.indexOf(d[f.field] as string) !== -1);\n    });\n    return filteredData;\n}","import { Mark } from '../../../gemini.schema';\n\nimport { GLYPH_GENE_ANNOTATAION } from './glyph-gene-annotation-plot';\nimport { GLYPH_LOGO } from './glyph-logo';\nimport { GLYPH_GENE_ANNOTATAION_V2 } from './glyph-gene-annotation-plot-v2';\nimport { GLYPH_CYTOGENETIC_BAND } from './glyph-cytogenetic-band';\n\nexport const PREDEFINED_GLYPHS: {\n    name: PREDEFINED_GLYPHS_TYPE,\n    mark: Mark\n}[] = [\n        {\n            name: 'glyph-gene-annotation-v1',\n            mark: GLYPH_GENE_ANNOTATAION\n        },\n        {\n            name: 'glyph-gene-annotation-v2',\n            mark: GLYPH_GENE_ANNOTATAION_V2\n        },\n        {\n            name: 'cytogenetic-band-v1',\n            mark: GLYPH_CYTOGENETIC_BAND\n        },\n        {\n            name: 'glyph-logo-plot-v1',\n            mark: GLYPH_LOGO\n        }\n    ];\n\nexport type PREDEFINED_GLYPHS_TYPE =\n    | 'glyph-gene-annotation-v1'\n    | 'glyph-gene-annotation-v2'\n    | 'cytogenetic-band-v1'\n    | 'glyph-logo-plot-v1'\n\nexport const PREDEFINED_GLYPHS_TYPES: PREDEFINED_GLYPHS_TYPE[] = [\n    'glyph-gene-annotation-v1',\n    'glyph-gene-annotation-v2',\n    'cytogenetic-band-v1',\n    'glyph-logo-plot-v1'\n];","import { MarkGlyph } from '../../../gemini.schema';\n\nexport const GLYPH_GENE_ANNOTATAION: MarkGlyph = {\n    type: 'glyph',\n    name: 'gene-annotation',\n    requiredChannels: [\n        // TODO: What about optional channels?\n        'x', 'xe',\n        'y', 'color', // + or - strand?\n        'geneOrExon', // genes or exons?\n        'exonId',\n        'exonVersion' // filtering by\n    ],\n    elements: [\n        {\n            // Should render once\n            description: 'horizontal line',\n            select: [\n                { channel: 'geneOrExon', oneOf: ['gene'] },\n            ],\n            mark: 'line',\n            color: { value: 'black' },\n            size: { value: 3 }\n        },\n        {\n            description: 'exon',\n            select: [\n                { channel: 'geneOrExon', oneOf: ['exon'] },\n                { channel: 'exonVersion', oneOf: ['2'] }\n            ],\n            mark: 'rect',\n            size: { value: 25 }\n        },\n        {\n            description: 'gene left',\n            select: [\n                { channel: 'geneOrExon', oneOf: ['gene'] },\n            ],\n            mark: {\n                bind: 'y',\n                domain: ['-', '+'],\n                range: ['triangle-l', 'rule']\n            },\n            size: { value: 25 },\n            xe: 'none'\n        },\n        {\n            description: 'gene right',\n            select: [\n                { channel: 'geneOrExon', oneOf: ['gene'] },\n            ],\n            mark: {\n                bind: 'y',\n                domain: ['-', '+'],\n                range: ['rule', 'triangle-r']\n            },\n            size: { value: 25 },\n            x: { bind: 'xe' },\n            xe: 'none'\n        },\n        {\n            mark: 'text',\n            select: [\n                { channel: 'geneOrExon', 'oneOf': ['gene'] }\n            ],\n            opacity: { value: 1 },\n            size: { value: 18 },\n            styles: {\n                dy: -20\n            }\n        },\n        {\n            mark: 'text',\n            select: [\n                { channel: 'geneOrExon', oneOf: ['exon'] },\n                { channel: 'exonVersion', oneOf: ['2'] }\n            ],\n            text: { bind: 'exonId' },\n            opacity: { value: 1 },\n            size: { value: 6 },\n            styles: {\n                dy: 28\n            }\n        }\n    ]\n}","import { MarkGlyph } from \"../../../gemini.schema\";\n\nexport const GLYPH_GENE_ANNOTATAION_V2: MarkGlyph = {\n    \"type\": \"glyph\",\n    \"name\": \"gene-annotation\",\n    \"requiredChannels\": [\n        // TODO: What about optional channels?\n        \"x\", \"xe\",\n        \"y\", 'color', // + or - strand?\n        \"geneOrExon\" // genes or exons?\n    ],\n    \"elements\": [\n        {\n            // Should render once\n            \"description\": \"gene\",\n            \"select\": [\n                { \"channel\": \"geneOrExon\", \"oneOf\": [\"gene\"] },\n            ],\n            \"mark\": \"rect\",\n            \"size\": { \"value\": 25 }\n        },\n        {\n            \"description\": \"gene head\",\n            \"select\": [\n                { \"channel\": \"geneOrExon\", \"oneOf\": [\"gene\"] },\n                { \"channel\": \"y\", \"oneOf\": [\"-\"] }\n            ],\n            \"mark\": \"triangle-l\",\n            \"size\": { \"value\": 25 },\n            \"xe\": 'none'\n        },\n        {\n            \"description\": \"gene right\",\n            \"select\": [\n                { \"channel\": \"geneOrExon\", \"oneOf\": [\"gene\"] },\n                { \"channel\": \"y\", \"oneOf\": [\"+\"] },\n            ],\n            \"mark\": \"triangle-r\",\n            \"size\": { \"value\": 25 },\n            \"x\": { \"bind\": \"xe\" },\n            \"xe\": 'none'\n        },\n        {\n            \"description\": \"horizontal line\",\n            \"select\": [\n                { \"channel\": \"geneOrExon\", \"oneOf\": [\"gene\"] },\n            ],\n            \"mark\": \"line\",\n            \"color\": { \"value\": \"gray\" },\n            \"size\": { \"value\": 2 },\n            'styles': {\n                dashed: \"3, 3\"\n            }\n        },\n        {\n            \"mark\": \"text\",\n            \"select\": [\n                { \"channel\": \"geneOrExon\", 'oneOf': [\"gene\"] }\n            ],\n            \"color\": { \"value\": \"black\" },\n            \"opacity\": { \"value\": 1 },\n            size: { value: 18 },\n            styles: {\n                dy: -20\n            }\n        }\n    ]\n}","import { MarkGlyph } from \"../../../gemini.schema\";\n\nexport const GLYPH_CYTOGENETIC_BAND: MarkGlyph = {\n    \"type\": \"glyph\",\n    \"name\": \"cytogenetic-band\",\n    \"requiredChannels\": [\n        // TODO: What about optional channels?\n        \"x\", \"xe\", // start, end\n        \"y\", // chr\n        'color', // strain\n        'text', // band\n        'stain' // gneg, gpos, gvar, or acen\n    ],\n    \"elements\": [\n        {\n            \"description\": \"symbols\",\n            \"select\": [{ channel: 'stain', oneOf: ['gneg', 'gpos', 'gvar'] }],\n            \"mark\": \"rect\",\n            \"size\": { \"value\": 25 },\n            styles: {\n                stroke: 'black',\n                strokeWidth: 1\n            }\n        },\n        {\n            \"description\": \"acen\",\n            \"select\": [{ channel: 'text', oneOf: ['11', '11.1'] }],\n            \"mark\": { bind: 'text', domain: ['11', '11.1'], range: ['triangle-l', 'triangle-r'] },\n            'color': { value: '#B40101' },\n            \"size\": { \"value\": 25 },\n            styles: {\n                stroke: 'black',\n                strokeWidth: 1\n            }\n        },\n        {\n            mark: 'text',\n            select: [{ channel: 'color', oneOf: ['100', '75', '50'] }],\n            color: { value: 'black' },\n            size: { value: 10 },\n            styles: {\n                dy: -20\n            }\n        }\n    ]\n}","import { Mark } from \"../../../gemini.schema\";\n\nexport const GLYPH_LOGO: Mark = {\n    \"type\": \"glyph\",\n    \"name\": \"logo\",\n    \"requiredChannels\": [\n        \"x\", \"xe\", \"y\"\n    ],\n    \"elements\": [\n        {\n            \"mark\": \"bar\"\n        },\n        {\n            \"mark\": \"text\",\n            \"color\": { \"value\": \"black\" }\n        }\n    ]\n}","import Ajv from 'ajv';\nimport uuid from \"uuid\";\nimport { GeminiSpec, Mark, MarkGlyphPredefined } from '../gemini.schema';\nimport { PREDEFINED_GLYPHS_TYPES, PREDEFINED_GLYPHS } from \"../test/gemini/glyph\";\n\nexport function replaceGlyphs(spec: GeminiSpec): GeminiSpec {\n    for (let i = 0; i < spec.tracks.length; i++) {\n        const track = spec.tracks[i];\n        const predefinedGlyph = (track.mark as MarkGlyphPredefined)?.type;\n        if (PREDEFINED_GLYPHS_TYPES.includes(predefinedGlyph)) {\n            track.mark = PREDEFINED_GLYPHS.find(d => d.name === predefinedGlyph)?.mark as Mark;\n        }\n    }\n    return spec;\n}\n\nexport function generateReadableTrackUid(pre: string | undefined, n: number) {\n    // TODO: Add track type\n\n    // TODO: This is to properly update higlass upon editor changes. Ultimately, remove this.\n    // (Refer to https://github.com/sehilyi/gemini/issues/7)\n    const id = uuid.v1();\n    if (pre) return `${pre}-track-${n}-(${id})`;\n    else return `track-${n}-${id}`;\n}\n\nexport function parseServerAndTilesetUidFromUrl(url: string) {\n    if (!url.includes(\"tileset_info/?d=\") || (\n        !url.includes(\"https:\") && !url.includes(\"http:\")\n    )) {\n        // TODO: Add RE to validate the format.\n        console.warn(\"Data url format is incorrect.\");\n        return { server: undefined, tilesetUid: undefined };\n    }\n\n    const pre = url.includes(\"https:\") ? \"https:\" : \"http:\";\n\n    const server = url.split(\"tileset_info/?d=\")[0].split(pre)[1];\n    const tilesetUid = url.split(\"tileset_info/?d=\")[1]\n    return { server, tilesetUid };\n}\n\nexport function validateHG(hg: any): boolean {\n\n    const validate = new Ajv({ extendRefs: true }).compile({ /*  */ });\n    const valid = validate(hg);\n\n    if (validate.errors) {\n        console.warn(JSON.stringify(validate.errors, null, 2));\n    }\n\n    // TODO: check types such as default values and locationLocks\n\n    return valid as boolean;\n}","export const DUMMY_LINK_DATA = [\n    { 'from': 0, 'to': 46 },\n    { 'from': 1, 'to': 88 },\n    { 'from': 2, 'to': 53 },\n    { 'from': 3, 'to': 81 },\n    { 'from': 4, 'to': 50 },\n    { 'from': 5, 'to': 34 },\n    { 'from': 6, 'to': 41 },\n    { 'from': 7, 'to': 72 },\n    { 'from': 8, 'to': 49 },\n    { 'from': 9, 'to': 92 },\n    { 'from': 10, 'to': 96 },\n    { 'from': 11, 'to': 44 },\n    { 'from': 12, 'to': 29 },\n    { 'from': 13, 'to': 70 },\n    { 'from': 14, 'to': 54 },\n    { 'from': 15, 'to': 90 },\n    { 'from': 16, 'to': 28 },\n    { 'from': 17, 'to': 17 },\n    { 'from': 18, 'to': 87 },\n    { 'from': 19, 'to': 59 },\n    { 'from': 20, 'to': 33 },\n    { 'from': 21, 'to': 16 },\n    { 'from': 22, 'to': 1 },\n    { 'from': 23, 'to': 57 },\n    { 'from': 24, 'to': 3 },\n    { 'from': 25, 'to': 30 },\n    { 'from': 26, 'to': 27 },\n    { 'from': 27, 'to': 75 },\n    { 'from': 28, 'to': 85 },\n    { 'from': 29, 'to': 61 },\n    { 'from': 30, 'to': 97 },\n    { 'from': 31, 'to': 8 },\n    { 'from': 32, 'to': 98 },\n    { 'from': 33, 'to': 71 },\n    { 'from': 34, 'to': 38 },\n    { 'from': 35, 'to': 14 },\n    { 'from': 36, 'to': 45 },\n    { 'from': 37, 'to': 63 },\n    { 'from': 38, 'to': 62 },\n    { 'from': 39, 'to': 42 },\n    { 'from': 40, 'to': 39 },\n    { 'from': 41, 'to': 79 },\n    { 'from': 42, 'to': 19 },\n    { 'from': 43, 'to': 2 },\n    { 'from': 44, 'to': 12 },\n    { 'from': 45, 'to': 11 },\n    { 'from': 46, 'to': 52 },\n    { 'from': 47, 'to': 76 },\n    { 'from': 48, 'to': 69 },\n    { 'from': 49, 'to': 65 },\n    { 'from': 50, 'to': 68 },\n    { 'from': 51, 'to': 15 },\n    { 'from': 52, 'to': 77 },\n    { 'from': 53, 'to': 37 },\n    { 'from': 54, 'to': 80 },\n    { 'from': 55, 'to': 7 },\n    { 'from': 56, 'to': 0 },\n    { 'from': 57, 'to': 66 },\n    { 'from': 58, 'to': 82 },\n    { 'from': 59, 'to': 95 },\n    { 'from': 60, 'to': 24 },\n    { 'from': 61, 'to': 51 },\n    { 'from': 62, 'to': 78 },\n    { 'from': 63, 'to': 83 },\n    { 'from': 64, 'to': 6 },\n    { 'from': 65, 'to': 48 },\n    { 'from': 66, 'to': 23 },\n    { 'from': 67, 'to': 20 },\n    { 'from': 68, 'to': 67 },\n    { 'from': 69, 'to': 5 },\n    { 'from': 70, 'to': 86 },\n    { 'from': 71, 'to': 10 },\n    { 'from': 72, 'to': 91 },\n    { 'from': 73, 'to': 40 },\n    { 'from': 74, 'to': 99 },\n    { 'from': 75, 'to': 13 },\n    { 'from': 76, 'to': 31 },\n    { 'from': 77, 'to': 22 },\n    { 'from': 78, 'to': 55 },\n    { 'from': 79, 'to': 18 },\n    { 'from': 80, 'to': 58 },\n    { 'from': 81, 'to': 43 },\n    { 'from': 82, 'to': 93 },\n    { 'from': 83, 'to': 9 },\n    { 'from': 84, 'to': 36 },\n    { 'from': 85, 'to': 26 },\n    { 'from': 86, 'to': 47 },\n    { 'from': 87, 'to': 89 },\n    { 'from': 88, 'to': 73 },\n    { 'from': 89, 'to': 64 },\n    { 'from': 90, 'to': 56 },\n    { 'from': 91, 'to': 94 },\n    { 'from': 92, 'to': 84 },\n    { 'from': 93, 'to': 21 },\n    { 'from': 94, 'to': 32 },\n    { 'from': 95, 'to': 74 },\n    { 'from': 96, 'to': 25 },\n    { 'from': 97, 'to': 60 },\n    { 'from': 98, 'to': 4 },\n    { 'from': 99, 'to': 35 }\n]\n","export const DUMMY_BAND_DATA = [\n    { from: 0, from1: 9, to: 30, to1: 39 },\n    { from: 10, from1: 19, to: 50, to1: 59 },\n    { from: 20, from1: 29, to: 90, to1: 99 },\n    { from: 30, from1: 39, to: 60, to1: 69 },\n    { from: 40, from1: 49, to: 40, to1: 49 },\n    { from: 50, from1: 59, to: 80, to1: 89 },\n    { from: 60, from1: 69, to: 0, to1: 9 },\n    { from: 70, from1: 79, to: 20, to1: 29 },\n    { from: 80, from1: 89, to: 10, to1: 19 },\n    { from: 90, from1: 99, to: 70, to1: 79 }\n]","import * as d3 from 'd3'\nimport { GeminiSpec, Track, GenericType, Channel, Datum, IsChannelDeep } from '../gemini.schema';\nimport { BoundingBox } from '../utils/bounding-box';\nimport { DUMMY_LINK_DATA } from '../test/data/link-data';\nimport { DUMMY_BAND_DATA } from '../test/data/band-data';\nimport { renderLink } from './link';\nimport { VIEW_PADDING } from './defaults';\n\nexport function renderLayout(\n    g: d3.Selection<SVGGElement, any, any, any>,\n    gm: GeminiSpec\n) {\n    g.selectAll('*').remove();\n\n    // Generate layout data\n    const tracksWithBB: { bb: BoundingBox, track: Track | GenericType<Channel> }[] = [];\n    let cumY = 0, cumX = 0;\n    gm.tracks.forEach(track => {\n        // TODO: for demo\n        if (track.data === \"dummy-link\") track.data = DUMMY_LINK_DATA;\n        else if (track.data === \"dummy-band\") track.data = DUMMY_BAND_DATA;\n        ///\n        if (gm.layout?.direction !== \"horizontal\") {\n            tracksWithBB.push({\n                bb: {\n                    x: 0, width: track.width as number,\n                    y: cumY, height: track.height as number\n                },\n                track\n            });\n            cumY += track.height as number + VIEW_PADDING;\n        }\n        else {\n            tracksWithBB.push({\n                bb: {\n                    x: cumX, width: track.width as number,\n                    y: 0, height: track.height as number\n                },\n                track\n            });\n            cumX += track.width as number + VIEW_PADDING;\n        }\n    });\n\n    g.selectAll('rect')\n        .data(tracksWithBB)\n        .enter()\n        .filter(d => d.track.mark !== 'link-between' && d.track.mark !== 'empty')\n        .append('rect')\n        .attr('x', d => d.bb.x)\n        .attr('width', d => d.bb.width)\n        .attr('y', d => d.bb.y)\n        .attr('height', d => d.bb.height)\n        .attr('fill', '#F6F6F6')\n        .attr('stroke', 'lightgray')\n        .attr('stroke-width', 1)\n\n    // Render links and bands\n    renderLink(g, tracksWithBB);\n}","export const DEFAULT_VISUAL_PROPERTIES = {\n    opacity: 1\n}\n\nexport const VIEW_PADDING = 0;","import { BoundingBox } from \"../utils/bounding-box\";\nimport { Track, GenericType, Channel, IsChannelDeep, Datum } from \"../gemini.schema\";\nimport * as d3 from 'd3'\n\nexport function renderLink(\n    g: d3.Selection<SVGGElement, any, any, any>,\n    tracksWithBB: { bb: BoundingBox, track: Track | GenericType<Channel> }[]\n) {\n    tracksWithBB.filter(d => d.track.mark === 'link-between').forEach(tb => {\n        const { bb } = tb;\n        const xScale = d3.scaleLinear<number, number>()\n            .domain([0, 100]) // TODO:\n            .range([bb.x, bb.x + bb.width])\n        const yScale = d3.scaleLinear<number, number>()\n            .domain([0, 100])\n            .range([bb.y, bb.y + bb.height])\n\n        // Only two of fields will be used below:\n        const xField = IsChannelDeep(tb.track.x) ? tb.track.x.field : undefined;\n        const x1Field = IsChannelDeep(tb.track.x1) ? tb.track.x1.field : undefined;\n        const yField = IsChannelDeep(tb.track.y) ? tb.track.y.field : undefined;\n        const y1Field = IsChannelDeep(tb.track.y1) ? tb.track.y1.field : undefined;\n\n        const [f1, f2] = [xField, x1Field, yField, y1Field].filter(d => d);\n\n        const lines = g.selectAll('.line')\n            .data(tb.track.data as Datum[])\n            .enter()\n            // TODO: for demo\n            .filter(\n                d => Math.abs((d[f1 as string] as number) - (d[f2 as string] as number)) < 30\n            )\n            /////\n            .append('line')\n\n        // TODO: better way to merge the codes below?\n        if (xField && yField) {\n            /* |__ */\n            lines\n                .attr('x1', bb.x)\n                .attr('y1', d => yScale(d[yField as string] as number))\n                .attr('x2', d => xScale(d[xField as string] as number))\n                .attr('y2', bb.y + bb.height)\n        }\n        else if (x1Field && yField) {\n            /* |‾‾ */\n            lines\n                .attr('x1', bb.x)\n                .attr('y1', d => yScale(d[yField as string] as number))\n                .attr('x2', d => xScale(d[x1Field as string] as number))\n                .attr('y2', bb.y)\n        }\n        else if (x1Field && y1Field) {\n            /* ‾‾| */\n            lines\n                .attr('x1', bb.x + bb.width)\n                .attr('y1', d => yScale(d[y1Field as string] as number))\n                .attr('x2', d => xScale(d[x1Field as string] as number))\n                .attr('y2', bb.y)\n        }\n        else if (xField && y1Field) {\n            /* __| */\n            lines\n                .attr('x1', bb.x + bb.width)\n                .attr('y1', d => yScale(d[y1Field as string] as number))\n                .attr('x2', d => xScale(d[xField as string] as number))\n                .attr('y2', bb.y + bb.height)\n        }\n        else if (xField && x1Field) {\n            /* __\n               __ */\n            lines\n                .attr('x1', d => xScale(d[xField as string] as number))\n                .attr('y1', bb.y + bb.height)\n                .attr('x2', d => xScale(d[x1Field as string] as number))\n                .attr('y2', bb.y)\n        }\n        else if (yField && y1Field) {\n            /* | | */\n            lines\n                .attr('x1', bb.x)\n                .attr('y1', d => yScale((d[yField as string] as number)))\n                .attr('x2', bb.x + bb.width)\n                .attr('y2', d => yScale((d[y1Field as string] as number)))\n        }\n\n        // styles\n        g.selectAll('line')\n            .attr('fill', 'black')\n            .attr('stroke', 'black')\n            .attr('stroke-width', 2)\n            .attr('opacity', 0.3)\n    });\n}","import { GeminiSpec } from \"../gemini.schema\";\nimport { VIEW_PADDING } from \"../visualizations/defaults\";\n\nexport interface BoundingBox {\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n}\n\n/**\n * Naive approach to calculate the entire size of visualization.\n * @param gm \n */\nexport function calculateSize(gm: GeminiSpec) { // TODO: Use model?\n    const size = { width: 0, height: 0 };\n    if (gm.layout?.direction !== \"horizontal\") {\n        gm.tracks.forEach((track, i) => {\n            size.height += ((track.height as number) ?? 0);\n            if (i !== gm.tracks.length - 1) size.height += VIEW_PADDING;\n            size.width = Math.max((track.width as number) ?? 0, size.width);\n        });\n    } else {\n        gm.tracks.forEach((track, i) => {\n            size.width += ((track.width as number) ?? 0);\n            if (i !== gm.tracks.length - 1) size.width += VIEW_PADDING;\n            size.height = Math.max((track.height as number) ?? 0, size.height);\n        });\n    }\n    return size;\n}","import React, { useState, useEffect, useRef } from 'react';\nimport * as d3 from \"d3\"; // TODO: performance\nimport EditorPanel from './editor-panel';\nimport stringify from 'json-stringify-pretty-compact';\nimport SplitPane from 'react-split-pane';\nimport { GeminiSpec, MarkDeep, Track, Datum } from '../lib/gemini.schema';\nimport { debounce } from \"lodash\";\nimport { demos } from './examples';\nimport './editor.css';\nimport { renderGlyphPreview } from '../lib/visualizations/glyph-preview';\nimport { replaceGlyphs } from '../lib/utils';\nimport { renderLayoutPreview } from '../lib/visualizations/layout-preview';\nimport { calculateSize } from '../lib/utils/bounding-box';\nimport { generateLinkData, generateBandData } from '../lib/script/link-data';\n\nconst DEBUG_INIT_DEMO_INDEX = demos.length - 1;\n\nfunction Editor() {\n\n    const glyphSvg = useRef<SVGSVGElement>(null);\n    const layoutSvg = useRef<SVGSVGElement>(null);\n    const [demo, setDemo] = useState(demos[DEBUG_INIT_DEMO_INDEX]);\n    const [editorMode, setEditorMode] = useState<'Full Glyph Definition' | 'Predefined Glyph'>('Full Glyph Definition');\n    const [gm, setGm] = useState(stringify(demos[DEBUG_INIT_DEMO_INDEX].spec as GeminiSpec));\n    const [glyphWidth, setGlyphWidth] = useState(demos[DEBUG_INIT_DEMO_INDEX].glyphWidth);\n    const [glyphHeight, setGlyphHeight] = useState(demos[DEBUG_INIT_DEMO_INDEX].glyphHeight);\n\n    useEffect(() => {\n        if (editorMode === 'Full Glyph Definition') {\n            // TODO: Better copying?\n            setGm(stringify(replaceGlyphs(JSON.parse(stringify(demo.spec)) as GeminiSpec)));\n        } else {\n            setGm(stringify(demo.spec as GeminiSpec));\n        }\n        setGlyphWidth(demo.glyphWidth);\n        setGlyphHeight(demo.glyphHeight);\n    }, [demo, editorMode]);\n\n    useEffect(() => {\n        let editedGm;\n        try {\n            editedGm = replaceGlyphs(JSON.parse(gm));\n        } catch (e) {\n            console.warn(\"Cannnot parse the edited code.\");\n        }\n        if (!editedGm) return;\n\n        renderLayoutPreview(\n            layoutSvg.current as SVGSVGElement,\n            editedGm as GeminiSpec,\n            calculateSize(editedGm).width,\n            calculateSize(editedGm).height\n        );\n        d3.select(glyphSvg.current).selectAll('*').remove(); // TODO:\n        const track = (editedGm as GeminiSpec)?.tracks?.find(\n            d => (d.mark as MarkDeep)?.type === \"glyph\"\n        );\n        if (!track) return;\n\n        // TODO: Faster way of this?\n        // TODO: Move this inside of a model\n        d3.csv(track.data as string).then(data =>\n            renderGlyphPreview(\n                glyphSvg.current as SVGSVGElement,\n                { ...track, data } as Track,\n                glyphWidth,\n                glyphHeight\n            )\n        );\n    }, [gm, glyphWidth, glyphHeight]);\n\n    return (\n        <>\n            <div className=\"demo-navbar\">\n                🧬Gemini <code>Editor</code>\n                <select\n                    onChange={e => {\n                        setDemo(demos.find(d => d.name === e.target.value) as any);\n                    }}\n                    defaultValue={demo.name}>\n                    {demos.map(d => (\n                        <option key={d.name} value={d.name}>\n                            {d.name}\n                        </option>\n                    ))}\n                </select>\n                <select\n                    onChange={e => {\n                        setEditorMode(e.target.value as any);\n                    }}\n                    defaultValue={'Full Glyph Definition'}>\n                    {['Full Glyph Definition', 'Predefined Glyph'].map(d => (\n                        <option key={d} value={d}>\n                            {d}\n                        </option>\n                    ))}\n                </select>\n            </div>\n            <div className=\"editor\">\n                <SplitPane split=\"vertical\" defaultSize=\"50%\" onChange={() => { }}>\n                    {/* Gemini Editor */}\n                    <EditorPanel\n                        code={gm}\n                        readOnly={false}\n                        onChange={debounce(code => {\n                            setGm(code);\n                        }, 1000)}\n                    />\n                    {/* D3 Visualizations */}\n                    <SplitPane split=\"horizontal\" defaultSize=\"35%\" onChange={() => { }}>\n                        <div className=\"preview-container\">\n                            <b>Glyph Preview</b>\n                            <div><svg ref={glyphSvg} /></div>\n                        </div>\n                        <div className=\"preview-container\">\n                            <b>Layout Preview</b>\n                            <div><svg ref={layoutSvg} /></div>\n                        </div>\n                    </SplitPane>\n                </SplitPane>\n            </div>\n        </>\n    );\n}\nexport default Editor;","import { GeminiSpec } from \"../gemini.schema\";\nimport * as d3 from 'd3';\nimport { renderBackground } from \"./guidelines\";\nimport { renderLayout } from \"./layout\";\n\nexport function renderLayoutPreview(\n    svg: SVGSVGElement,\n    gm: GeminiSpec,\n    width: number,\n    height: number\n) {\n    if (!svg || !gm) return;\n    d3.select(svg).selectAll('*').remove();\n\n    // Styles\n    const PADDING_X = 60, PADDING_Y = 60;\n    const WIDTH = width + PADDING_X * 2, HEIGHT = height + PADDING_Y * 2;\n\n    // BG and Guidelines\n    renderBackground(svg, WIDTH, HEIGHT, PADDING_X, PADDING_Y, false);\n\n    const innerG = d3.select(svg).append(\"g\")\n        .attr(\"width\", WIDTH - PADDING_X * 2)\n        .attr(\"height\", HEIGHT - PADDING_Y * 2)\n        .attr(\"transform\", `translate(${PADDING_X},${PADDING_Y})`);\n\n    renderLayout(\n        innerG,\n        gm\n    );\n\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Editor from './editor/editor';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Editor />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}