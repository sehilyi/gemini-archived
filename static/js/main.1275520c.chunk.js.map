{"version":3,"sources":["gemini-track/utils/zoom.js","gemini-track/visualizations/index.js","gemini-track/visualizations/zoom-instruction.js","gemini-track/utils/colors.js","gemini-track/visualizations/bar.js","gemini-track/visualizations/line.js","gemini-track/visualizations/text.js","gemini-track/GeminiTrack.js","editor/editor-panel.tsx","lib/test/gemini/glyph/index.ts","lib/test/gemini/glyph/gene-annotation.ts","lib/test/gemini/glyph/gene-annotation-simple.ts","lib/test/gemini/glyph/glyph-cytogenetic-band.ts","lib/utils/index.ts","lib/gemini.schema.ts","lib/test/gemini/layout-examples.ts","editor/examples.tsx","lib/test/gemini/glyph-examples.ts","lib/models/track.ts","lib/utils/spec-preprocess.ts","lib/visualizations/guidelines.ts","lib/visualizations/glyph-preview.ts","lib/visualizations/glyph.ts","lib/utils/data-process.ts","lib/utils/chrom-size.ts","lib/higlass/higlass-model.ts","lib/utils/contants.ts","lib/higlass/gemini-to-higlass.ts","lib/visualizations/validate.ts","lib/visualizations/link.ts","lib/visualizations/link-validate.ts","lib/visualizations/chart-type.ts","lib/visualizations/line-connection.ts","lib/visualizations/band-connection.ts","lib/visualizations/layout-linear.ts","lib/visualizations/defaults.ts","lib/visualizations/higlass.ts","lib/visualizations/layout.ts","lib/visualizations/layout-circular.ts","lib/utils/bounding-box.ts","editor/editor.tsx","lib/visualizations/layout-preview.ts","serviceWorker.ts","index.tsx"],"names":["getMaxZoomLevel","Math","ceil","log","findExtent","matrix","maxAndMin","max","min","i","length","temp","localPositiveMax","filter","a","reduce","b","negativeValues","localNegativeMax","map","abs","findExtentByTrackType","data","isStacked","extent","Array","from","Set","d","forEach","pos","curMax","sum","drawZoomInstruction","HGC","obj","zoomInstruction","libraries","PIXI","Text","fontSize","fontFamily","fill","anchor","x","y","graphics","pBorder","beginFill","drawRect","position","dimensions","addChild","drawMultipleBarCharts","tile","pixiRenderer","services","drawnAtScale","_xScale","copy","localGraphics","Graphics","getTilePosAndDimensions","tileData","zoomLevel","tilePos","tilesetInfo","tile_size","tileX","tileWidth","options","barBorder","lineStyle","barBorders","tabularData","colorScale","shape","scaleOrdinal","schemeCategory10","trackHeight","barWidth","tileSize","uniqueCategories","rowHeight","xScale","yScale","scaleLinear","domain","range","cScale","category","value","gposition","color","height","indexOf","colorHexMap","addSVGInfo","texture","generateTexture","SCALE_MODES","NEAREST","sprite","Sprite","width","drawLineCharts","matrixDimensions","valueToPixels","linePlacement","j","moveTo","lineTo","drawStackedBarChart","mapOriginalColors","unFlatten","positiveMax","negativeMax","unscaledHeight","positiveTrackHeight","negativeTrackHeight","lowestY","drawBackground","posBars","posScale","posStackedHeight","negative","valueToPixelsNegative","negativeStackedHeight","drawTextSequence","textGraphics","uniquePositions","margin","alphaSeq","clamp","alphaScale","alpha","text","fontWeight","letter","txMiddle","tyMiddle","GeminiTrack","Error","colorToHex","utils","GeminiTrackClass","context","initTrack","this","isGeminiTrackInit","isStackedBarChart","spec","row","mark","gmTrackSpec","original","regular","zoomOut","zoomOutTechnique","type","merge","JSON","parse","stringify","scale","minRawValue","minVisibleValue","maxRawValue","maxVisibleValue","minValue","maxValue","dense","localColorToHexScale","tabularizeTile","renderTile","rescaleTiles","mouseOverData","clear","removeChildren","maxZoomLevel","vis","visibleAndFetchedTiles","visibleAndFetched","syncMaxAndMin","newZero","flattenedArray","simpleUnFlatten","CATEGORIES","numericValues","numOfCategories","numOfGenomicPositions","push","shapeX","shapeY","singleBar","undefined","matrixWithColors","columnColors","isNaN","positive","sortLargestOnTop","sort","newDimensions","oldDimensions","initTile","newOptions","updateTile","draw","tracks","BarTrack","args","config","datatype","local","orientation","thumbnail","DOMParser","parseFromString","documentElement","availableOptions","defaultOptions","labelPosition","labelColor","labelTextOpacity","trackBorderWidth","trackBorderColor","backgroundColor","EditorPanel","props","templateCode","code","readOnly","editor","useRef","useState","setCode","useEffect","handleWidth","handleHeight","onResize","current","layout","language","theme","autoClosingBrackets","autoClosingQuotes","cursorBlinking","folding","lineNumbersMinChars","minimap","enabled","scrollBeyondLastLine","wordWrap","lineNumbers","renderLineHighlight","renderIndentGuides","onChange","e","editorDidMount","monacoEditor","monaco","focus","editorWillMount","GLYPH_PRESETS","name","requiredChannels","elements","description","select","channel","oneOf","size","bind","xe","opacity","style","dy","dashed","stroke","strokeWidth","GLYPH_LOCAL_PRESET_TYPES","replaceGlyphs","track","IsNotEmptyTrack","IsMarkDeep","predefinedGlyph","includes","find","IsDataDeep","IsGlyphMark","IsHiGlassTrack","url","IsChannelValue","IsChannelBind","IsChannelDeep","LOCAL_MULTIVEC","demos","server","field","geneOrExon","glyphWidth","glyphHeight","exonVersion","exonId","stain","x1","y1","references","direction","wrap","background","chromosome","axis","x1e","interval","TrackModel","channelToField","domains","scales","ranges","longElements","element","deepToLongElements","setDomains","c","targetChannel","isArray","Object","keys","d3","values","bb","boundingBox","setRanges","datum","scaleChannel","getFieldByChannel","altSize","getEncoding","renderBackground","svg","w","h","px","py","isGuideline","attr","g","append","renderGlyphPreview","selectAll","remove","WIDTH","HEIGHT","tm","setScales","getElements","markE","filters","transformed_data","filteredData","slice","f","transformData","enter","console","warn","renderGlyph","PADDING_X","PADDING_Y","CHROM_SIZE_HG19","chr1","chr2","chr3","chr4","chr5","chr6","chr7","chr8","chr9","chr10","chr11","chr12","chr13","chr14","chr15","chr16","chr17","chr18","chr19","chr20","chr21","chr22","chrX","chrY","chrM","CHROM_RANGE_HG19","k","TOTAL_CHROM_SIZE_HG19","HiGlassModel","hg","setEditable","setChromInfoPath","trackSourceServers","views","uid","uuid","v1","genomePositionSearchBoxVisible","top","left","center","right","bottom","gallery","whole","initialXDomain","initialYDomain","IsDomainChr","IsDomainInterval","IsDomainChrInterval","chrStart","xDomain","yDomain","getNumericDomain","editable","chromInfoPath","widthOrHeight","validate","Ajv","extendRefs","compile","HiGlassSchema","valid","errors","COLOR_SCHEME_VIRIDIS","compiler","higlass","split","tilesetUid","isXGenomic","isYGenomic","colorRange","trackDirection","trackType","setDomain","typeMap","pointColor","axisPositionHorizontal","barFillColor","lineStrokeColor","higlassTrackType","setMainTrack","addTrackSourceServers","chanToPos","channelDef","setAxisTrack","validateSpec","SpecValidityModel","validity","msg","isValid","setIsValid","setMsg","getValidity","DEFAULT_LINK_STYLE","LinkChannelToStyleMap","LinkStyleModel","getLinkPosition","xField","x1Field","yField","y1Field","renderBetweenLink","tracksWithBB","tb","definedFields","validateBetweenLinkSpec","xeField","x1eField","yeField","ye","y1eField","y1e","numOfChannelsDefined","key","getChartType","then","styles","f1","f2","point","getStyle","renderBetweenLineLink","primaryPointStart","primaryPointEnd","secondaryPointStart","secondaryPointEnd","renderBetweenBandLink","printValidity","renderLinearLayout","gm","setHiGlassInfo","trackInfo","cumX","cumY","trackStyle","hiGlassInfo","viewConfig","renderHiGlass","renderLayout","totalRadius","totalLength","t","angleGap","PI","cumDonutBandWidth","cumLength","donutBandWidth","startAngle","endAngle","arc","innerRadius","outerRadius","renderCircularLayout","calculateSize","INNER_CIRCLE_RADIUS","floor","higlassRegister","DEBUG_INIT_DEMO_INDEX","Editor","glyphSvg","layoutSvg","higlassTrackOptions","setHiGlassTrackOptions","demo","setDemo","editorMode","setEditorMode","setGm","setGlyphWidth","setGlyphHeight","editedGm","renderLayoutPreview","higlassInfo","hglass","useMemo","op","display","bounded","containerPaddingX","containerPaddingY","viewMarginTop","viewMarginBottom","viewMarginLeft","viewMarginRight","viewPaddingTop","viewPaddingBottom","viewPaddingLeft","viewPaddingRight","sizeMode","className","target","defaultValue","defaultSize","debounce","hidden","ref","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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Y,KAChCmW,IAAKC,IAAKC,KACVxP,KAAOqJ,EALW,sBAGc,cAG/BuH,EAAgB,IAHe,8BAIjBvR,KAAK4P,GAAG0B,eAJS,IAM7BtR,OA/Ff,qCAmGQ,IAAMwR,EAAW,IAAIC,IAAI,CAAEC,YAAY,IAAQC,QAAQC,IACjDC,EAAQL,EAASxR,KAAKG,QAM5B,OAJIqR,EAASM,QACTrE,QAAQC,KAAK7M,KAAKE,UAAUyQ,EAASM,OAAQ,KAAM,IAGhDD,MA1Gf,KCbaE,GAAuB,CAChC,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qB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","file":"static/js/main.1275520c.chunk.js","sourcesContent":["import { min, max, sum } from 'd3';\n\nexport function getMaxZoomLevel() {\n    // TODO: How to calculate maxZoomLevel?\n    const TILE_SIZE = 256;\n    const totalLength = 4795370;\n    return Math.ceil(\n        Math.log(totalLength / TILE_SIZE) / Math.log(2)\n    );\n}\n\n/**\n * Find max and min heights for the given tile\n *\n * @param matrix 2d array of numbers representing one tile\n */\nexport function findExtent(matrix) {\n    // find max height of bars for scaling in the track\n    const maxAndMin = {\n        max: null,\n        min: null\n    };\n\n    for (let i = 0; i < matrix.length; i++) {\n        const temp = matrix[i];\n\n        // find total heights of each positive column and each negative column\n        // and compare to highest value so far for the tile\n        const localPositiveMax = temp.filter(a => a >= 0).reduce((a, b) => a + b, 0);\n        if (localPositiveMax > maxAndMin.max) {\n            maxAndMin.max = localPositiveMax;\n        }\n\n        // When dealing with states data we have positive values including 0\n        // maxAndMin.min should be 0 in this case\n        let negativeValues = temp.filter(a => a <= 0);\n\n        if (negativeValues.length > 0) {\n            negativeValues = negativeValues.map(a => Math.abs(a));\n            const localNegativeMax = negativeValues.reduce((a, b) => a + b, 0); // check\n            if (maxAndMin.min === null || localNegativeMax > maxAndMin.min) {\n                maxAndMin.min = localNegativeMax;\n            }\n        }\n    }\n\n    return maxAndMin;\n}\n\nexport function findExtentByTrackType(data, isStacked) {\n    // TODO: do not consider negative values here yet\n    if (isStacked) {\n        const extent = {\n            min: 0, max: null\n        };\n\n        const positions = Array.from(new Set(data.map(d => d['__G__'])));\n        positions.forEach(pos => {\n            const curMax = sum(data.filter(d => d['__G__'] === pos).map(d => d['__Q__']));\n            if (extent.max < curMax) {\n                extent.max = curMax;\n            }\n        });\n\n        return extent;\n    } else {\n        return { min: 0, max: max(data.map(d => d['__Q__'])) };\n    }\n}","import { drawZoomInstruction } from './zoom-instruction';\nimport { drawMultipleBarCharts, drawStackedBarChart } from './bar';\nimport { drawLineCharts } from './line';\nimport { drawTextSequence } from './text';\n\nexport default {\n    drawZoomInstruction,\n    drawMultipleBarCharts,\n    drawLineCharts,\n    drawStackedBarChart,\n    drawTextSequence\n};","import { LIGHT_GRAY } from \"../utils/colors\";\n\nexport function drawZoomInstruction(HGC, obj) {\n\n    if (!obj.zoomInstruction) {\n        // assigning to the track object since we need only one of this graphics\n        obj.zoomInstruction = new HGC.libraries.PIXI.Text('Zoom in to see information', {\n            fontSize: \"13px\",\n            fontFamily: \"Arial\",\n            fill: 'black',\n        });\n        obj.zoomInstruction.anchor.x = 0.5;\n        obj.zoomInstruction.anchor.y = 0.5;\n    }\n\n    const graphics = obj.pBorder;   // use pBorder not to affected by zoomming\n\n    // bg\n    graphics.beginFill(LIGHT_GRAY);\n    graphics.drawRect(\n        obj.position[0],\n        obj.position[1],\n        obj.dimensions[0],\n        obj.dimensions[1]\n    );\n\n    // text\n    obj.zoomInstruction.x = obj.position[0] + obj.dimensions[0] / 2;\n    obj.zoomInstruction.y = obj.position[1] + obj.dimensions[1] / 2;\n\n    graphics.addChild(obj.zoomInstruction);\n}","export const LIGHT_GRAY = 0xEAEAEA;","import { scaleLinear, scaleOrdinal, schemeCategory10, min, max, set } from 'd3';\n\nexport function drawMultipleBarCharts(HGC, obj, tile) {\n\n    const { pixiRenderer } = HGC.services;\n\n    const graphics = tile.graphics;\n\n    tile.drawnAtScale = obj._xScale.copy();\n\n    let localGraphics = new HGC.libraries.PIXI.Graphics();\n\n    // we're setting the start of the tile to the current zoom level\n    const { tileX, tileWidth } = obj.getTilePosAndDimensions(\n        tile.tileData.zoomLevel,\n        tile.tileData.tilePos,\n        obj.tilesetInfo.tile_size\n    );\n\n    if (obj.options.barBorder) {\n        localGraphics.lineStyle(1, 0x333333, 0.5, 0);\n        tile.barBorders = true;\n    }\n\n    const data = tile.tabularData; // alternative data that will replace the `matrix`\n\n    const matrixDimensions = tile.tileData.shape;\n    const colorScale = obj.options.colorScale || scaleOrdinal(schemeCategory10);\n\n    const trackHeight = obj.dimensions[1];\n    const barWidth = obj._xScale(tileX + (tileWidth / obj.tilesetInfo.tile_size)) - obj._xScale(tileX);\n    const tileSize = obj.tilesetInfo.tile_size;\n    const uniqueCategories = Array.from(new Set(data.map(d => d['__N__'])));\n    const rowHeight = trackHeight / uniqueCategories.length;\n\n    const xScale = obj._xScale;\n    const yScale = scaleLinear()\n        .domain([0, max(data.map(d => d['__Q__']))])\n        .range([0, rowHeight]);\n    const cScale = scaleOrdinal(colorScale)\n        .domain(uniqueCategories);\n\n    data.forEach(d => {\n        const category = d['__N__'];\n        const value = d['__Q__'];\n        const gposition = d['__G__'];\n\n        const color = cScale(category);\n        const x = xScale(tileX + (gposition * tileWidth / tileSize));\n        const height = yScale(value);\n        const y = (rowHeight) * (uniqueCategories.indexOf(category) + 1) - height;\n\n        // pixi\n        localGraphics.beginFill(obj.colorHexMap[color]);\n        localGraphics.drawRect(x, y, barWidth, height);\n\n        // svg\n        obj.addSVGInfo(tile, x, y, barWidth, height, color);\n    });\n\n    const texture = pixiRenderer.generateTexture(localGraphics, HGC.libraries.PIXI.SCALE_MODES.NEAREST);\n    const sprite = new HGC.libraries.PIXI.Sprite(texture);\n    sprite.width = xScale(tileX + tileWidth) - xScale(tileX);\n    sprite.x = xScale(tileX);\n    graphics.addChild(sprite);\n}\n\nexport function drawStackedBarChart(HGC, obj, tile) {\n\n    // Services\n    const { pixiRenderer } = HGC.services;\n\n    const matrix = obj.mapOriginalColors(obj.unFlatten(tile));\n\n    const positiveMax = obj.maxAndMin.max;\n    const negativeMax = obj.maxAndMin.min;\n\n    // we're setting the start of the tile to the current zoom level\n    const { tileX, tileWidth } = obj.getTilePosAndDimensions(\n        tile.tileData.zoomLevel,\n        tile.tileData.tilePos,\n        obj.tilesetInfo.tile_size\n    );\n\n    let graphics = new HGC.libraries.PIXI.Graphics();\n    const trackHeight = obj.dimensions[1];\n\n    // get amount of trackHeight reserved for positive and for negative\n    const unscaledHeight = positiveMax + (Math.abs(negativeMax));\n\n    // fraction of the track devoted to positive values\n    const positiveTrackHeight = (positiveMax * trackHeight) / unscaledHeight;\n\n    // fraction of the track devoted to negative values\n    const negativeTrackHeight = (Math.abs(negativeMax) * trackHeight) / unscaledHeight;\n\n    let lowestY = obj.dimensions[1];\n\n    const width = 10;\n\n    // calls drawBackground in PixiTrack.js\n    obj.drawBackground(matrix, graphics);\n\n    // borders around each bar\n    if (obj.options.barBorder) {\n        graphics.lineStyle(1, 0x333333, 1, 0);\n    }\n\n    for (let j = 0; j < matrix.length; j++) {\n        const x = (j * width);\n\n        // draw positive values\n        const posBars = matrix[j][0];\n        const posScale = scaleLinear()\n            .domain([0, positiveMax])\n            .range([0, positiveTrackHeight]);\n\n        let posStackedHeight = 0;\n        for (let i = 0; i < posBars.length; i++) {\n            const height = posScale(posBars[i].value);\n\n            if (height === 0) continue;\n\n            const y = positiveTrackHeight - (posStackedHeight + height);\n\n            obj.addSVGInfo(tile, x, y, width, height, posBars[i].color);\n            graphics.beginFill(obj.colorHexMap[posBars[i].color]);\n            graphics.drawRect(x, y, width, height);\n\n            posStackedHeight += height;\n\n            if (lowestY > y) // TODO: when do we use this?\n                lowestY = y;\n        }\n\n        // draw negative values, if there are any\n        if (Math.abs(negativeMax) > 0) {\n            const negative = matrix[j][1];\n            const valueToPixelsNegative = scaleLinear()\n                .domain([-Math.abs(negativeMax), 0])\n                .range([negativeTrackHeight, 0]);\n            let negativeStackedHeight = 0;\n            for (let i = 0; i < negative.length; i++) {\n                const height = valueToPixelsNegative(negative[i].value);\n                const y = positiveTrackHeight + negativeStackedHeight;\n                obj.addSVGInfo(tile, x, y, width, height, negative[i].color);\n                graphics.beginFill(obj.colorHexMap[negative[i].color]);\n                graphics.drawRect(x, y, width, height);\n                negativeStackedHeight = negativeStackedHeight + height;\n            }\n        }\n    }\n\n    // vertical bars are drawn onto the graphics object\n    // and a texture is generated from that\n    const texture = pixiRenderer.generateTexture(\n        graphics, HGC.libraries.PIXI.SCALE_MODES.NEAREST\n    );\n    const sprite = new HGC.libraries.PIXI.Sprite(texture);\n    sprite.width = obj._xScale(tileX + tileWidth) - obj._xScale(tileX);\n    sprite.x = obj._xScale(tileX);\n    tile.sprite = sprite;\n    tile.lowestY = lowestY;\n    tile.graphics.addChild(tile.sprite);\n}","import { scaleLinear, scaleOrdinal, schemeCategory10, min, max } from 'd3';\n\nexport function drawLineCharts(obj, tile) {\n    const graphics = tile.graphics;\n\n    tile.drawnAtScale = obj._xScale.copy();\n\n    // we're setting the start of the tile to the current zoom level\n    const { tileX, tileWidth } = obj.getTilePosAndDimensions(tile.tileData.zoomLevel,\n        tile.tileData.tilePos, obj.tilesetInfo.tile_size);\n\n    const matrix = tile.matrix;\n    const trackHeight = obj.dimensions[1];\n    const matrixDimensions = tile.tileData.shape;\n\n    const valueToPixels = scaleLinear()\n        .domain([0, obj.maxAndMin.max])\n        .range([0, trackHeight/* / matrixDimensions[0]*/]);\n\n    for (let i = 0; i < matrix[0].length; i++) {\n        const intervals = trackHeight / matrixDimensions[0];\n        // calculates placement for a line in each interval; we subtract 1 so we can see the last line clearly\n        const linePlacement = trackHeight;\n        // (i === matrix[0].length - 1) ?\n        //     (intervals * i) + ((intervals * (i + 1) - (intervals * i))) - 1 :\n        //     (intervals * i) + ((intervals * (i + 1) - (intervals * i)));\n        graphics.lineStyle(1, obj.colorHexMap[obj.options.colorScale[i]], 1);\n\n        for (let j = 0; j < matrix.length; j++) { // 3070 or something\n            const x = obj._xScale(tileX + (j * tileWidth / obj.tilesetInfo.tile_size));\n            const y = linePlacement - valueToPixels(matrix[j][i]);\n            obj.addSVGInfo(tile, x, y, obj.options.colorScale[i]);\n            // move draw position back to the start at beginning of each line\n            (j === 0) ? graphics.moveTo(x, y) : graphics.lineTo(x, y);\n        }\n    }\n}","import { scaleLinear } from 'd3';\n\nexport function drawTextSequence(HGC, obj, tile) {\n\n    if (!tile.textGraphics) {\n        tile.textGraphics = new HGC.libraries.PIXI.Graphics();\n        tile.graphics.addChild(tile.textGraphics);\n    }\n\n    const { tileX, tileWidth } = obj.getTilePosAndDimensions(\n        tile.tileData.zoomLevel,\n        tile.tileData.tilePos,\n        obj.tilesetInfo.tile_size\n    );\n    const trackHeight = obj.dimensions[1];\n    const data = tile.tabularData;\n    const uniqueCategories = Array.from(new Set(data.map(d => d['__N__'])));\n    const uniquePositions = Array.from(new Set(data.map(d => d['__G__'])));\n    const xScale = obj._xScale.copy();\n    const width = (xScale(tileX + tileWidth) - xScale(tileX)) / uniquePositions.length;\n    const margin = width - 10;\n\n    let alphaSeq = 1.0;\n\n    if (margin < 2) {\n        return;\n    }\n    else if (trackHeight < 10) {\n        alphaSeq = 0;\n    }\n    else if (margin < 5 && margin >= 2) {\n        // gracefully fade out\n        const alphaScale = scaleLinear()\n            .domain([2, 5])\n            .range([0, 1])\n            .clamp(true);\n        alphaSeq = alphaScale(width - 10);\n    }\n\n    tile.textGraphics.alpha = alphaSeq;\n\n    data.forEach(d => {\n        // jth vertical bar in the graph\n        const x = d['__Q__'] * width;\n\n        const text = new HGC.libraries.PIXI.Text(\n            d['__N__'],\n            {\n                fontSize: '12px',\n                fontFamily: 'Arial',\n                fill: 'black',\n                fontWeight: 'bold'\n            }\n        );\n        text.width = 10;\n        text.height = 10;\n        text.letter = d['__N__'];\n\n        const txStart = xScale(tileX) + x;\n        const txMiddle = txStart + width / 2 - text.width / 2;\n        const tyMiddle = uniqueCategories.length / 2 - text.height / 2;\n\n        text.position.x = txMiddle;\n        text.position.y = tyMiddle;\n\n        // pixi\n        tile.textGraphics.addChild(text);\n\n        // svg\n        // obj.addSVGInfoText(\n        //     tile,\n        //     txMiddle,\n        //     tyMiddle,\n        //     d['__N__'],\n        //     alphaSeq\n        // );\n    });\n}","import { scaleLinear, scaleOrdinal, schemeCategory10, min, max } from 'd3';\nimport { findExtent, getMaxZoomLevel, findExtentByTrackType } from './utils/zoom';\nimport merge from 'lodash/merge';\nimport vis from './visualizations';\n\nfunction GeminiTrack(HGC, ...args) {\n    if (!new.target) {\n        throw new Error(\n            'Uncaught TypeError: Class constructor cannot be invoked without \"new\"',\n        );\n    }\n\n    const { colorToHex } = HGC.utils;\n\n    class GeminiTrackClass extends HGC.tracks.BarTrack {\n        constructor(context, options) {\n            super(context, options);\n            this.initTrack();\n        }\n\n        initTrack() {\n            if (this.isGeminiTrackInit) return;\n\n            this.maxAndMin = {\n                max: null,\n                min: null\n            };\n\n            // TODO: this should be determined considering the zoom level and zoom tech\n            this.isStackedBarChart = (\n                this.options?.spec?.color &&\n                !this.options?.spec?.row &&\n                this.options?.spec?.mark === 'bar'\n            );\n\n            // store gemini spec\n            this.gmTrackSpec = {\n                original: this.options.spec,\n                regular: this.options.spec,\n                zoomOut: (this.options.spec?.zoomOutTechnique?.type === 'alt-representation') ?\n                    merge(\n                        JSON.parse(JSON.stringify(this.options.spec)),\n                        this.options.spec?.zoomOutTechnique.spec\n                    )\n                    : this.options.spec\n            }\n\n            this.isGeminiTrackInit = true;\n        }\n\n        initTile(tile) {\n            this.initTrack();\n\n            // create the tile\n            // should be overwritten by child classes\n            this.scale.minRawValue = this.minVisibleValue();\n            this.scale.maxRawValue = this.maxVisibleValue();\n\n            this.scale.minValue = this.scale.minRawValue;\n            this.scale.maxValue = this.scale.maxRawValue;\n\n            this.maxAndMin.min = min(tile.tileData.dense);\n            this.maxAndMin.max = max(tile.tileData.dense);\n\n            this.localColorToHexScale();\n\n            this.unFlatten(tile);\n\n            // TODO: Metadata, such as field names, should be come from the server\n            // This should replace the `unFlatten()`\n            this.tabularizeTile(tile);\n\n            this.renderTile(tile);\n            this.rescaleTiles();\n        }\n\n        // draws exactly one tile\n        renderTile(tile) {\n            tile.mouseOverData = null;\n            tile.graphics.clear();\n            tile.graphics.removeChildren();\n            this.pBorder.clear();\n            this.pBorder.removeChildren();\n\n            const maxZoomLevel = getMaxZoomLevel();\n\n            tile.drawnAtScale = this._xScale.copy(); // TODO:\n\n            if (tile?.tileData?.zoomLevel !== maxZoomLevel) {\n\n                if (this.options?.spec?.zoomOutTechnique?.type === 'none') {\n                    vis.drawZoomInstruction(HGC, this);\n                }\n                else if (this.options?.spec?.zoomOutTechnique?.type === 'aggregate') {\n                    vis.drawStackedBarChart(HGC, this, tile);\n                }\n                else if (this.options?.spec?.zoomOutTechnique?.type === 'alt-representation') {\n                    if (this.options?.spec?.zoomOutTechnique?.spec?.mark) {\n                        vis.drawLineCharts(this, tile);\n                    }\n                    else if (this.options?.spec?.zoomOutTechnique?.spec?.row) {\n                        vis.drawMultipleBarCharts(HGC, this, tile);\n                    }\n                } else if (this.options?.spec?.zoomOutTechnique?.type === 'auto') {\n                    vis.drawStackedBarChart(HGC, this, tile);\n                }\n            }\n            else {\n                // we are in the highest zoom level\n                vis.drawStackedBarChart(HGC, this, tile);\n                // vis.drawTextSequence(HGC, this, tile);\n            }\n        }\n\n        // y scale should be synced across all tiles\n        syncMaxAndMin() {\n            const visibleAndFetched = this.visibleAndFetchedTiles();\n\n            visibleAndFetched.map(tile => {\n                if (tile.minValue + tile.maxValue > this.maxAndMin.min + this.maxAndMin.max) {\n                    this.maxAndMin.min = tile.minValue;\n                    this.maxAndMin.max = tile.maxValue;\n                }\n            });\n        }\n\n        // rescales the sprites of all visible tiles when zooming and panning.\n        rescaleTiles() {\n            const visibleAndFetched = this.visibleAndFetchedTiles();\n\n            this.syncMaxAndMin();\n\n            visibleAndFetched.map(a => {\n                const valueToPixels = scaleLinear()\n                    .domain([0, this.maxAndMin.max + Math.abs(this.maxAndMin.min)])\n                    .range([0, this.dimensions[1]]);\n                const newZero = this.dimensions[1] - valueToPixels(Math.abs(this.maxAndMin.min));\n                const height = valueToPixels(a.minValue + a.maxValue);\n                const sprite = a.sprite;\n                const y = newZero - valueToPixels(a.maxValue);\n\n                if (sprite) {\n                    sprite.height = height;\n                    sprite.y = y;\n                }\n            });\n        }\n\n        // converts all colors in a colorScale to Hex colors.\n        localColorToHexScale() {\n            const colorScale = this.options.colorScale;\n            const colorHexMap = {};\n            colorScale.forEach(color => {\n                colorHexMap[color] = colorToHex(color);\n            });\n            this.colorHexMap = colorHexMap;\n        }\n\n        // un-flatten data into matrix of tile.tileData.shape[0] x tile.tileData.shape[1]\n        unFlatten(tile) {\n            if (tile.matrix) {\n                return tile.matrix;\n            }\n\n            const flattenedArray = tile.tileData.dense;\n\n            const matrix = this.simpleUnFlatten(tile, flattenedArray);\n\n            const maxAndMin = findExtent(matrix);\n\n            tile.matrix = matrix;\n            tile.maxValue = maxAndMin.max;\n            tile.minValue = maxAndMin.min;\n\n            this.syncMaxAndMin();\n\n            return matrix;\n        }\n\n        tabularizeTile(tile) {\n            if (tile.tabularData) return;\n\n            // TODO: These data should be came from the server\n            const N_FIELD = '__N__', Q_FIELD = '__Q__', G_FIELD = '__G__';\n            const CATEGORIES = ['A', 'T', 'G', 'C'];\n            const numericValues = tile.tileData.dense;\n            const numOfCategories = min([tile.tileData.shape[0], CATEGORIES.length]); // TODO:\n            const numOfGenomicPositions = tile.tileData.shape[1];\n            ///\n\n            const tabularData = [];\n\n            for (let i = 0; i < numOfCategories; i++) {\n                for (let j = 0; j < numOfGenomicPositions; j++) {\n                    tabularData.push({\n                        [N_FIELD]: CATEGORIES[i],\n                        [Q_FIELD]: numericValues[(numOfGenomicPositions * i) + j],\n                        [G_FIELD]: j\n                    });\n                }\n            }\n\n            tile.tabularData = tabularData;\n\n            const { min: minValue, max: maxValue } = findExtentByTrackType(tabularData, this.isStackedBarChart);\n\n            tile.maxValue = maxValue;\n            tile.minValue = minValue;\n\n            // we need to sync the domain of y-axis so that all tiles are aligned each other\n            this.syncMaxAndMin();\n        }\n\n        simpleUnFlatten(tile, data) {\n            const shapeX = tile.tileData.shape[0]; // number of different nucleotides in each bar\n            const shapeY = tile.tileData.shape[1]; // number of bars\n\n            // matrix[0] will be [flattenedArray[0], flattenedArray[256], flattenedArray[512], etc.]\n            // because of how flattenedArray comes back from the server.\n            const matrix = [];\n            for (let i = 0; i < shapeX; i++) { // 6\n                for (let j = 0; j < shapeY; j++) { // 256;\n                    let singleBar;\n                    if (matrix[j] === undefined) {\n                        singleBar = [];\n                    } else {\n                        singleBar = matrix[j];\n                    }\n                    singleBar.push(data[(shapeY * i) + j]);\n                    matrix[j] = singleBar;\n                }\n            }\n\n            return matrix;\n        }\n\n\n        // Map each value in every array in the matrix to a color depending on position in the array\n        // Divides each array into positive and negative sections and sorts them\n        mapOriginalColors(matrix) {\n\n            // mapping colors to unsorted values\n            const matrixWithColors = [];\n            for (let j = 0; j < matrix.length; j++) {\n                const columnColors = [];\n\n                for (let i = 0; i < matrix[j].length; i++) {\n                    columnColors[i] = {\n                        value: isNaN(matrix[j][i]) ? 0 : matrix[j][i],\n                        color: this.options.colorScale[i]\n                    }\n                }\n\n                // separate positive and negative array values\n                const positive = [];\n                const negative = [];\n                for (let i = 0; i < columnColors.length; i++) {\n                    if (columnColors[i].value >= 0) {\n                        positive.push(columnColors[i]);\n                    }\n                    else if (columnColors[i].value < 0) {\n                        negative.push(columnColors[i]);\n                    }\n                }\n                if (this.options.sortLargestOnTop) {\n                    positive.sort((a, b) => a.color - b.color);\n                    negative.sort((a, b) => b.value - a.value);\n                }\n                else {\n                    positive.sort((a, b) => b.value - a.value);\n                    negative.sort((a, b) => a.value - b.value);\n                }\n\n                matrixWithColors.push([positive, negative]);\n            }\n            return matrixWithColors;\n        }\n\n        // rerender all tiles every time track size is changed\n        setDimensions(newDimensions) {\n            this.oldDimensions = this.dimensions;\n            super.setDimensions(newDimensions);\n\n            const visibleAndFetched = this.visibleAndFetchedTiles();\n            visibleAndFetched.map(a => this.initTile(a));\n        }\n\n        // rerender tiles using the new options\n        rerender(newOptions) {\n            super.rerender(newOptions);\n\n            this.options = newOptions;\n            const visibleAndFetched = this.visibleAndFetchedTiles();\n\n            for (let i = 0; i < visibleAndFetched.length; i++) {\n                this.updateTile(visibleAndFetched[i]);\n            }\n\n            this.rescaleTiles();\n            this.draw();\n        }\n\n        updateTile() {\n            const visibleAndFetched = this.visibleAndFetchedTiles();\n\n            for (let i = 0; i < visibleAndFetched.length; i++) {\n                const tile = visibleAndFetched[i];\n                this.unFlatten(tile);\n                this.tabularizeTile(tile);\n            }\n\n            this.rescaleTiles();\n        }\n\n        draw() { super.draw(); }\n        drawTile() { }  // prevent BarTracks draw method from having an effect\n        exportSVG() { }\n        getMouseOverHtml() { }\n    }\n    return new GeminiTrackClass(...args);\n};\n\nconst icon = '<svg version=\"1.0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewBox=\"0 0 5640 5420\" preserveAspectRatio=\"xMidYMid meet\"> <g id=\"layer101\" fill=\"#000000\" stroke=\"none\"> <path d=\"M0 2710 l0 -2710 2820 0 2820 0 0 2710 0 2710 -2820 0 -2820 0 0 -2710z\"/> </g> <g id=\"layer102\" fill=\"#750075\" stroke=\"none\"> <path d=\"M200 4480 l0 -740 630 0 630 0 0 740 0 740 -630 0 -630 0 0 -740z\"/> <path d=\"M1660 4420 l0 -800 570 0 570 0 0 800 0 800 -570 0 -570 0 0 -800z\"/> <path d=\"M3000 3450 l0 -1770 570 0 570 0 0 1770 0 1770 -570 0 -570 0 0 -1770z\"/> <path d=\"M4340 2710 l0 -2510 560 0 560 0 0 2510 0 2510 -560 0 -560 0 0 -2510z\"/> <path d=\"M200 1870 l0 -1670 630 0 630 0 0 1670 0 1670 -630 0 -630 0 0 -1670z\"/> <path d=\"M1660 1810 l0 -1610 570 0 570 0 0 1610 0 1610 -570 0 -570 0 0 -1610z\"/> <path d=\"M3000 840 l0 -640 570 0 570 0 0 640 0 640 -570 0 -570 0 0 -640z\"/> </g> <g id=\"layer103\" fill=\"#ffff04\" stroke=\"none\"> <path d=\"M200 4480 l0 -740 630 0 630 0 0 740 0 740 -630 0 -630 0 0 -740z\"/> <path d=\"M1660 4420 l0 -800 570 0 570 0 0 800 0 800 -570 0 -570 0 0 -800z\"/> <path d=\"M3000 3450 l0 -1770 570 0 570 0 0 1770 0 1770 -570 0 -570 0 0 -1770z\"/> </g> </svg>';\n\n// default\nGeminiTrack.config = {\n    type: 'gemini-track',\n    datatype: ['multivec', 'epilogos'],\n    local: false,\n    orientation: '1d-horizontal',\n    thumbnail: new DOMParser().parseFromString(icon, 'text/xml').documentElement,\n    availableOptions: [\n        'colorScale',\n        'labelPosition',\n        'labelColor',\n        'labelTextOpacity',\n        'labelBackgroundOpacity',\n        'trackBorderWidth',\n        'trackBorderColor',\n        'trackType',\n        'scaledHeight',\n        'backgroundColor',\n        'barBorder',\n        'sortLargestOnTop'\n    ],\n    defaultOptions: {\n        labelPosition: 'none',\n        labelColor: 'black',\n        labelTextOpacity: 0.4,\n        trackBorderWidth: 0,\n        trackBorderColor: 'black',\n        backgroundColor: 'white',\n        barBorder: false,\n        sortLargestOnTop: true,\n        colorScale: scaleOrdinal(schemeCategory10)\n    }\n};\n\nexport default GeminiTrack;\n","import React, { useRef, useState, useEffect } from 'react'\nimport MonacoEditor from 'react-monaco-editor'\nimport * as Monaco from 'monaco-editor/esm/vs/editor/editor.api'\nimport ReactResizeDetector from 'react-resize-detector'\n\nconst DEBUG_WITHOUT_DIAGNOSIS = true\n\nfunction EditorPanel(props: {\n    code: string,\n    readOnly?: boolean,\n    onChange?: (code: string) => void\n}) {\n\n    const { code: templateCode, readOnly } = props\n    const editor = useRef<Monaco.editor.IStandaloneCodeEditor | null>(null)\n    const [code, setCode] = useState(templateCode)\n\n    useEffect(() => {\n        setCode(templateCode)\n    }, [templateCode])\n\n    function editorDidMount(monacoEditor: Monaco.editor.IStandaloneCodeEditor, monaco: typeof Monaco) {\n        editor.current = monacoEditor\n        monacoEditor.focus()\n    }\n\n    function setupDiagnostics() {\n        if (DEBUG_WITHOUT_DIAGNOSIS) return\n        Monaco.languages.json.jsonDefaults.setDiagnosticsOptions({\n            allowComments: false,\n            enableSchemaRequest: true,\n            validate: true,\n            schemas: [{\n                uri: \"https://raw.githubusercontent.com/higlass/higlass/develop/app/schema.json\",\n                fileMatch: ['*']\n            }]\n        })\n        Monaco.languages.json.jsonDefaults.setModeConfiguration({\n            documentFormattingEdits: false,\n            documentRangeFormattingEdits: false,\n            completionItems: true,\n            hovers: true,\n            documentSymbols: true,\n            tokens: true,\n            colors: true,\n            foldingRanges: true,\n            diagnostics: true,\n        })\n    }\n\n    function onChangeHandle(code: string, e: any) {\n        setCode(code)\n        if (props.onChange) props.onChange(code)\n        // console.log('onChange', code, e);\n\n        setupDiagnostics()\n    }\n\n    function editorWillMount(monaco: typeof Monaco) {\n        setupDiagnostics()\n    }\n\n    return (\n        <>\n            <ReactResizeDetector\n                handleWidth\n                handleHeight\n                onResize={(width: number, height: number) => {\n                    editor?.current?.layout({ width, height })\n                }}\n            ></ReactResizeDetector>\n            <MonacoEditor\n                // Refer to https://github.com/react-monaco-editor/react-monaco-editor\n                language=\"json\"\n                value={code}\n                theme={\"test\"}\n                options={{\n                    autoClosingBrackets: \"never\",\n                    autoClosingQuotes: \"never\",\n                    cursorBlinking: \"smooth\",\n                    folding: true,\n                    lineNumbersMinChars: 4,\n                    minimap: { enabled: false },\n                    scrollBeyondLastLine: false,\n                    wordWrap: \"on\",\n                    lineNumbers: \"off\",\n                    renderLineHighlight: \"line\",\n                    renderIndentGuides: true,\n                    readOnly\n                }}\n                onChange={onChangeHandle}\n                editorDidMount={editorDidMount}\n                editorWillMount={editorWillMount}\n            />\n        </>\n    )\n}\nexport default EditorPanel","import { Mark } from '../../../gemini.schema'\n\nimport { GLYPH_GENE_ANNOTATAION } from './gene-annotation'\nimport { GLYPH_LOGO } from './logo'\nimport { GLYPH_GENE_ANNOTATAION_V2 } from './gene-annotation-simple'\nimport { GLYPH_CYTOGENETIC_BAND } from './glyph-cytogenetic-band'\n\nexport const GLYPH_PRESETS: {\n    name: GLYPH_LOCAL_PRESET_TYPE,\n    mark: Mark\n}[] = [\n        {\n            name: 'gene-annotation',\n            mark: GLYPH_GENE_ANNOTATAION\n        },\n        {\n            name: 'gene-annotation-simple',\n            mark: GLYPH_GENE_ANNOTATAION_V2\n        },\n        {\n            name: 'cytogenetic-band',\n            mark: GLYPH_CYTOGENETIC_BAND\n        }\n    ]\n\nexport type GLYPH_LOCAL_PRESET_TYPE =\n    | 'gene-annotation-simple'\n    | 'gene-annotation'\n    | 'cytogenetic-band'\n\nexport type GLYPH_HIGLASS_PRESET_TYPE =\n    | 'gene-annotation-higlass'\n    | 'gemini-track-higlass'\n    // remove ultimtely\n    | 'point-higlass'\n    | 'line-higlass'\n    | '1d-heatmap-higlass'\n    | 'bar-higlass'\n\nexport const GLYPH_HIGLASS_PRESET_TYPES: GLYPH_HIGLASS_PRESET_TYPE[] = [\n    'gene-annotation-higlass',\n    'gemini-track-higlass',\n    // remove ultimtely\n    'point-higlass',\n    'line-higlass',\n    '1d-heatmap-higlass',\n    'bar-higlass'\n]\n\nexport const GLYPH_LOCAL_PRESET_TYPES: (GLYPH_LOCAL_PRESET_TYPE | GLYPH_HIGLASS_PRESET_TYPE)[] = [\n    'gene-annotation-simple',\n    'gene-annotation',\n    'cytogenetic-band'\n]","import { MarkGlyph } from '../../../gemini.schema'\n\nexport const GLYPH_GENE_ANNOTATAION: MarkGlyph = {\n    type: 'compositeMark',\n    name: 'gene-annotation',\n    requiredChannels: [\n        'x', 'xe',\n        'y', 'color', // + or - strand?\n        'geneOrExon', // genes or exons?\n        'exonId',\n        'exonVersion' // filtering by\n    ],\n    elements: [\n        {\n            description: 'horizontal line',\n            select: [\n                { channel: 'geneOrExon', oneOf: ['gene'] },\n            ],\n            mark: 'line',\n            color: { value: 'black' },\n            size: { value: 3 }\n        },\n        {\n            description: 'exon',\n            select: [\n                { channel: 'geneOrExon', oneOf: ['exon'] },\n                { channel: 'exonVersion', oneOf: ['2'] }\n            ],\n            mark: 'rect',\n            size: { value: 25 }\n        },\n        {\n            description: 'gene left',\n            select: [\n                { channel: 'geneOrExon', oneOf: ['gene'] },\n            ],\n            mark: {\n                bind: 'y',\n                domain: ['-', '+'],\n                range: ['triangle-l', 'rule']\n            },\n            size: { value: 25 },\n            xe: 'none'\n        },\n        {\n            description: 'gene right',\n            select: [\n                { channel: 'geneOrExon', oneOf: ['gene'] },\n            ],\n            mark: {\n                bind: 'y',\n                domain: ['-', '+'],\n                range: ['rule', 'triangle-r']\n            },\n            size: { value: 25 },\n            x: { bind: 'xe' },\n            xe: 'none'\n        },\n        {\n            mark: 'text',\n            select: [\n                { channel: 'geneOrExon', 'oneOf': ['gene'] }\n            ],\n            opacity: { value: 1 },\n            size: { value: 18 },\n            style: {\n                dy: -20\n            }\n        },\n        {\n            mark: 'text',\n            select: [\n                { channel: 'geneOrExon', oneOf: ['exon'] },\n                { channel: 'exonVersion', oneOf: ['2'] }\n            ],\n            text: { bind: 'exonId' },\n            opacity: { value: 1 },\n            size: { value: 6 },\n            style: {\n                dy: 28\n            }\n        }\n    ]\n}","import { MarkGlyph } from '../../../gemini.schema'\n\nexport const GLYPH_GENE_ANNOTATAION_V2: MarkGlyph = {\n    type: 'compositeMark',\n    name: 'gene-annotation',\n    requiredChannels: [\n        'x', 'xe',\n        'y', 'color', // + or - strand?\n        'geneOrExon' // genes or exons?\n    ],\n    elements: [\n        {\n            description: 'gene range rect',\n            select: [\n                { channel: 'geneOrExon', oneOf: ['gene'] },\n            ],\n            mark: 'rect',\n            size: { value: 25 }\n        },\n        {\n            description: 'gene left',\n            select: [\n                { channel: 'geneOrExon', oneOf: ['gene'] },\n                { channel: 'y', oneOf: ['-'] }\n            ],\n            mark: 'triangle-l',\n            size: { value: 25 },\n            xe: 'none'\n        },\n        {\n            description: 'gene right',\n            select: [\n                { 'channel': 'geneOrExon', oneOf: ['gene'] },\n                { 'channel': 'y', 'oneOf': ['+'] },\n            ],\n            mark: 'triangle-r',\n            size: { value: 25 },\n            'x': { 'bind': 'xe' },\n            'xe': 'none'\n        },\n        {\n            description: 'gene range line',\n            select: [\n                { channel: 'geneOrExon', oneOf: ['gene'] },\n            ],\n            mark: 'line',\n            color: { value: 'gray' },\n            size: { value: 2 },\n            style: {\n                dashed: '3, 3'\n            }\n        },\n        {\n            description: 'gene name',\n            mark: 'text',\n            select: [\n                { channel: 'geneOrExon', oneOf: ['gene'] }\n            ],\n            color: { value: 'black' },\n            opacity: { value: 1 },\n            size: { value: 18 },\n            style: {\n                dy: -20\n            }\n        }\n    ]\n}","import { MarkGlyph } from \"../../../gemini.schema\"\n\nexport const GLYPH_CYTOGENETIC_BAND: MarkGlyph = {\n    \"type\": 'compositeMark',\n    \"name\": \"cytogenetic-band\",\n    \"requiredChannels\": [\n        \"x\", \"xe\", // start, end\n        \"y\", // chr\n        'color', // strain\n        'text', // band\n        'stain' // gneg, gpos, gvar, or acen\n    ],\n    \"elements\": [\n        {\n            \"description\": \"symbols\",\n            \"select\": [{ channel: 'stain', oneOf: ['gneg', 'gpos', 'gvar'] }],\n            \"mark\": \"rect\",\n            \"size\": { \"value\": 25 },\n            style: {\n                stroke: 'black',\n                strokeWidth: 1\n            }\n        },\n        {\n            \"description\": \"acen\",\n            \"select\": [{ channel: 'text', oneOf: ['11', '11.1'] }],\n            \"mark\": { bind: 'text', domain: ['11', '11.1'], range: ['triangle-l', 'triangle-r'] },\n            'color': { value: '#B40101' },\n            \"size\": { \"value\": 25 },\n            style: {\n                stroke: 'black',\n                strokeWidth: 1\n            }\n        },\n        {\n            mark: 'text',\n            select: [{ channel: 'color', oneOf: ['100', '75', '50'] }],\n            color: { value: 'black' },\n            size: { value: 10 },\n            style: {\n                dy: -20\n            }\n        }\n    ]\n}","import Ajv from 'ajv'\nimport uuid from \"uuid\"\nimport { GeminiSpec, Mark, IsNotEmptyTrack, IsMarkDeep } from '../gemini.schema'\nimport { GLYPH_LOCAL_PRESET_TYPES, GLYPH_PRESETS } from \"../test/gemini/glyph\"\n\nexport function replaceGlyphs(spec: GeminiSpec): GeminiSpec {\n    for (let i = 0; i < spec.tracks.length; i++) {\n        const track = spec.tracks[i]\n        if (IsNotEmptyTrack(track) && IsMarkDeep(track.mark)) {\n            const predefinedGlyph = track.mark.type\n            if (GLYPH_LOCAL_PRESET_TYPES.includes(predefinedGlyph as any /* TODO */)) {\n                track.mark = GLYPH_PRESETS.find(d => d.name === predefinedGlyph)?.mark as Mark\n            }\n        }\n    }\n    return spec\n}\n\nexport function generateReadableTrackUid(pre: string | undefined, n: number) {\n    // TODO: Add track type\n\n    // This is to properly update higlass upon editor changes. Ultimately, remove this.\n    // (Refer to https://github.com/sehilyi/gemini/issues/7)\n    const id = uuid.v1()\n    if (pre) return `${pre}-track-${n}-(${id})`\n    else return `track-${n}-${id}`\n}\n\nexport function validTilesetUrl(url: string) {\n    if (\n        !url.includes(\"tileset_info/?d=\")\n        ||\n        (!url.includes(\"https:\") && !url.includes(\"http:\"))\n    ) {\n        return false\n    }\n    return true\n}\n\nexport function parseServerAndTilesetUidFromUrl(url: string) {\n    if (\n        !url.includes(\"tileset_info/?d=\")\n        ||\n        (!url.includes(\"https:\") && !url.includes(\"http:\"))\n    ) {\n        // TODO: Add RE to validate the format.\n        console.warn(\"Data url format is incorrect:\" + url)\n        return { server: undefined, tilesetUid: undefined }\n    }\n\n\n    const server = url.split(\"tileset_info/?d=\")[0]\n    const tilesetUid = url.split(\"tileset_info/?d=\")[1]\n    return { server, tilesetUid }\n}\n\nexport function validateHG(hg: any): boolean {\n\n    const validate = new Ajv({ extendRefs: true }).compile({ /*  */ })\n    const valid = validate(hg)\n\n    if (validate.errors) {\n        console.warn(JSON.stringify(validate.errors, null, 2))\n    }\n\n    // TODO: check types such as default values and locationLocks\n\n    return valid as boolean\n}","// Refer to the following url for dealing with defaults:\n// https://github.com/vega/vega-lite/blob/23fe2b9c6a82551f321ccab751370ca48ae002c9/src/channeldef.ts#L961\n\nimport { GLYPH_LOCAL_PRESET_TYPE, GLYPH_HIGLASS_PRESET_TYPE } from './test/gemini/glyph'\nimport { validTilesetUrl } from './utils'\n\nexport interface GeminiSpec {\n    references?: string[]\n    description?: string\n    layout?: Layout\n    tracks: (Track | GenericType<Channel> | EmptyTrack)[] // TODO: `Track` does not mean anything here because of `GenericType`\n}\n\nexport interface Layout {\n    type: \"linear\" | \"circular\"\n    direction: \"vertical\" | \"horizontal\"\n    wrap?: number\n}\n\nexport interface GenericType<T> {\n    [k: string]: T\n}\n\n/**\n * Tracks\n */\nexport interface DataDeep { url: string, type: 'tileset' | 'csv' }\nexport interface EmptyTrack { }\nexport interface Track {\n    // primitives\n    data: DataDeep | Datum[]\n    mark: Mark\n    // zoom technique\n    zoomOutTechnique?: ZoomOutTechnique\n    // coordinates\n    x?: Channel\n    y?: Channel\n    xe?: Channel\n    ye?: Channel\n    // coordinates for link\n    x1?: Channel\n    y1?: Channel\n    x1e?: Channel\n    y1e?: Channel\n    // separation\n    row?: Channel\n    // others\n    color?: Channel\n    opacity?: Channel\n    size?: Channel\n    text?: Channel\n    w?: Channel\n    h?: Channel\n    // styles\n    width?: number\n    height?: number\n    style?: TrackStyle\n}\n\nexport interface TrackStyle {\n    background?: string\n    stroke?: string\n    strokeWidth?: number\n}\n\n/**\n * Data\n */\nexport interface Datum {\n    [k: string]: number | string\n}\n\n/**\n * Zoom technique (How should we show visualization based on different zoom level?)\n */\nexport interface ZoomOutTechnique {\n    // TODO: separate this interface by type, e.g., { type: 'aggregate', aggFunction: 'max' | ... }\n    type: 'auto' | 'none' | 'aggregate' | 'filter' | 'alt-representation'\n    // zoomLevel?: number // TODO: what meaning to contain?\n    aggFunction?: 'max' | 'min' | 'mean' | 'count' | 'sum'\n    importance?: string // field name\n    spec?: Partial<Track>\n}\n\n\n/**\n * Channel\n */\nexport const ChannelTypes = {\n    // coordinates\n    x: 'x',\n    y: 'y',\n    xe: 'xe',\n    ye: 'ye',\n    // coordinates for link\n    x1: 'x1',\n    y1: 'y1',\n    x1e: 'x1e',\n    y1e: 'y1e',\n    // others\n    color: 'color',\n    opacity: 'opacity',\n    size: 'size',\n    text: 'text',\n    w: 'w'\n} as const\n\nexport type ChannelType = keyof typeof ChannelTypes | string\n\nexport type Channel = ChannelDeep | ChannelValue\n\nexport interface ChannelDeep {\n    field?: string\n    type?: 'genomic' | 'nominal' | 'quantitative'\n    aggregate?: Aggregate\n    domain?: Domain\n    range?: Range\n    axis?: boolean\n}\n\nexport interface ChannelValue {\n    value: number | string\n}\n\nexport type Domain = string[] | number[] | DomainInterval | DomainChrInterval | DomainChr | DomainGene\nexport type Range = string[] | number[]\nexport interface DomainChr {\n    // For showing a certain chromosome\n    chromosome: string\n}\nexport interface DomainChrInterval {\n    // For showing a certain interval in a chromosome\n    chromosome: string\n    interval: [number, number]\n}\nexport interface DomainInterval {\n    // For showing a certain interval in intire chromosomes\n    interval: [number, number] // This is consistent to HiGlass's initXDomain and initYDomain.\n}\nexport interface DomainGene {\n    // For showing genes\n    // TODO: Not supported yet\n    gene: string | [string, string]\n}\n\nexport type Aggregate = 'max' | 'min' | 'mean'\n\n/**\n * Mark\n */\nexport type Mark = MarkType | MarkDeep\n\nexport type MarkType =\n    | 'bar'\n    | 'point'\n    | 'line'\n    | 'link-between'\n    | 'link-within' // uses either x and x1 or y and y1\n    | 'rect'\n    | 'text'\n    | 'rule'\n    | 'triangle-l'\n    | 'triangle-r'\n    | 'dummy'\n\n/**\n * Glyph\n */\nexport type MarkDeep = MarkGlyphPreset | MarkGlyph | MarkWithStyle\n\nexport interface MarkWithStyle {\n    type: MarkType\n    curvature?: 'straight' | 'stepwise' | 'curved'\n}\n\nexport interface MarkGlyphPreset {\n    type: GLYPH_LOCAL_PRESET_TYPE | GLYPH_HIGLASS_PRESET_TYPE\n    server: string // TODO: Not supported yet\n}\n\nexport interface MarkGlyph {\n    type: 'compositeMark'\n    name: string\n    referenceColumn?: string // reference column for selecting data tuples for each glyph\n    requiredChannels: ChannelType[] // channels that must be assigned // TODO: What about optional channels?\n    elements: GlyphElement[]\n}\n\nexport interface GlyphElement {\n    // primitives\n    description?: string\n    select?: { channel: ChannelType, oneOf: string[] }[]\n    mark: MarkType | MarkBind\n    // coordinates\n    x?: ChannelBind | ChannelValue | 'none'\n    y?: ChannelBind | ChannelValue | 'none'\n    xe?: ChannelBind | ChannelValue | 'none'\n    ye?: ChannelBind | ChannelValue | 'none'\n    // coordinates for link\n    x1?: ChannelBind | ChannelValue | 'none'\n    y1?: ChannelBind | ChannelValue | 'none'\n    x1e?: ChannelBind | ChannelValue | 'none'\n    y1e?: ChannelBind | ChannelValue | 'none'\n    // others\n    color?: ChannelBind | ChannelValue | 'none'\n    size?: ChannelBind | ChannelValue | 'none'\n    w?: ChannelBind | ChannelValue | 'none'\n    opacity?: ChannelBind | ChannelValue | 'none'\n    text?: ChannelBind | ChannelValue | 'none'\n    style?: MarkStyle\n}\n\nexport interface MarkStyle {\n    dashed?: string\n    dy?: number\n    stroke?: string\n    strokeWidth?: number\n    background?: string\n}\n\nexport interface MarkBind {\n    bind: string\n    domain: string[]\n    range: MarkType[]\n}\n\nexport interface ChannelBind {\n    bind: ChannelType\n    aggregate?: Aggregate\n}\n\nexport interface AnyGlyphChannels {\n    // Allow defining any kinds of chennels for binding data in Glyph\n    [key: string]: ChannelBind | ChannelValue\n}\n\n/**\n * Consistency\n */\ninterface Consistency {\n    /**\n     * `true` and `false` correspond to 'shared' and 'independent', respectively.\n     */\n    // List of `uniqueName` of `view` or `track` or indexes appear in the specification.\n    targets: string[] | number[]\n    // Default: The first element of `targets`.\n    reference?: string\n    color?: 'shared' | 'independent' | 'distinct' | true | false\n    x?: 'shared' | 'independent' | true | false\n    y?: 'shared' | 'independent' | true | false\n    zoomScale?: 'shared' | 'independent' | true | false\n    zoomCenter?: 'shared' | 'independent' | true | false\n}\n\n/**\n * Type Checks\n */\nexport function IsDataDeep(data:\n    | DataDeep\n    | Datum[]\n    /* remove the two types below */\n    | ChannelDeep\n    | ChannelValue\n): data is DataDeep {\n    return typeof data === 'object'\n}\n\nexport function IsDomainFlat(domain: Domain): domain is string[] | number[] {\n    return Array.isArray(domain)\n}\n\nexport function IsDomainChr(domain: Domain): domain is DomainChr {\n    return 'chromosome' in domain && !('interval' in domain)\n}\n\nexport function IsDomainInterval(domain: Domain): domain is DomainInterval {\n    return !('chromosome' in domain) && 'interval' in domain\n}\n\nexport function IsDomainChrInterval(domain: Domain): domain is DomainChrInterval {\n    return 'chromosome' in domain && 'interval' in domain\n}\n\nexport function IsDomainGene(domain: Domain): domain is DomainGene {\n    return 'gene' in domain\n}\n\nexport function IsNotEmptyTrack(\n    track:\n        | Track\n        | GenericType<Channel>\n        | EmptyTrack\n): track is Track | GenericType<Channel> {\n    return track !== {}\n}\n\nexport function IsTrackStyle(track: TrackStyle | undefined): track is TrackStyle {\n    return track !== undefined\n}\n\nexport function IsShallowMark(mark: any /* TODO */): mark is MarkType {\n    return typeof mark !== 'object'\n}\n\nexport function IsMarkDeep(mark: any /* TODO */): mark is MarkDeep {\n    return typeof mark === 'object'\n}\n\nexport function IsGlyphMark(mark: any /* TODO */): mark is MarkGlyph {\n    return typeof mark === 'object' && mark.type === 'compositeMark'\n}\n\nexport function IsHiGlassTrack(track: Track | GenericType<Channel>) {\n    return (\n        (\n            typeof track.mark === 'object' &&\n            IsGlyphMark(track.mark) &&\n            track.mark.type !== 'compositeMark'\n        ) ||\n        (IsDataDeep(track.data) && validTilesetUrl(track.data.url))\n    )\n}\n\nexport function IsChannelValue(\n    channel:\n        | ChannelDeep\n        | ChannelValue\n        | ChannelBind\n        | undefined\n        | 'none'\n): channel is ChannelValue {\n    return channel !== null && typeof channel === 'object' && 'value' in channel\n}\n\nexport function IsChannelBind(\n    channel:\n        | ChannelDeep\n        | ChannelValue\n        | ChannelBind\n        | undefined\n        | 'none'\n): channel is ChannelBind {\n    return channel !== null && typeof channel === 'object' && 'bind' in channel\n}\n\nexport function IsChannelDeep(\n    channel:\n        | ChannelDeep\n        | ChannelValue\n        | undefined\n): channel is ChannelDeep {\n    return typeof channel === 'object' && !('value' in channel)\n}","import { GeminiSpec } from '../../gemini.schema'\n\nconst LOCAL_MULTIVEC = 'http://localhost:8001/api/v1/tileset_info/?d=XX4dPR0dSCGzD2n-xtlhbA'\n\nexport const GEMINI_TRACK_EXAMPLE: GeminiSpec = {\n  tracks: [{\n    data: {\n      url: LOCAL_MULTIVEC, //'https://resgen.io/api/v1/tileset_info/?d=RTGsPv37TB2aKk9ujTIu6Q', \n      type: 'tileset'\n    },\n    zoomOutTechnique: { type: 'auto' },\n    mark: 'bar',\n    x: { field: '__G__', type: 'genomic', domain: { chromosome: '1', interval: [3000000, 3000500] } },\n    x1: { axis: true },\n    y: { field: '__Q__', type: 'quantitative' },\n    color: {\n      field: '__N__',\n      type: 'nominal',\n      domain: [\n        'A', 'T', 'G', 'C', 'N', 'other'\n      ],\n      range: [\n        \"#007FFF\",\n        \"#e8e500\",\n        \"#008000\",\n        \"#FF0038\",\n        \"#800080\",\n        \"#DCDCDC\",\n      ]\n    },\n    width: 1000,\n    height: 180,\n  }]\n}\n\nexport const GEMINI_TRACK_EXAMPLE2: GeminiSpec = {\n  tracks: [{\n    data: {\n      url: LOCAL_MULTIVEC, //'https://resgen.io/api/v1/tileset_info/?d=RTGsPv37TB2aKk9ujTIu6Q', \n      type: 'tileset'\n    },\n    zoomOutTechnique: {\n      type: 'alt-representation',\n      spec: {\n        row: { field: '__N__', type: 'nominal' }\n      }\n    },\n    mark: 'bar',\n    x: { field: '__G__', type: 'genomic', domain: { chromosome: '1', interval: [3000000, 3000500] } },\n    x1: { axis: true },\n    y: { field: '__Q__', type: 'quantitative' },\n    color: {\n      field: '__N__',\n      type: 'nominal',\n      domain: [\n        'A', 'T', 'G', 'C', 'N', 'other'\n      ],\n      range: [\n        \"#007FFF\",\n        \"#e8e500\",\n        \"#008000\",\n        \"#FF0038\",\n        \"#800080\",\n        \"#DCDCDC\",\n      ]\n    },\n    width: 1000,\n    height: 180,\n  }]\n}\n\nexport const GEMINI_TRACK_EXAMPLE3: GeminiSpec = {\n  tracks: [{\n    data: {\n      url: LOCAL_MULTIVEC, //'https://resgen.io/api/v1/tileset_info/?d=RTGsPv37TB2aKk9ujTIu6Q', \n      type: 'tileset'\n    },\n    zoomOutTechnique: {\n      type: 'alt-representation',\n      spec: {\n        mark: 'line'\n      }\n    },\n    mark: 'bar',\n    x: { field: '__G__', type: 'genomic', domain: { chromosome: '1', interval: [3000000, 3000500] } },\n    x1: { axis: true },\n    y: { field: '__Q__', type: 'quantitative' },\n    color: {\n      field: '__N__',\n      type: 'nominal',\n      domain: [\n        'A', 'T', 'G', 'C', 'N', 'other'\n      ],\n      range: [\n        \"#007FFF\",\n        \"#e8e500\",\n        \"#008000\",\n        \"#FF0038\",\n        \"#800080\",\n        \"#DCDCDC\",\n      ]\n    },\n    width: 1000,\n    height: 180,\n  }]\n}\n\nexport const LAYOUT_EXAMPLE_LINK: GeminiSpec = {\n  tracks: [\n    {\n      data: { url: 'https://raw.githubusercontent.com/sehilyi/gemini-datasets/master/data/potint-to-point-relation.csv', type: 'csv' },\n      mark: 'link-between',\n      x: { field: 'from', type: 'nominal' },\n      y: { field: 'to', type: 'nominal' },\n      width: 50,\n      height: 50,\n    },\n    {\n      data: { url: 'https://raw.githubusercontent.com/sehilyi/gemini-datasets/master/data/potint-to-point-relation.csv', type: 'csv' },\n      mark: 'link-between',\n      x1: { field: 'from', type: 'nominal' },\n      y: { field: 'to', type: 'nominal' },\n      width: 50,\n      height: 50,\n    },\n    {\n      data: {\n        url:\n          'https://raw.githubusercontent.com/sehilyi/gemini-datasets/master/data/potint-to-point-relation.csv',\n        type: 'csv',\n      },\n      mark: 'link-between',\n      x1: { field: 'from', type: 'nominal' },\n      y1: { field: 'to', type: 'nominal' },\n      width: 50,\n      height: 50,\n    },\n    {\n      data: {\n        url:\n          'https://raw.githubusercontent.com/sehilyi/gemini-datasets/master/data/potint-to-point-relation.csv',\n        type: 'csv',\n      },\n      mark: 'link-between',\n      x: { field: 'from', type: 'nominal' },\n      y1: { field: 'to', type: 'nominal' },\n      width: 50,\n      height: 50,\n    },\n    {\n      data: {\n        url:\n          'https://raw.githubusercontent.com/sehilyi/gemini-datasets/master/data/potint-to-point-relation.csv',\n        type: 'csv',\n      },\n      mark: 'link-between',\n      x: { field: 'from', type: 'nominal' },\n      x1: { field: 'to', type: 'nominal' },\n      width: 50,\n      height: 50,\n    },\n    {\n      data: {\n        url:\n          'https://raw.githubusercontent.com/sehilyi/gemini-datasets/master/data/potint-to-point-relation.csv',\n        type: 'csv',\n      },\n      mark: 'link-between',\n      y: { field: 'from', type: 'nominal' },\n      y1: { field: 'to', type: 'nominal' },\n      width: 50,\n      height: 50,\n    },\n  ],\n}\n\nexport const LAYOUT_EXAMPLE_COMBO: GeminiSpec = {\n  references: [\n    'http://genocat.tools/tools/combo.html',\n    'http://genocat.tools/tools/gbrowse_syn.html',\n    'http://genocat.tools/tools/ggbio.html',\n    'http://genocat.tools/tools/give.html',\n    'http://genocat.tools/tools/variant_view.html',\n  ],\n  tracks: [\n    {\n      data: { url: 'dummy', type: 'csv' },\n      mark: 'dummy',\n      width: 800,\n      height: 50,\n    },\n    {\n      data: {\n        url:\n          'https://raw.githubusercontent.com/sehilyi/gemini-datasets/master/data/potint-to-point-relation.csv',\n        type: 'csv',\n      },\n      mark: 'link-between',\n      x1: { field: 'from', type: 'nominal' },\n      x: { field: 'to', type: 'nominal' },\n      width: 800,\n      height: 50,\n    },\n    {\n      data: { url: 'dummy', type: 'csv' },\n      mark: 'dummy',\n      width: 800,\n      height: 50,\n    },\n  ],\n}\n\nexport const LAYOUT_EXAMPLE_COMBO_HORIZONTAL: GeminiSpec = {\n  layout: { type: 'linear', direction: 'horizontal' },\n  tracks: [\n    {\n      data: { url: 'dummy', type: 'csv' },\n      mark: 'dummy',\n      width: 60,\n      height: 500,\n    },\n    {\n      data: {\n        url:\n          'https://raw.githubusercontent.com/sehilyi/gemini-datasets/master/data/potint-to-point-relation.csv',\n        type: 'csv',\n      },\n      mark: 'link-between',\n      y: { field: 'from', type: 'nominal' },\n      y1: { field: 'to', type: 'nominal' },\n      width: 60,\n      height: 500,\n    },\n    {\n      data: { url: 'dummy', type: 'csv' },\n      mark: 'dummy',\n      width: 60,\n      height: 500,\n    },\n  ],\n}\n\nexport const LAYOUT_EXAMPLE_COMBO_BAND: GeminiSpec = {\n  references: [\n    'http://genocat.tools/tools/combo.html',\n    'http://genocat.tools/tools/gbrowse_syn.html',\n    'http://genocat.tools/tools/ggbio.html',\n    'http://genocat.tools/tools/give.html',\n    'http://genocat.tools/tools/variant_view.html',\n  ],\n  tracks: [\n    {\n      data: {\n        url: 'https://resgen.io/api/v1/tileset_info/?d=a-iBpdh3Q_uO2FLCWKpOOw',\n        type: 'tileset',\n      },\n      mark: { type: '1d-heatmap-higlass', server: 'gemini-v1' },\n      x: { type: 'genomic', domain: { chromosome: '2' } },\n      width: 800,\n      height: 60,\n    },\n    {\n      data: {\n        url: 'https://resgen.io/api/v1/tileset_info/?d=a-iBpdh3Q_uO2FLCWKpOOw',\n        type: 'tileset',\n      },\n      mark: { type: 'line-higlass', server: 'gemini-v1' },\n      x: { type: 'genomic', domain: { chromosome: '2' } },\n      width: 800,\n      height: 90,\n    },\n    {\n      data: {\n        url: 'https://higlass.io/api/v1/tileset_info/?d=OHJakQICQD6gTD7skx4EWA',\n        type: 'tileset',\n      },\n      mark: {\n        type: 'gene-annotation-higlass',\n        server: 'gemini-v1',\n      },\n      x: { type: 'genomic', axis: true, domain: { chromosome: '2' } },\n      width: 800,\n      height: 140,\n    },\n    {\n      data: {\n        url:\n          'https://raw.githubusercontent.com/sehilyi/gemini-datasets/master/data/range-to-range-relation.csv',\n        type: 'csv',\n      },\n      mark: 'link-between',\n      x1: { field: 'from' },\n      x1e: { field: 'from1' },\n      x: { field: 'to' },\n      xe: { field: 'to1' },\n      width: 800,\n      height: 260,\n      stroke: { value: 'none' },\n    },\n    {\n      data: {\n        url: 'https://higlass.io/api/v1/tileset_info/?d=OHJakQICQD6gTD7skx4EWA',\n        type: 'tileset',\n      },\n      mark: {\n        type: 'gene-annotation-higlass',\n        server: 'gemini-v1',\n      },\n      x: { type: 'genomic', domain: { chromosome: '3' } },\n      x1: { axis: true },\n      width: 800,\n      height: 140,\n    },\n    {\n      data: {\n        url: 'https://resgen.io/api/v1/tileset_info/?d=a-iBpdh3Q_uO2FLCWKpOOw',\n        type: 'tileset',\n      },\n      mark: { type: 'bar-higlass', server: 'gemini-v1' },\n      x: { type: 'genomic', domain: { chromosome: '4' } },\n      width: 800,\n      height: 80,\n    },\n    {\n      data: {\n        url: 'https://resgen.io/api/v1/tileset_info/?d=a-iBpdh3Q_uO2FLCWKpOOw',\n        type: 'tileset',\n      },\n      mark: { type: 'point-higlass', server: 'gemini-v1' },\n      x: { type: 'genomic' },\n      width: 800,\n      height: 80,\n    },\n  ],\n}\n\nexport const LAYOUT_EXAMPLE_STACKED_MULTI_TRACKS: GeminiSpec = {\n  layout: { type: 'linear', direction: 'horizontal', wrap: 2 },\n  tracks: [\n    {\n      data: { url: 'dummy', type: 'csv' },\n      mark: 'dummy',\n      width: 350,\n      height: 30,\n      style: { background: '#FAF9F7' },\n    },\n    {\n      data: { url: 'dummy', type: 'csv' },\n      mark: 'dummy',\n      width: 350,\n      height: 30,\n    },\n    {\n      data: { url: 'dummy', type: 'csv' },\n      mark: 'dummy',\n      width: 350,\n      height: 30,\n      style: { background: '#FAF9F7' },\n    },\n    {\n      data: { url: 'dummy', type: 'csv' },\n      mark: 'dummy',\n      width: 350,\n      height: 30,\n    },\n    {\n      data: { url: 'dummy', type: 'csv' },\n      mark: 'dummy',\n      width: 350,\n      height: 30,\n      style: { background: '#FAF9F7' },\n    },\n    {\n      data: { url: 'dummy', type: 'csv' },\n      mark: 'dummy',\n      width: 350,\n      height: 30,\n    },\n  ],\n}\n\nexport const LAYOUT_EXAMPLE_STACKED_MULTI_TRACKS_CIRCULAR: GeminiSpec = {\n  layout: { type: 'circular', direction: 'horizontal', wrap: 2 },\n  tracks: [\n    {\n      data: { url: 'dummy', type: 'csv' },\n      mark: 'dummy',\n      width: 500,\n      height: 30,\n      style: { background: '#FAF9F7' },\n    },\n    {\n      data: { url: 'dummy', type: 'csv' },\n      mark: 'dummy',\n      width: 500,\n      height: 30,\n    },\n    {\n      data: { url: 'dummy', type: 'csv' },\n      mark: 'dummy',\n      width: 500,\n      height: 30,\n      style: { background: '#FAF9F7' },\n    },\n    {\n      data: { url: 'dummy', type: 'csv' },\n      mark: 'dummy',\n      width: 500,\n      height: 30,\n    },\n    {\n      data: { url: 'dummy', type: 'csv' },\n      mark: 'dummy',\n      width: 500,\n      height: 30,\n      style: { background: '#FAF9F7' },\n    },\n    {\n      data: { url: 'dummy', type: 'csv' },\n      mark: 'dummy',\n      width: 500,\n      height: 30,\n    },\n  ],\n}\n","import { GeminiSpec } from \"../lib/gemini.schema\"\nimport {\n    GENE_ANNOTATION_PLOT,\n    GENE_ANNOTATION_PLOT_SIMPLE,\n    CYTOGENETIC_BAND\n} from \"../lib/test/gemini/glyph-examples\"\nimport {\n    LAYOUT_EXAMPLE_COMBO_HORIZONTAL,\n    LAYOUT_EXAMPLE_LINK,\n    LAYOUT_EXAMPLE_COMBO,\n    LAYOUT_EXAMPLE_COMBO_BAND,\n    LAYOUT_EXAMPLE_STACKED_MULTI_TRACKS,\n    LAYOUT_EXAMPLE_STACKED_MULTI_TRACKS_CIRCULAR,\n    GEMINI_TRACK_EXAMPLE,\n    GEMINI_TRACK_EXAMPLE2,\n    GEMINI_TRACK_EXAMPLE3\n} from \"../lib/test/gemini/layout-examples\"\n\ninterface Demo {\n    name: string,\n    spec: GeminiSpec,\n    glyphWidth: number,\n    glyphHeight: number\n}\n\nexport const demos: ReadonlyArray<Demo> = [\n    {\n        name: \"Gene Annotation Plot (Simple)\",\n        spec: GENE_ANNOTATION_PLOT_SIMPLE,\n        glyphWidth: 300,\n        glyphHeight: 150\n    },\n    {\n        name: \"Gene Annotation Plot\",\n        spec: GENE_ANNOTATION_PLOT,\n        glyphWidth: 600,\n        glyphHeight: 150\n    },\n    {\n        name: \"Cytogenetic Band\",\n        spec: CYTOGENETIC_BAND,\n        glyphWidth: 900,\n        glyphHeight: 150\n    },\n    {\n        name: \"Six Different Between-Links\",\n        spec: LAYOUT_EXAMPLE_LINK,\n        glyphWidth: 0,\n        glyphHeight: 0\n    },\n    {\n        name: \"Between-Links (Combo)\",\n        spec: LAYOUT_EXAMPLE_COMBO,\n        glyphWidth: 0,\n        glyphHeight: 0\n    },\n    {\n        name: \"Between-Links (Combo, Horizontal)\",\n        spec: LAYOUT_EXAMPLE_COMBO_HORIZONTAL,\n        glyphWidth: 0,\n        glyphHeight: 0\n    },\n    {\n        name: \"Stacked Multiple Tracks\",\n        spec: LAYOUT_EXAMPLE_STACKED_MULTI_TRACKS,\n        glyphWidth: 0,\n        glyphHeight: 0\n    },\n    {\n        name: \"Stacked Multiple Tracks (Circular)\",\n        spec: LAYOUT_EXAMPLE_STACKED_MULTI_TRACKS_CIRCULAR,\n        glyphWidth: 0,\n        glyphHeight: 0\n    },\n    {\n        name: \"Between-Bands (HiGlass Tracks)\",\n        spec: LAYOUT_EXAMPLE_COMBO_BAND,\n        glyphWidth: 0,\n        glyphHeight: 0\n    },\n    {\n        name: 'HiGlass Gemini Track (zoom out example 1)',\n        spec: GEMINI_TRACK_EXAMPLE,\n        glyphWidth: 0,\n        glyphHeight: 0\n    },\n    {\n        name: 'HiGlass Gemini Track (zoom out example 2)',\n        spec: GEMINI_TRACK_EXAMPLE2,\n        glyphWidth: 0,\n        glyphHeight: 0\n    },\n    {\n        name: 'HiGlass Gemini Track (zoom out example 3)',\n        spec: GEMINI_TRACK_EXAMPLE3,\n        glyphWidth: 0,\n        glyphHeight: 0\n    }\n] as const","import { GeminiSpec } from \"../../gemini.schema\"\n\nexport const GENE_ANNOTATION_PLOT_SIMPLE: GeminiSpec = {\n    tracks: [\n        {\n            data: { url: \"https://raw.githubusercontent.com/sehilyi/gemini-datasets/master/data/Homo_sapiens.GRCh38.92.glyph.csv\", type: 'csv' },\n            mark: { server: \"gemini.v1\", type: \"gene-annotation-simple\" },\n            x: { field: \"start\", type: \"genomic\" },\n            xe: { field: \"end\", type: \"genomic\" },\n            y: { field: \"strand\", type: \"nominal\" },\n            text: { field: \"gene_name\", type: \"nominal\" },\n            geneOrExon: { field: \"feature\", type: \"nominal\" },\n            color: { value: \"#D1D28D\" },\n            opacity: { value: 0.7 },\n        }\n    ]\n}\n\nexport const GENE_ANNOTATION_PLOT: GeminiSpec = {\n    tracks: [\n        {\n            data: { url: \"https://raw.githubusercontent.com/sehilyi/gemini-datasets/master/data/Homo_sapiens.GRCh38.92.glyph.csv\", type: 'csv' },\n            mark: { server: \"gemini.v1\", type: \"gene-annotation\" },\n            x: { field: \"start\", type: \"genomic\" },\n            xe: { field: \"end\", type: \"genomic\" },\n            y: { field: \"strand\", type: \"nominal\" },\n            text: { field: \"gene_name\", type: \"nominal\" },\n            color: { field: \"strand\", type: \"nominal\" },\n            exonVersion: { field: \"exon_version\", type: \"nominal\" },\n            geneOrExon: { field: \"feature\", type: \"nominal\" },\n            exonId: { field: \"exon_id\", type: \"nominal\" },\n            opacity: { value: 0.9 }\n        }\n    ]\n}\n\nexport const CYTOGENETIC_BAND: GeminiSpec = {\n    tracks: [\n        {\n            data: { url: 'https://raw.githubusercontent.com/sehilyi/gemini-datasets/master/data/chr1_cytogenetic_band.glyph.csv', type: 'csv' },\n            mark: { server: 'gemini.v1', type: 'cytogenetic-band' },\n            x: { field: 'Basepair_start', type: 'genomic' },\n            xe: { field: 'Basepair_stop', type: 'genomic' },\n            y: { field: 'Chr.', type: 'nominal' },\n            text: { field: 'Band', type: 'nominal' },\n            stain: { field: 'Stain', type: 'nominal' },\n            color: { field: 'Density', type: 'nominal', domain: ['', '25', '50', '75', '100'], range: ['white', '#D9D9D9', '#979797', '#636363', 'black'] }\n        }\n    ]\n}","import { Track, Channel, MarkType, GenericType, IsGlyphMark, IsChannelValue, ChannelTypes, ChannelBind, MarkGlyph, IsChannelDeep, ChannelDeep, Datum, ChannelType, GlyphElement, IsChannelBind, IsDomainFlat } from \"../gemini.schema\"\nimport { deepToLongElements } from \"../utils/spec-preprocess\"\nimport * as d3 from \"d3\"\nimport { BoundingBox } from \"../utils/bounding-box\"\n\nexport class TrackModel {\n    private track: Track | GenericType<Channel>\n    private channelToField: { [k: string]: string }\n    private domains: { [channel: string]: (string | number)[] }\n    private scales: { [channel: string]: d3.ScaleLinear<any, any> | d3.ScaleOrdinal<any, any> | d3.ScaleSequential<any> }\n    private ranges: { [channel: string]: number[] | string[] }\n    constructor(track: Track | GenericType<Channel>) {\n        this.track = track\n        this.domains = {}\n        this.channelToField = {}\n        this.scales = {}\n        this.ranges = {}\n\n        /**\n         * Validate\n         */\n        // TODO: Check if required channels are specified.\n        // ...\n\n        /**\n         * Default\n         */\n        if (IsGlyphMark(this.track.mark)) {\n            this.track.mark.elements = deepToLongElements(this.track.mark.elements)\n        }\n        // TODO: Add binds for not-specified channels.\n\n        /**\n         * Prepare Rendering\n         */\n        this.setDomains()\n    }\n    public getTrack() {\n        return this.track\n    }\n\n    public getElements() {\n        if (IsGlyphMark(this.track.mark)) {\n            return this.track.mark.elements\n        }\n        return []\n    }\n\n    public getFieldByChannel(field: string) {\n        return this.channelToField[field]\n    }\n\n    private setDomains() {\n        const data = this.track.data as Datum[]\n\n        if (IsGlyphMark(this.track.mark)) {\n            const { requiredChannels: required } = this.track.mark\n\n            // Add channel-to-domain mappings when `field` suggested.\n            required.forEach(c => {\n                const channel = (this.track as GenericType<Channel>)[c]\n                if (IsChannelDeep(channel)) {\n                    const { field } = channel\n\n                    if (!field) return\n\n                    this.channelToField[c] = field\n\n                    // Domains for x1 and y1 needs to be added to that of x and y, respectively.\n                    const targetChannel = c === 'xe' ? 'x' : c === 'ye' ? 'y' : c\n\n                    if (!this.domains[targetChannel]) {\n                        this.domains[targetChannel] = []\n                    }\n                    this.domains[targetChannel] = [\n                        ...this.domains[targetChannel],\n                        ...(channel.domain && IsDomainFlat(channel.domain)\n                            ? channel.domain : data.map(d => d[field]))\n                    ]\n                }\n            })\n            Object.keys(this.domains).forEach(c => {\n                const channel = (this.track as GenericType<Channel>)[c]\n                if (IsChannelDeep(channel)) {\n                    const { type } = channel\n                    this.domains[c] = type === \"nominal\"\n                        ? d3.set(this.domains[c]).values()\n                        : d3.extent(this.domains[c].map(d => +d)) as [number, number]\n                }\n            })\n        }\n    }\n\n    private setRanges(bb: BoundingBox) {\n        Object.keys(this.domains).forEach(c => {\n            const channel = (this.track as GenericType<Channel>)[c]\n            if (IsChannelDeep(channel)) {\n                if (c === 'x') {\n                    this.ranges['x'] = [bb.x, bb.x + bb.width]\n                } else if (c === 'y') {\n                    this.ranges['y'] = [bb.y, bb.y + bb.height]\n                } else if (c === 'color') {\n                    this.ranges['color'] = channel.range ? channel.range : d3.schemeTableau10 as string[]\n                } else {\n                    // TODO: Support specifying `range` and `domain`.\n                    // ...\n                }\n            }\n        })\n    }\n\n    public setScales(boundingBox: BoundingBox) {\n        this.setRanges(boundingBox)\n        Object.keys(this.domains).forEach(c => {\n            const channel = (this.track as GenericType<Channel>)[c]\n            if (IsChannelDeep(channel)) {\n                const { type } = channel\n                if (this.ranges[c]) {\n                    // TODO: Simplify the below\n                    this.scales[c] = c === 'color' && type === 'nominal'\n                        ? d3.scaleOrdinal()\n                            .domain(this.domains[c] as string[])\n                            .range(this.ranges[c])\n                        : c === 'color' && type === 'quantitative'\n                            ? d3.scaleSequential(d3.interpolateBrBG)\n                                .domain(this.domains[c] as [number, number])\n                            : type === \"nominal\"\n                                ? d3.scaleOrdinal()\n                                    .domain(this.domains[c] as string[])\n                                    .range(this.ranges[c])\n                                : d3.scaleLinear()\n                                    .domain(this.domains[c] as [number, number])\n                                    .range(this.ranges[c] as [number, number])\n                }\n            }\n        })\n    }\n\n    public getEncoding(\n        element: GlyphElement /* TODO: Remove this */,\n        c: keyof typeof ChannelTypes,\n        datum: Datum,\n        mark?: MarkType\n    ): any {\n        // TODO: Move out\n        const DEFAULT_ENCODING: { [k: string]: number | string } = {\n            'opacity': 1,\n            'size': 10,\n            'color': 'black',\n            'text': ''\n        }\n        ////\n\n        const scaleChannel = c === 'xe' ? 'x' : c === 'ye' ? 'y' : c\n\n        if (IsChannelValue(element[c])) {\n            switch (c) {\n                case 'size':\n                case 'opacity':\n                case 'color':\n                case 'text':\n                    return (element[c] as any).value\n            }\n        }\n        else if (IsChannelValue(this.track[c])) {\n            switch (c) {\n                case 'size':\n                case 'opacity':\n                case 'color':\n                case 'text':\n                    return (this.track[c] as any).value\n            }\n        }\n        else if (this.scales[scaleChannel]) {\n            const field = IsChannelBind(element[c])\n                ? this.getFieldByChannel((element[c] as ChannelBind).bind)\n                : this.getFieldByChannel(c)\n            return this.scales[scaleChannel](datum[field] as any)\n        } else if (c === 'text') {\n            const field = IsChannelBind(element.text)\n                ? this.getFieldByChannel(element.text.bind)\n                : IsChannelDeep(this.track.text)\n                    ? this.track.text.field\n                    : undefined\n            if (field) {\n                return datum[field]\n            }\n        }\n        else if (c === 'w') {\n            if (this.scales['x'] && IsChannelDeep(this.track.x) && IsChannelDeep(this.track.xe) && element.x !== 'none' && element.xe !== 'none') {\n                const altSize = Math.abs((datum[this.getFieldByChannel('xe')] as number) - (datum[this.getFieldByChannel('x')] as number))\n                return this.scales['x'](altSize)\n            } else {\n                return this.getEncoding(element, 'size', datum)\n            }\n        }\n        else {\n            // If not specified, use default value.\n            return DEFAULT_ENCODING[c]\n        }\n    }\n\n    public getScale(c: ChannelType | string) {\n        return this.scales[c]\n    }\n}","import { GlyphElement } from \"../gemini.schema\";\n\n/**\n * Domains and ranges in conditional marks are moved into `select` option for the compiling simplicity.\n * @param elements \n */\nexport function deepToLongElements(elements: GlyphElement[]) {\n    const longElements: GlyphElement[] = [];\n    elements.forEach(element => {\n        if (typeof element.mark === \"object\") {\n            const { bind } = element.mark;\n            for (let i = 0; i < element.mark.domain.length; i++) {\n                const domain = element.mark.domain[i];\n                const range = element.mark.range[i];\n                const select = element.select ? element.select : [];\n                longElements.push({\n                    ...element,\n                    mark: range,\n                    select: [\n                        ...select,\n                        { channel: bind, oneOf: [domain] }\n                    ]\n                });\n            }\n        } else {\n            longElements.push(element);\n        }\n    });\n    return longElements;\n}","import * as d3 from 'd3'\n\nexport function renderBackground(\n    svg: SVGGElement,\n    w: number,\n    h: number,\n    px: number,\n    py: number,\n    isGuideline: boolean = true\n) {\n    d3.select(svg)\n        .attr(\"width\", w)\n        .attr(\"height\", h);\n    const g = d3.select(svg).append(\"g\");\n    g.append(\"rect\")\n        .attr(\"width\", w)\n        .attr(\"height\", h)\n        .attr(\"stroke\", \"lightgray\")\n        .attr(\"fill\", \"white\");\n    if (!isGuideline) return;\n    g.append(\"line\")\n        .attr(\"x1\", 0)\n        .attr(\"x2\", w)\n        .attr(\"y1\", py)\n        .attr(\"y2\", py)\n        .attr(\"class\", \"preview-guideline\");\n    g.append(\"line\")\n        .attr(\"x1\", 0)\n        .attr(\"x2\", w)\n        .attr(\"y1\", h - py)\n        .attr(\"y2\", h - py)\n        .attr(\"class\", \"preview-guideline\");\n    g.append(\"line\")\n        .attr(\"x1\", px)\n        .attr(\"x2\", px)\n        .attr(\"y1\", 0)\n        .attr(\"y2\", h)\n        .attr(\"class\", \"preview-guideline\");\n    g.append(\"line\")\n        .attr(\"x1\", w - px)\n        .attr(\"x2\", w - px)\n        .attr(\"y1\", 0)\n        .attr(\"y2\", h)\n        .attr(\"class\", \"preview-guideline\");\n    g.append(\"line\")\n        .attr(\"x1\", 0)\n        .attr(\"x2\", w)\n        .attr(\"y1\", h / 2)\n        .attr(\"y2\", h / 2)\n        .attr(\"class\", \"preview-guideline\");\n    g.append(\"line\")\n        .attr(\"x1\", w / 2)\n        .attr(\"x2\", w / 2)\n        .attr(\"y1\", 0)\n        .attr(\"y2\", h)\n        .attr(\"class\", \"preview-guideline\");\n}","import { Track, GenericType, Channel } from \"../gemini.schema\"\nimport * as d3 from \"d3\"\nimport { renderGlyph } from \"./glyph\"\nimport { renderBackground } from \"./guidelines\"\n\nexport function renderGlyphPreview(\n    svg: SVGSVGElement,\n    track: Track | GenericType<Channel>,\n    width: number,\n    height: number\n) {\n    if (!svg || !track) return\n    d3.select(svg).selectAll(\"*\").remove()\n\n    // Styles\n    const WIDTH = width, HEIGHT = height, PADDING_X = 60, PADDING_Y = 30\n\n    // BG and Guidelines\n    renderBackground(svg, WIDTH, HEIGHT, PADDING_X, PADDING_Y)\n\n    const innerG = d3.select(svg).append(\"g\")\n        .attr(\"width\", WIDTH - PADDING_X * 2)\n        .attr(\"height\", HEIGHT - PADDING_Y * 2)\n        .attr(\"transform\", `translate(${PADDING_X},${PADDING_Y})`)\n\n    // TODO: Select a subset of data tuples for a single glyph.\n    // ...\n\n    // TODO: Should data be aggregated when specified? (e.g., x: {..., aggregate: \"mean\"})\n    // ...\n\n    renderGlyph(\n        innerG,\n        track,\n        { x: 0, width: WIDTH - PADDING_X * 2, y: 0, height: HEIGHT - PADDING_Y * 2 }\n    )\n}","import * as d3 from \"d3\";\nimport { Track, Datum, GenericType, Channel, IsGlyphMark } from \"../gemini.schema\";\nimport { transformData, FilterSpec } from \"../utils/data-process\";\nimport { TrackModel } from \"../models/track\";\nimport { BoundingBox } from \"../utils/bounding-box\";\n\nexport function renderGlyph(\n    g: d3.Selection<SVGGElement, any, any, any>,\n    track: Track | GenericType<Channel>,\n    bb: BoundingBox\n) {\n    const tm = new TrackModel(track);\n    tm.setScales({\n        ...bb,\n        // TODO: Cheating here!\n        y: bb.y + bb.height / 2.0\n    });\n\n    // checks\n    const data = track.data as Datum[];\n    if (!data) {\n        console.warn(\"No array of a JSON object suggested.\");\n        return;\n    }\n\n    if (!IsGlyphMark(track.mark)) {\n        console.warn(\"Glyph is not defined.\");\n        return;\n    }\n    /////////////\n\n    // TODO: Add title using `name`\n    // ...\n\n    // Render each element\n    tm.getElements().forEach(element => {\n        const { select, mark: markE, } = element;\n\n        // Select\n        const filters: FilterSpec[] = [];\n        select?.forEach(d => {\n            const { channel, oneOf } = d;\n            if (tm.getFieldByChannel(channel)) {\n                filters.push({ field: tm.getFieldByChannel(channel), oneOf });\n            }\n        });\n\n        // Render glyph\n        const transformed_data = transformData(data, filters);\n        // TODO: Aggregation\n        if (markE === \"line\") {\n            g.selectAll()\n                .data(transformed_data)\n                .enter()\n                .append('line')\n                .attr('x1', d => tm.getEncoding(element, 'x', d))\n                .attr('x2', d => tm.getEncoding(element, 'xe', d))\n                .attr('y1', d => tm.getEncoding(element, 'y', d))\n                .attr('y2', d => tm.getEncoding(element, 'y', d))\n                .attr('stroke', d => tm.getEncoding(element, 'color', d))\n                .attr('stroke-width', d => tm.getEncoding(element, 'size', d))\n                .attr('opacity', d => tm.getEncoding(element, 'opacity', d))\n                .style('stroke-dasharray', (element.style?.dashed ?? ''))\n        } else if (markE === 'point') {\n            g.selectAll('point')\n                .data(transformed_data)\n                .enter()\n                .append('circle')\n                .attr('fill', d => tm.getEncoding(element, 'color', d))\n                .attr('cx', d => tm.getEncoding(element, 'x', d))\n                .attr('cy', d => tm.getEncoding(element, 'x', d))\n                .attr('r', 15)\n                .attr('opacity', d => tm.getEncoding(element, 'opacity', d))\n        } else if (markE === \"rect\") {\n            g.selectAll()\n                .data(transformed_data)\n                .enter()\n                .append('rect')\n                .attr('x', d => tm.getEncoding(element, 'x', d))\n                .attr('y', d => tm.getEncoding(element, 'y', d) - tm.getEncoding(element, 'size', d) / 2.0)\n                .attr('width', d => tm.getEncoding(element, 'xe', d) - tm.getEncoding(element, 'x', d))\n                .attr('height', d => tm.getEncoding(element, 'size', d))\n                .attr('fill', d => tm.getEncoding(element, 'color', d))\n                .attr('opacity', d => tm.getEncoding(element, 'opacity', d))\n                .attr('stroke', element.style?.stroke ?? '')\n                .attr('stroke-width', element.style?.strokeWidth ?? '')\n        } else if (markE === 'text') {\n            g.selectAll()\n                .data(transformed_data)\n                .enter()\n                .append('text')\n                .text(d => tm.getEncoding(element, 'text', d))\n                .attr('x', d => (tm.getEncoding(element, 'x', d) + tm.getEncoding(element, 'xe', d)) / 2.0)\n                .attr('y', d => tm.getEncoding(element, 'y', d) + element.style?.dy)\n                .attr('fill', d => tm.getEncoding(element, 'color', d))\n                .attr('font-size', d => tm.getEncoding(element, 'size', d))\n                .attr('alignment-baseline', \"top\")\n                .attr('text-anchor', \"middle\")\n                .attr('opacity', d => tm.getEncoding(element, 'opacity', d))\n        } else if (markE === 'rule') {\n            g.selectAll('rule')\n                .data(transformed_data)\n                .enter()\n                .append('line')\n                .attr('x1', d => tm.getEncoding(element, 'x', d))\n                .attr('x2', d => tm.getEncoding(element, 'x', d))\n                .attr('y1', d => tm.getEncoding(element, 'x', d) - tm.getEncoding(element, 'size', d) / 2.0)\n                .attr('y2', d => tm.getEncoding(element, 'x', d) - tm.getEncoding(element, 'size', d) / 2.0)\n                .attr('stroke', d => tm.getEncoding(element, 'color', d))\n                .attr('stroke-width', 3)\n                .attr('opacity', d => tm.getEncoding(element, 'opacity', d))\n        } else if (markE === 'triangle-r') {\n            g.selectAll('trangle-r')\n                .data(transformed_data)\n                .enter()\n                .append('path')\n                .attr('d', d => {\n                    const h = tm.getEncoding(element, 'size', d);\n                    const w = tm.getEncoding(element, 'w', d);\n                    const x = tm.getEncoding(element, 'x', d);\n                    const y = tm.getEncoding(element, 'y', d);\n                    return `M${x + w} ${y}`\n                        + `L${x} ${y + h / 2.0}`\n                        + `L${x} ${y - h / 2.0} Z`;\n                })\n                .attr('fill', d => tm.getEncoding(element, 'color', d))\n                .attr('opacity', d => tm.getEncoding(element, 'opacity', d))\n                .attr('stroke', element.style?.stroke ?? '')\n                .attr('stroke-width', element.style?.strokeWidth ?? '')\n        } else if (markE === 'triangle-l') {\n            g.selectAll('trangle-l')\n                .data(transformed_data)\n                .enter()\n                .append('path')\n                .attr('d', d => {\n                    const h = tm.getEncoding(element, 'size', d);\n                    const w = tm.getEncoding(element, 'w', d);\n                    const x = tm.getEncoding(element, 'x', d);\n                    const y = tm.getEncoding(element, 'y', d);\n                    return `M${x} ${y}`\n                        + `L${x + w} ${y + h / 2.0}`\n                        + `L${x + w} ${y - h / 2.0} Z`;\n                })\n                .attr('fill', d => tm.getEncoding(element, 'color', d))\n                .attr('opacity', d => tm.getEncoding(element, 'opacity', d))\n                .attr('stroke', element.style?.stroke ?? '')\n                .attr('stroke-width', element.style?.strokeWidth ?? '')\n        }\n    });\n}","import { Datum } from \"../gemini.schema\";\n\nexport interface FilterSpec {\n    field: string;\n    oneOf: string[];\n}\n\nexport function transformData(data: Datum[], filters: FilterSpec[]) {\n    let filteredData = data.slice();\n    filters.forEach(f => {\n        filteredData = filteredData.filter(d => f.oneOf.indexOf(d[f.field] as string) !== -1);\n    });\n    return filteredData;\n}","export const CHROM_SIZE_HG19: { [k: string]: number } = {\n    chr1: 249250621,\n    chr2: 243199373,\n    chr3: 198022430,\n    chr4: 191154276,\n    chr5: 180915260,\n    chr6: 171115067,\n    chr7: 159138663,\n    chr8: 146364022,\n    chr9: 141213431,\n    chr10: 135534747,\n    chr11: 135006516,\n    chr12: 133851895,\n    chr13: 115169878,\n    chr14: 107349540,\n    chr15: 102531392,\n    chr16: 90354753,\n    chr17: 81195210,\n    chr18: 78077248,\n    chr19: 59128983,\n    chr20: 63025520,\n    chr21: 48129895,\n    chr22: 51304566,\n    chrX: 155270560,\n    chrY: 59373566,\n    chrM: 16571\n}\n\n// chromosome ranges\nexport const CHROM_RANGE_HG19: { [k: string]: [number, number] } = {}\n\nObject.keys(CHROM_SIZE_HG19).reduce((sum, k) => {\n    CHROM_RANGE_HG19[k] = [sum, sum + CHROM_SIZE_HG19[k]]\n    return sum + CHROM_SIZE_HG19[k]\n}, 0)\n\nexport const TOTAL_CHROM_SIZE_HG19 = Object.values(CHROM_SIZE_HG19).reduce((sum, current) => sum + current, 0);","import Ajv from 'ajv'\nimport uuid from \"uuid\"\nimport { HiGlassSpec, Track } from \"./higlass.schema\"\nimport HiGlassSchema from \"./higlass.schema.json\"\nimport { TOTAL_CHROM_SIZE_HG19, CHROM_RANGE_HG19 } from '../utils/chrom-size'\nimport { Domain, IsDomainChr, IsDomainInterval, IsDomainChrInterval, IsDomainGene } from '../gemini.schema'\n\nconst DEFAULT_CHROMOSOME_INFO_PATH = '//s3.amazonaws.com/pkerp/data/hg19/chromSizes.tsv'\n\n/**\n * Model for managing HiGlass spec.\n * (We are only using one center track with additional tracks for axes in a single view)\n */\nexport class HiGlassModel {\n    private hg: HiGlassSpec\n    constructor() {\n        this.hg = {}\n\n        // Add default specs.\n        this.setEditable(false)\n        this.setChromInfoPath(DEFAULT_CHROMOSOME_INFO_PATH)\n        this.hg.trackSourceServers = []\n        this.hg.views = [{\n            uid: uuid.v1(),\n            genomePositionSearchBoxVisible: false,\n            layout: { w: 12, h: 12, x: 0, y: 0 },\n            tracks: {\n                top: [],\n                left: [],\n                center: [],\n                right: [],\n                bottom: [],\n                gallery: [],\n                whole: []\n            },\n            initialXDomain: [0, TOTAL_CHROM_SIZE_HG19],\n            initialYDomain: [0, TOTAL_CHROM_SIZE_HG19]\n        }]\n    }\n\n    public spec(): Readonly<HiGlassSpec> {\n        return this.hg\n    }\n\n    private getNumericDomain(domain: Domain) {\n        if (IsDomainChr(domain)) {\n            return CHROM_RANGE_HG19[`chr${domain.chromosome}`]\n        }\n        else if (IsDomainInterval(domain)) {\n            return domain.interval\n        }\n        else if (IsDomainChrInterval(domain)) {\n            const chrStart = CHROM_RANGE_HG19[`chr${domain.chromosome}`][0]\n            const [start, end] = domain.interval\n            return [\n                chrStart + start,\n                chrStart + end\n            ]\n\n        } else if (IsDomainGene(domain)) {\n            // TODO: Not supported yet\n        }\n    }\n    public setDomain(\n        xDomain: Domain | undefined,\n        yDomain: Domain | undefined\n    ) {\n        if (xDomain && this.hg.views?.[0]) {\n            this.hg.views[0].initialXDomain = this.getNumericDomain(xDomain)\n        }\n        if (yDomain && this.hg.views?.[0]) {\n            this.hg.views[0].initialYDomain = this.getNumericDomain(yDomain)\n        }\n    }\n\n    private setEditable(editable: boolean | undefined) {\n        this.hg.editable = editable\n        return this\n    }\n\n    private setChromInfoPath(chromInfoPath: string | undefined) {\n        this.hg.chromInfoPath = chromInfoPath\n        return this\n    }\n\n    public addTrackSourceServers(trackSourceServers: string | undefined) {\n        if (trackSourceServers && this.hg.trackSourceServers?.indexOf(trackSourceServers) === -1)\n            this.hg.trackSourceServers?.push(trackSourceServers)\n        return this\n    }\n\n    public setMainTrack(track: Track) {\n        if (!this.hg.views) return this\n        this.hg.views[0].tracks.center = [track]\n        return this\n    }\n\n    public setAxisTrack(position: 'left' | 'right' | 'top' | 'bottom') {\n        if (!this.hg.views) return this\n        const baseTrackType = '-chromosome-labels'\n        const direction = position === 'left' || position === 'right' ? 'vertical' : 'horizontal'\n        const widthOrHeight = direction === 'vertical' ? 'width' : 'height'\n        this.hg.views[0].tracks[position] = [{\n            uid: uuid.v1(),\n            type: (direction + baseTrackType) as any /* TODO */,\n            [widthOrHeight]: 30,\n            chromInfoPath: this.hg.chromInfoPath\n        }]\n        return this\n    }\n\n    public validateSpec() {\n        const validate = new Ajv({ extendRefs: true }).compile(HiGlassSchema)\n        const valid = validate(this.spec())\n\n        if (validate.errors) {\n            console.warn(JSON.stringify(validate.errors, null, 2))\n        }\n\n        return valid as boolean\n    }\n} ","export const COLOR_SCHEME_VIRIDIS = [\n    \"rgba(68,1,84,1)\",\n    \"rgba(68,2,85,1)\",\n    \"rgba(69,3,87,1)\",\n    \"rgba(69,5,88,1)\",\n    \"rgba(69,6,90,1)\",\n    \"rgba(70,8,91,1)\",\n    \"rgba(70,9,93,1)\",\n    \"rgba(70,11,94,1)\",\n    \"rgba(70,12,96,1)\",\n    \"rgba(71,14,97,1)\",\n    \"rgba(71,15,98,1)\",\n    \"rgba(71,17,100,1)\",\n    \"rgba(71,18,101,1)\",\n    \"rgba(71,20,102,1)\",\n    \"rgba(72,21,104,1)\",\n    \"rgba(72,22,105,1)\",\n    \"rgba(72,24,106,1)\",\n    \"rgba(72,25,108,1)\",\n    \"rgba(72,26,109,1)\",\n    \"rgba(72,28,110,1)\",\n    \"rgba(72,29,111,1)\",\n    \"rgba(72,30,112,1)\",\n    \"rgba(72,32,113,1)\",\n    \"rgba(72,33,115,1)\",\n    \"rgba(72,34,116,1)\",\n    \"rgba(72,36,117,1)\",\n    \"rgba(72,37,118,1)\",\n    \"rgba(72,38,119,1)\",\n    \"rgba(72,39,120,1)\",\n    \"rgba(71,41,121,1)\",\n    \"rgba(71,42,121,1)\",\n    \"rgba(71,43,122,1)\",\n    \"rgba(71,44,123,1)\",\n    \"rgba(71,46,124,1)\",\n    \"rgba(70,47,125,1)\",\n    \"rgba(70,48,126,1)\",\n    \"rgba(70,49,126,1)\",\n    \"rgba(70,51,127,1)\",\n    \"rgba(69,52,128,1)\",\n    \"rgba(69,53,129,1)\",\n    \"rgba(69,54,129,1)\",\n    \"rgba(68,56,130,1)\",\n    \"rgba(68,57,131,1)\",\n    \"rgba(68,58,131,1)\",\n    \"rgba(67,59,132,1)\",\n    \"rgba(67,60,132,1)\",\n    \"rgba(67,62,133,1)\",\n    \"rgba(66,63,133,1)\",\n    \"rgba(66,64,134,1)\",\n    \"rgba(65,65,134,1)\",\n    \"rgba(65,66,135,1)\",\n    \"rgba(65,67,135,1)\",\n    \"rgba(64,69,136,1)\",\n    \"rgba(64,70,136,1)\",\n    \"rgba(63,71,136,1)\",\n    \"rgba(63,72,137,1)\",\n    \"rgba(62,73,137,1)\",\n    \"rgba(62,74,137,1)\",\n    \"rgba(61,75,138,1)\",\n    \"rgba(61,77,138,1)\",\n    \"rgba(60,78,138,1)\",\n    \"rgba(60,79,138,1)\",\n    \"rgba(59,80,139,1)\",\n    \"rgba(59,81,139,1)\",\n    \"rgba(58,82,139,1)\",\n    \"rgba(58,83,139,1)\",\n    \"rgba(57,84,140,1)\",\n    \"rgba(57,85,140,1)\",\n    \"rgba(56,86,140,1)\",\n    \"rgba(56,87,140,1)\",\n    \"rgba(55,88,140,1)\",\n    \"rgba(55,89,140,1)\",\n    \"rgba(54,91,141,1)\",\n    \"rgba(54,92,141,1)\",\n    \"rgba(53,93,141,1)\",\n    \"rgba(53,94,141,1)\",\n    \"rgba(52,95,141,1)\",\n    \"rgba(52,96,141,1)\",\n    \"rgba(51,97,141,1)\",\n    \"rgba(51,98,141,1)\",\n    \"rgba(51,99,141,1)\",\n    \"rgba(50,100,142,1)\",\n    \"rgba(50,101,142,1)\",\n    \"rgba(49,102,142,1)\",\n    \"rgba(49,103,142,1)\",\n    \"rgba(48,104,142,1)\",\n    \"rgba(48,105,142,1)\",\n    \"rgba(47,106,142,1)\",\n    \"rgba(47,107,142,1)\",\n    \"rgba(47,108,142,1)\",\n    \"rgba(46,109,142,1)\",\n    \"rgba(46,110,142,1)\",\n    \"rgba(45,111,142,1)\",\n    \"rgba(45,112,142,1)\",\n    \"rgba(45,112,142,1)\",\n    \"rgba(44,113,142,1)\",\n    \"rgba(44,114,142,1)\",\n    \"rgba(43,115,142,1)\",\n    \"rgba(43,116,142,1)\",\n    \"rgba(43,117,142,1)\",\n    \"rgba(42,118,142,1)\",\n    \"rgba(42,119,142,1)\",\n    \"rgba(41,120,142,1)\",\n    \"rgba(41,121,142,1)\",\n    \"rgba(41,122,142,1)\",\n    \"rgba(40,123,142,1)\",\n    \"rgba(40,124,142,1)\",\n    \"rgba(40,125,142,1)\",\n    \"rgba(39,126,142,1)\",\n    \"rgba(39,127,142,1)\",\n    \"rgba(38,128,142,1)\",\n    \"rgba(38,129,142,1)\",\n    \"rgba(38,130,142,1)\",\n    \"rgba(37,131,142,1)\",\n    \"rgba(37,131,142,1)\",\n    \"rgba(37,132,142,1)\",\n    \"rgba(36,133,142,1)\",\n    \"rgba(36,134,142,1)\",\n    \"rgba(35,135,142,1)\",\n    \"rgba(35,136,142,1)\",\n    \"rgba(35,137,142,1)\",\n    \"rgba(34,138,141,1)\",\n    \"rgba(34,139,141,1)\",\n    \"rgba(34,140,141,1)\",\n    \"rgba(33,141,141,1)\",\n    \"rgba(33,142,141,1)\",\n    \"rgba(33,143,141,1)\",\n    \"rgba(32,144,141,1)\",\n    \"rgba(32,145,140,1)\",\n    \"rgba(32,146,140,1)\",\n    \"rgba(32,147,140,1)\",\n    \"rgba(31,147,140,1)\",\n    \"rgba(31,148,140,1)\",\n    \"rgba(31,149,139,1)\",\n    \"rgba(31,150,139,1)\",\n    \"rgba(31,151,139,1)\",\n    \"rgba(30,152,139,1)\",\n    \"rgba(30,153,138,1)\",\n    \"rgba(30,154,138,1)\",\n    \"rgba(30,155,138,1)\",\n    \"rgba(30,156,137,1)\",\n    \"rgba(30,157,137,1)\",\n    \"rgba(30,158,137,1)\",\n    \"rgba(30,159,136,1)\",\n    \"rgba(30,160,136,1)\",\n    \"rgba(31,161,136,1)\",\n    \"rgba(31,162,135,1)\",\n    \"rgba(31,163,135,1)\",\n    \"rgba(31,163,134,1)\",\n    \"rgba(32,164,134,1)\",\n    \"rgba(32,165,134,1)\",\n    \"rgba(33,166,133,1)\",\n    \"rgba(33,167,133,1)\",\n    \"rgba(34,168,132,1)\",\n    \"rgba(35,169,131,1)\",\n    \"rgba(35,170,131,1)\",\n    \"rgba(36,171,130,1)\",\n    \"rgba(37,172,130,1)\",\n    \"rgba(38,173,129,1)\",\n    \"rgba(39,174,129,1)\",\n    \"rgba(40,175,128,1)\",\n    \"rgba(41,175,127,1)\",\n    \"rgba(42,176,127,1)\",\n    \"rgba(43,177,126,1)\",\n    \"rgba(44,178,125,1)\",\n    \"rgba(46,179,124,1)\",\n    \"rgba(47,180,124,1)\",\n    \"rgba(48,181,123,1)\",\n    \"rgba(50,182,122,1)\",\n    \"rgba(51,183,121,1)\",\n    \"rgba(53,183,121,1)\",\n    \"rgba(54,184,120,1)\",\n    \"rgba(56,185,119,1)\",\n    \"rgba(57,186,118,1)\",\n    \"rgba(59,187,117,1)\",\n    \"rgba(61,188,116,1)\",\n    \"rgba(62,189,115,1)\",\n    \"rgba(64,190,114,1)\",\n    \"rgba(66,190,113,1)\",\n    \"rgba(68,191,112,1)\",\n    \"rgba(70,192,111,1)\",\n    \"rgba(72,193,110,1)\",\n    \"rgba(73,194,109,1)\",\n    \"rgba(75,194,108,1)\",\n    \"rgba(77,195,107,1)\",\n    \"rgba(79,196,106,1)\",\n    \"rgba(81,197,105,1)\",\n    \"rgba(83,198,104,1)\",\n    \"rgba(85,198,102,1)\",\n    \"rgba(88,199,101,1)\",\n    \"rgba(90,200,100,1)\",\n    \"rgba(92,201,99,1)\",\n    \"rgba(94,201,98,1)\",\n    \"rgba(96,202,96,1)\",\n    \"rgba(98,203,95,1)\",\n    \"rgba(101,204,94,1)\",\n    \"rgba(103,204,92,1)\",\n    \"rgba(105,205,91,1)\",\n    \"rgba(108,206,90,1)\",\n    \"rgba(110,206,88,1)\",\n    \"rgba(112,207,87,1)\",\n    \"rgba(115,208,85,1)\",\n    \"rgba(117,208,84,1)\",\n    \"rgba(119,209,82,1)\",\n    \"rgba(122,210,81,1)\",\n    \"rgba(124,210,79,1)\",\n    \"rgba(127,211,78,1)\",\n    \"rgba(129,212,76,1)\",\n    \"rgba(132,212,75,1)\",\n    \"rgba(134,213,73,1)\",\n    \"rgba(137,213,72,1)\",\n    \"rgba(139,214,70,1)\",\n    \"rgba(142,215,68,1)\",\n    \"rgba(144,215,67,1)\",\n    \"rgba(147,216,65,1)\",\n    \"rgba(149,216,63,1)\",\n    \"rgba(152,217,62,1)\",\n    \"rgba(155,217,60,1)\",\n    \"rgba(157,218,58,1)\",\n    \"rgba(160,218,57,1)\",\n    \"rgba(163,219,55,1)\",\n    \"rgba(165,219,53,1)\",\n    \"rgba(168,220,51,1)\",\n    \"rgba(171,220,50,1)\",\n    \"rgba(173,221,48,1)\",\n    \"rgba(176,221,46,1)\",\n    \"rgba(179,221,45,1)\",\n    \"rgba(181,222,43,1)\",\n    \"rgba(184,222,41,1)\",\n    \"rgba(187,223,39,1)\",\n    \"rgba(189,223,38,1)\",\n    \"rgba(192,223,36,1)\",\n    \"rgba(195,224,35,1)\",\n    \"rgba(197,224,33,1)\",\n    \"rgba(200,225,32,1)\",\n    \"rgba(203,225,30,1)\",\n    \"rgba(205,225,29,1)\",\n    \"rgba(208,226,28,1)\",\n    \"rgba(211,226,27,1)\",\n    \"rgba(213,226,26,1)\",\n    \"rgba(216,227,25,1)\",\n    \"rgba(219,227,24,1)\",\n    \"rgba(221,227,24,1)\",\n    \"rgba(224,228,24,1)\",\n    \"rgba(226,228,24,1)\",\n    \"rgba(229,228,24,1)\",\n    \"rgba(232,229,25,1)\",\n    \"rgba(234,229,25,1)\",\n    \"rgba(237,229,26,1)\",\n    \"rgba(239,230,27,1)\",\n    \"rgba(242,230,28,1)\",\n    \"rgba(244,230,30,1)\",\n    \"rgba(247,230,31,1)\",\n    \"rgba(249,231,33,1)\",\n    \"rgba(251,231,35,1)\",\n    \"rgba(254,231,36,1)\"\n]","import Ajv from 'ajv'\nimport HiGlassSchema from \"./higlass.schema.json\"\nimport { HiGlassSpec, EnumTrackType } from \"./higlass.schema\"\nimport { HiGlassModel } from './higlass-model'\nimport { parseServerAndTilesetUidFromUrl, validTilesetUrl } from '../utils'\nimport { GenericType, Track, Channel, IsDataDeep, IsHiGlassTrack, IsChannelDeep, IsShallowMark, IsMarkDeep, Domain, Range } from '../gemini.schema'\nimport { BoundingBox } from '../utils/bounding-box'\nimport { COLOR_SCHEME_VIRIDIS } from '../utils/contants'\n\nexport function compiler(track: Track | GenericType<Channel>, bb: BoundingBox): HiGlassSpec {\n\n    const higlass = new HiGlassModel()\n\n    if (IsHiGlassTrack(track) && IsDataDeep(track.data)) {\n        const { server, tilesetUid } = parseServerAndTilesetUidFromUrl(track.data.url)\n\n        // Mose this to an independent file\n        const defaultZoomTech = {\n            type: 'none'\n        }\n\n        // Is this track horizontal or vertical?\n        const isXGenomic = IsChannelDeep(track.x) && track.x.type === \"genomic\"\n        const isYGenomic = IsChannelDeep(track.y) && track.y.type === \"genomic\"\n        const xDomain = isXGenomic && IsChannelDeep(track.x) ? track.x.domain as Domain : undefined\n        const yDomain = isYGenomic && IsChannelDeep(track.y) ? track.y.domain as Domain : undefined\n        const colorRange = IsChannelDeep(track.color) ? track.color.range as Range : undefined\n        const trackDirection = isXGenomic && isYGenomic ? 'both' : isXGenomic ? 'horizontal' : 'vertical'\n        const trackType = IsShallowMark(track.mark) ? track.mark : IsMarkDeep(track.mark) ? track.mark.type : 'unknown'\n        const zoomOutTechnique = track.zoomOutTechnique ?? defaultZoomTech\n\n        higlass.setDomain(xDomain, yDomain)\n\n        // TODO: remove below\n        const typeMap: { [k: string]: EnumTrackType } = {\n            // gemini track types\n            'gemini-track-higlass': 'gemini-track',\n            'point': 'gemini-track',\n            'bar': 'gemini-track',\n            'line': 'gemini-track',\n            'rect': 'gemini-track',\n\n            // higlass track types\n            'gene-annotation-higlass': `${trackDirection}-gene-annotations`,\n            'point-higlass': `${trackDirection}-point`,\n            'bar-higlass': `${trackDirection}-bar`,\n            'line-higlass': `${trackDirection}-line`,\n            '1d-heatmap-higlass': `${trackDirection}-1d-heatmap`,\n            // ...\n        } as { [k: string]: EnumTrackType }\n\n        const defaultOptions: { [k: string]: Object } = {\n            'point-higlass': {\n                pointColor: '#0072B2',\n                labelPosition: 'hidden',\n                axisPositionHorizontal: 'left'\n            },\n            'bar-higlass': {\n                barFillColor: '#0072B2',\n                labelPosition: 'hidden',\n                axisPositionHorizontal: 'left'\n            },\n            'line-higlass': {\n                lineStrokeColor: '#0072B2',\n                labelPosition: 'hidden',\n                axisPositionHorizontal: 'left'\n            },\n            '1d-heatmap-higlass': {\n                colorRange: COLOR_SCHEME_VIRIDIS,\n                labelPosition: 'hidden'\n            },\n        }\n        const higlassTrackType = typeMap[trackType]\n        if (!higlassTrackType) return {}\n\n        higlass.setMainTrack({\n            type: higlassTrackType,\n            server: server,\n            tilesetUid: tilesetUid,\n            width: bb.width,\n            height: bb.height, // TODO: consider the height of axes\n            options: {\n                ...defaultOptions[trackType],\n                colorScale: colorRange,\n                spec: { ...track, data: undefined }\n            }\n        }).addTrackSourceServers(server)\n\n        const chanToPos: { [k: string]: 'left' | 'right' | 'top' | 'bottom' } = {\n            x: 'bottom',\n            x1: 'top',\n            y: 'left',\n            y1: 'right'\n        }\n        Object.keys(chanToPos).forEach(c => {\n            const channelDef = (track as GenericType<Channel>)[c]\n            if (IsChannelDeep(channelDef) && channelDef.axis) {\n                higlass.setAxisTrack(chanToPos[c])\n            }\n        })\n\n        higlass.validateSpec()\n\n        console.log('HiGlass viewConfig:', higlass.spec())\n\n        return higlass.spec()\n    }\n    return {}\n}\n\nexport function validateHG(hg: HiGlassSpec): boolean {\n\n    const validate = new Ajv({ extendRefs: true }).compile(HiGlassSchema)\n    const valid = validate(hg)\n\n    if (validate.errors) {\n        console.warn(JSON.stringify(validate.errors, null, 2))\n    }\n\n    // TODO: Check types such as default values and locationLocks\n\n    return valid as boolean\n} ","export interface SpecValidity {\n    msg: string\n    isValid: boolean\n}\n\nexport class SpecValidityModel {\n    private validity: SpecValidity\n    constructor(valid?: boolean) {\n        this.validity = {\n            msg: \"No message\",\n            isValid: valid ? valid : false\n        }\n    }\n    public getValidity() {\n        return this.validity;\n    }\n    public isValid() {\n        return this.validity.isValid;\n    }\n    public setMsg(msg: string) {\n        this.validity.msg = msg;\n        return this;\n    }\n    public setIsValid(isValid: boolean) {\n        this.validity.isValid = isValid;\n        return this;\n    }\n    public setValidity(validity: SpecValidity) {\n        this.setIsValid(validity.isValid);\n        this.setMsg(validity.msg);\n        return this;\n    }\n    public printValidity() {\n        if (!this.getValidity().isValid) {\n            console.warn(this.validity.msg);\n        } else {\n            console.log(this.validity.msg);\n        }\n    }\n}","import { BoundingBox } from \"../utils/bounding-box\"\nimport { Track, GenericType, Channel, IsChannelDeep, Datum, IsChannelValue, IsDataDeep } from \"../gemini.schema\"\nimport * as d3 from 'd3'\nimport { validateBetweenLinkSpec } from \"./link-validate\"\nimport { getChartType } from \"./chart-type\"\nimport { renderBetweenLineLink } from \"./line-connection\"\nimport { renderBetweenBandLink } from \"./band-connection\"\n\nexport type LinkPosition =\n    | 'left-bottom'\n    | 'left-top'\n    | 'left-right'\n    | 'top-right'\n    | 'top-bottom'\n    | 'right-bottom'\n    | 'unknown'\n\nexport interface LinkStyle { // TODO: Extend general styles.\n    fill?: string\n    stroke?: string\n    strokeWidth?: number\n    opacity?: number\n}\n\nexport const DEFAULT_LINK_STYLE: Required<LinkStyle> = {\n    fill: 'lightgray',\n    stroke: 'gray',\n    strokeWidth: 1,\n    opacity: 0.7\n} as const\n\nexport const LinkChannelToStyleMap: { [k: string]: keyof typeof DEFAULT_LINK_STYLE } = {\n    color: 'fill',\n    stroke: 'stroke',\n    strokeWidth: 'strokeWidth',\n    opacity: 'opacity'\n}\n\nexport class LinkStyleModel {\n    private style: Required<LinkStyle>\n    constructor(track: Track | GenericType<Channel>) {\n        this.style = { ...DEFAULT_LINK_STYLE }\n        // Fill styles using spec.\n        Object.keys(LinkChannelToStyleMap).forEach(c => {\n            const channel = (track as GenericType<Channel>)[c]\n            if (IsChannelValue(channel)) {\n                (this.style[LinkChannelToStyleMap[c]] as any /* TODO: remove `any` */) = channel.value\n            }\n        })\n    }\n    public getStyle() {\n        return this.style\n    }\n}\n\nexport function getLinkPosition(track: Track | GenericType<Channel>): LinkPosition {\n    const xField = IsChannelDeep(track.x) ? track.x.field : undefined\n    const x1Field = IsChannelDeep(track.x1) ? track.x1.field : undefined\n    const yField = IsChannelDeep(track.y) ? track.y.field : undefined\n    const y1Field = IsChannelDeep(track.y1) ? track.y1.field : undefined\n\n    if (xField && yField) return 'left-bottom'\n    else if (x1Field && yField) return 'left-top'\n    else if (x1Field && y1Field) return 'top-right'\n    else if (xField && y1Field) return 'right-bottom'\n    else if (xField && x1Field) return 'top-bottom'\n    else if (yField && y1Field) return 'left-right'\n    else return 'unknown'\n}\n\nexport function renderBetweenLink(\n    g: d3.Selection<SVGGElement, any, any, any>,\n    tracksWithBB: { boundingBox: BoundingBox, track: Track | GenericType<Channel> }[]\n) {\n    tracksWithBB.forEach(tb => {\n        // validate\n        const valid = validateBetweenLinkSpec(tb.track)\n        if (!valid.isValid()) {\n            valid.printValidity()\n            return\n        }\n        // render\n        switch (getChartType(tb.track)) {\n            case 'line-connection':\n                if (IsDataDeep(tb.track.data)) {\n                    d3.csv(tb.track.data.url).then(data =>\n                        renderBetweenLineLink(g, { ...tb.track, data } as Track, tb.boundingBox)\n                    )\n                }\n                break\n            case 'band-connection':\n                if (IsDataDeep(tb.track.data)) {\n                    d3.csv(tb.track.data.url).then(data =>\n                        renderBetweenBandLink(g, { ...tb.track, data } as Track, tb.boundingBox)\n                    )\n                }\n                break\n            default:\n                break\n        }\n    })\n}","import { Track, GenericType, Channel, IsChannelDeep } from \"../gemini.schema\";\nimport { SpecValidityModel } from \"./validate\";\n\nexport function validateBetweenLinkSpec(track: Track | GenericType<Channel>) {\n    const validity = new SpecValidityModel(true);\n\n    const xField = IsChannelDeep(track.x) ? track.x.field : undefined;\n    const x1Field = IsChannelDeep(track.x1) ? track.x1.field : undefined;\n    const yField = IsChannelDeep(track.y) ? track.y.field : undefined;\n    const y1Field = IsChannelDeep(track.y1) ? track.y1.field : undefined;\n\n    const definedFields = [xField, x1Field, yField, y1Field].filter(d => d);\n\n    if (definedFields.length < 2) {\n        validity.setMsg('Less than two fields are specified for a `link-between` mark.');\n        validity.setIsValid(false);\n    }\n    else if (definedFields.length > 2) {\n        validity.setMsg('More than two fields are specified for a `link-between` mark.');\n    }\n    return validity;\n}","import { Track, GenericType, Channel, IsChannelDeep } from \"../gemini.schema\";\n\nexport type ChartType =\n    // ...\n    | 'line-connection'\n    | 'band-connection'\n    | 'unknown'\n\nexport function getChartType(track: Track | GenericType<Channel>): ChartType {\n\n    type PrimitiveChannel = 'x' | 'xe' | 'y' | 'ye';\n\n    const xField = IsChannelDeep(track.x) ? track.x.field : undefined;\n    const xeField = IsChannelDeep(track.xe) ? track.xe.field : undefined;\n    const x1Field = IsChannelDeep(track.x1) ? track.x1.field : undefined;\n    const x1eField = IsChannelDeep(track.x1e) ? track.x1e.field : undefined;\n    const yField = IsChannelDeep(track.y) ? track.y.field : undefined;\n    const yeField = IsChannelDeep(track.ye) ? track.ye.field : undefined;\n    const y1Field = IsChannelDeep(track.y1) ? track.y1.field : undefined;\n    const y1eField = IsChannelDeep(track.y1e) ? track.y1e.field : undefined;\n\n    const numOfChannelsDefined: { [k in PrimitiveChannel]: number } = {\n        x: [xField, xeField].filter(d => d).length,\n        xe: [x1Field, x1eField].filter(d => d).length,\n        y: [yField, yeField].filter(d => d).length,\n        ye: [y1Field, y1eField].filter(d => d).length\n    }\n\n    if (track.mark === 'link-between') {\n        const numPairOfChannelsDefined = Object.keys(numOfChannelsDefined).map(\n            key => numOfChannelsDefined[key as PrimitiveChannel]\n        ).filter(d => d >= 2).length;\n        if (numPairOfChannelsDefined >= 2) {\n            return 'band-connection';\n        } else {\n            return 'line-connection';\n        }\n    }\n    return 'unknown';\n}","import { BoundingBox } from \"../utils/bounding-box\";\nimport { Track, GenericType, Channel, IsChannelDeep, Datum } from \"../gemini.schema\";\nimport * as d3 from 'd3'\nimport { getLinkPosition, LinkStyleModel } from \"./link\";\n\nexport function renderBetweenLineLink(\n    g: d3.Selection<SVGGElement, any, any, any>,\n    track: Track | GenericType<Channel>,\n    bb: BoundingBox\n) {\n    const styles = new LinkStyleModel(track);\n\n    const xField = IsChannelDeep(track.x) ? track.x.field : undefined;\n    const x1Field = IsChannelDeep(track.x1) ? track.x1.field : undefined;\n    const yField = IsChannelDeep(track.y) ? track.y.field : undefined;\n    const y1Field = IsChannelDeep(track.y1) ? track.y1.field : undefined;\n\n    const [f1, f2] = [xField, x1Field, yField, y1Field].filter(d => d);\n\n    const xScale = d3.scaleLinear<number, number>()\n        .domain([0, 99]) // TODO: Support data-driven domain.\n        .range([bb.x, bb.x + bb.width])\n    const yScale = d3.scaleLinear<number, number>()\n        .domain([0, 99])\n        .range([bb.y, bb.y + bb.height])\n\n    // calculate position of points\n    const point: {\n        x: (d: Datum) => number,\n        y: (d: Datum) => number,\n    }[] = [];\n\n    const position = getLinkPosition(track);\n    if (position.includes('left')) {\n        point.push({\n            x: () => bb.x,\n            y: (d: Datum) => yScale(d[yField as string] as number)\n        });\n    }\n    if (position.includes('bottom')) {\n        point.push({\n            x: (d: Datum) => xScale(d[xField as string] as number),\n            y: () => bb.y + bb.height\n        });\n    }\n    if (position.includes('top')) {\n        point.push({\n            x: (d: Datum) => xScale(d[x1Field as string] as number),\n            y: () => bb.y\n        });\n    }\n    if (position.includes('right')) {\n        point.push({\n            x: () => bb.x + bb.width,\n            y: (d: Datum) => yScale((d[y1Field as string] as number))\n        });\n    }\n\n    // render\n    g.selectAll('.line')\n        .data(track.data as Datum[])\n        .enter()\n        .filter(\n            // TODO: only for demo\n            d => Math.abs((d[f1 as string] as number) - (d[f2 as string] as number)) < 30\n        )\n        .append('line')\n        .attr('x1', d => point[0].x(d))\n        .attr('y1', d => point[0].y(d))\n        .attr('x2', d => point[1].x(d))\n        .attr('y2', d => point[1].y(d))\n        .attr('fill', styles.getStyle().fill)\n        .attr('stroke', styles.getStyle().stroke)\n        .attr('stroke-width', styles.getStyle().strokeWidth)\n        .attr('opacity', styles.getStyle().opacity)\n}","import { BoundingBox } from \"../utils/bounding-box\"\nimport { Track, GenericType, Channel, IsChannelDeep, Datum } from \"../gemini.schema\"\nimport * as d3 from 'd3'\nimport { getLinkPosition, LinkStyleModel } from \"./link\"\n\nexport function renderBetweenBandLink(\n    g: d3.Selection<SVGGElement, any, any, any>,\n    track: Track | GenericType<Channel>,\n    bb: BoundingBox\n) {\n    const styles = new LinkStyleModel(track)\n\n    const xField = IsChannelDeep(track.x) ? track.x.field : undefined\n    const xeField = IsChannelDeep(track.xe) ? track.xe.field : undefined\n    const x1Field = IsChannelDeep(track.x1) ? track.x1.field : undefined\n    const x1eField = IsChannelDeep(track.x1e) ? track.x1e.field : undefined\n    const yField = IsChannelDeep(track.y) ? track.y.field : undefined\n    const yeField = IsChannelDeep(track.ye) ? track.ye.field : undefined\n    const y1Field = IsChannelDeep(track.y1) ? track.y1.field : undefined\n    const y1eField = IsChannelDeep(track.y1e) ? track.y1e.field : undefined\n\n    const xScale = d3.scaleLinear<number, number>()\n        .domain([0, 99]) // TODO: Support based on the real data\n        .range([bb.x, bb.x + bb.width])\n    const yScale = d3.scaleLinear<number, number>()\n        .domain([0, 99])\n        .range([bb.y, bb.y + bb.height])\n\n    // calculate position of points\n    const point: {\n        x: (d: Datum) => number,\n        xe: (d: Datum) => number,\n        y: (d: Datum) => number,\n        ye: (d: Datum) => number\n    }[] = []\n\n    const position = getLinkPosition(track)\n    if (position.includes('left')) {\n        point.push({\n            x: () => bb.x,\n            xe: () => bb.x,\n            y: (d: Datum) => yScale(d[yField as string] as number),\n            ye: (d: Datum) => yScale(d[yeField as string] as number)\n        })\n    }\n    if (position.includes('bottom')) {\n        point.push({\n            x: (d: Datum) => xScale(d[xField as string] as number),\n            xe: (d: Datum) => xScale(d[xeField as string] as number),\n            y: () => bb.y + bb.height,\n            ye: () => bb.y + bb.height\n        })\n    }\n    if (position.includes('top')) {\n        point.push({\n            x: (d: Datum) => xScale(d[x1Field as string] as number),\n            xe: (d: Datum) => xScale(d[x1eField as string] as number),\n            y: () => bb.y,\n            ye: () => bb.y\n        })\n    }\n    if (position.includes('right')) {\n        point.push({\n            x: () => bb.x + bb.width,\n            xe: () => bb.x + bb.width,\n            y: (d: Datum) => yScale((d[y1Field as string] as number)),\n            ye: (d: Datum) => yScale((d[y1eField as string] as number))\n        })\n    }\n\n    // render\n    g.selectAll('.polygon')\n        .data(track.data as Datum[])\n        .enter()\n        .append('polygon')\n        .attr('points', d => {\n            const primaryPointStart = `${point[0].x(d)},${point[0].y(d)}`\n            const primaryPointEnd = `${point[0].xe(d)},${point[0].ye(d)}`\n            const secondaryPointStart = `${point[1].xe(d)},${point[1].ye(d)}`\n            const secondaryPointEnd = `${point[1].x(d)},${point[1].y(d)}`\n            return `${primaryPointStart} ${primaryPointEnd} ${secondaryPointStart} ${secondaryPointEnd}`\n        })\n        .attr('fill', styles.getStyle().fill)\n        .attr('stroke', styles.getStyle().stroke)\n        .attr('stroke-width', styles.getStyle().strokeWidth)\n        .attr('opacity', styles.getStyle().opacity)\n}","import * as d3 from \"d3\";\nimport { GeminiSpec, Track, GenericType, Channel, IsNotEmptyTrack, IsHiGlassTrack } from \"../gemini.schema\";\nimport { HiGlassTrack, renderHiGlass } from \"./higlass\";\nimport { BoundingBox } from \"../utils/bounding-box\";\nimport { TRACK_GAP } from \"./defaults\";\nimport { renderBetweenLink } from \"./link\";\nimport { trackStyle } from \"./layout\";\n\nexport function renderLinearLayout(\n    g: d3.Selection<SVGGElement, any, any, any>,\n    gm: GeminiSpec,\n    setHiGlassInfo: (higlassInfo: HiGlassTrack[]) => void,\n    boundingBox: BoundingBox\n) {\n    const wrap: number = gm.layout?.wrap ?? 999;\n\n    // Generate layout data\n    const trackInfo: { boundingBox: BoundingBox, track: Track | GenericType<Channel> }[] = [];\n    let cumX = boundingBox.x\n    let cumY = boundingBox.y\n    if (gm.layout?.direction === 'horizontal') {\n        gm.tracks.forEach((track, i) => {\n            if (IsNotEmptyTrack(track)) {\n                trackInfo.push({\n                    track, boundingBox: {\n                        x: cumX, width: track.width as number,\n                        y: cumY, height: track.height as number\n                    }\n                })\n                cumX += track.width as number + TRACK_GAP\n                if (i % wrap === wrap - 1) {\n                    cumX = boundingBox.x\n                    cumY = cumY += track.height as number + TRACK_GAP\n                }\n            }\n        })\n    } else {\n        gm.tracks.forEach((track, i) => {\n            if (IsNotEmptyTrack(track)) {\n                trackInfo.push({\n                    track, boundingBox: {\n                        x: cumX, width: track.width as number,\n                        y: cumY, height: track.height as number\n                    }\n                })\n                cumY += track.height as number + TRACK_GAP;\n                if (i % wrap === wrap - 1) {\n                    cumX = cumX += track.width as number + TRACK_GAP\n                    cumY = boundingBox.y\n                }\n            }\n        })\n    }\n    ///\n\n    // Render track backgrounds\n    g.selectAll('rect')\n        .data(trackInfo)\n        .enter()\n        .append('rect')\n        .attr('x', d => d.boundingBox.x)\n        .attr('width', d => d.boundingBox.width)\n        .attr('y', d => d.boundingBox.y)\n        .attr('height', d => d.boundingBox.height)\n        .attr('fill', d => trackStyle.background(d.track as Track))\n        .attr('stroke', d => trackStyle.stroke(d.track as Track))\n        .attr('stroke-width', d => trackStyle.strokeWidth(d.track as Track))\n\n    // Render links and bands\n    renderBetweenLink(g, trackInfo.filter(d => d.track.mark === 'link-between'));\n\n    // Render HiGlass tracks\n    renderHiGlass(g, trackInfo.filter(d => IsHiGlassTrack(d.track)), setHiGlassInfo);\n}","export const DEFAULT_VISUAL_PROPERTIES = {\n    opacity: 1\n}\n\n// gab between tracks\nexport const TRACK_GAP = 3;\n\n// empty space inside the visualization for circular layouts\nexport const INNER_CIRCLE_RADIUS = 150","import { BoundingBox } from '../utils/bounding-box';\nimport { Track, GenericType, Channel } from '../gemini.schema';\nimport { compiler } from '../higlass/gemini-to-higlass';\nimport testViewConfig from '../test/higlass/hg-only-heatmap.json';\n\nexport interface HiGlassTrack {\n    viewConfig: Object\n    boundingBox: BoundingBox,\n}\n\nexport function renderHiGlass(\n    g: d3.Selection<SVGGElement, any, any, any>,\n    tracksWithBB: { boundingBox: BoundingBox, track: Track | GenericType<Channel> }[],\n    setHiGlassInfo: (higlassInfo: HiGlassTrack[]) => void\n) {\n    const hiGlassInfo: HiGlassTrack[] = [];\n    tracksWithBB.forEach(tb => {\n        const { track, boundingBox: bb } = tb;\n\n        // add a HiGlass view config\n        hiGlassInfo.push({ boundingBox: bb, viewConfig: compiler(track, bb) });\n    })\n    setHiGlassInfo(hiGlassInfo);\n\n    /////// DEBUG\n    // const testHGInfo = tracksWithBB.map(tb => ({ boundingBox: tb.bb, viewConfig: testViewConfig }));\n    // console.log(testHGInfo);\n    // setHiGlassInfo(tracksWithBB.map(tb => ({\n    //     boundingBox: tb.bb,\n    //     viewConfig: testViewConfig\n    // })));\n    ///////\n}","import * as d3 from 'd3'\nimport { GeminiSpec, Track, Layout, GenericType, EmptyTrack, Channel } from '../gemini.schema'\nimport { HiGlassTrack } from './higlass'\nimport { BoundingBox } from '../utils/bounding-box'\nimport { renderCircularLayout } from './layout-circular'\nimport { renderLinearLayout } from './layout-linear'\n\nexport const trackStyle = {\n    background: (track: Track) => track.style?.background ?? 'white',\n    stroke: (track: Track) => track.style?.stroke ?? '#e0e0e0',\n    strokeWidth: (track: Track) => track.style?.strokeWidth ?? 1\n}\n\nexport function renderLayout(\n    g: d3.Selection<SVGGElement, any, any, any>,\n    gm: GeminiSpec,\n    setHiGlassInfo: (higlassInfo: HiGlassTrack[]) => void,\n    boundingBox: BoundingBox\n) {\n    g.selectAll('*').remove()\n\n    if (gm.layout?.type === 'circular') {\n        renderCircularLayout(g, gm, setHiGlassInfo, boundingBox)\n    } else {\n        renderLinearLayout(g, gm, setHiGlassInfo, boundingBox)\n    }\n}\n\n/**\n * Convert the vertical-direction layout of tracks to the identical, horizontal-version, tracks.\n * This is deprecated since this cannot support some specifications (e.g., six tracks with `wrap` === 3).\n * TODO: Support this function when we use `EmptyTrack`.\n * @param gm A Gemini specification.\n */\nexport function convertLayout(gm: GeminiSpec) {\n    if (gm.layout?.direction !== 'vertical') {\n        return gm\n    }\n    const wrap = (gm.layout.wrap ?? 0) > gm.tracks.length ? gm.tracks.length : (gm.layout.wrap ?? gm.tracks.length)\n    const newWrap = Math.ceil(gm.tracks.length / wrap)\n\n    const newLayout: Layout = {\n        ...gm.layout,\n        direction: 'horizontal',\n        wrap: newWrap\n    }\n\n    const tracks = gm.tracks\n    const newTracks: (Track | GenericType<Channel> | EmptyTrack)[] = []\n    for (let remainder = 0; remainder < wrap; remainder++) {\n        newTracks.push(...tracks.filter((t, i) => i % wrap === remainder))\n    }\n\n    return {\n        ...gm,\n        layout: newLayout,\n        tracks: newTracks\n    }\n}","import * as d3 from \"d3\";\nimport { GeminiSpec, Track, GenericType, Channel, IsNotEmptyTrack } from \"../gemini.schema\";\nimport { BoundingBox } from \"../utils/bounding-box\";\nimport { HiGlassTrack } from \"./higlass\";\nimport { TRACK_GAP } from \"./defaults\";\nimport { DefaultArcObject } from \"d3\";\nimport { trackStyle } from \"./layout\";\n\ninterface ArcInfo {\n    innerRadius: number\n    outerRadius: number\n    startAngle: number\n    endAngle: number\n}\n\nexport function renderCircularLayout(\n    g: d3.Selection<SVGGElement, any, any, any>,\n    gm: GeminiSpec,\n    setHiGlassInfo: (higlassInfo: HiGlassTrack[]) => void,\n    boundingBox: BoundingBox\n) {\n    const wrap: number = gm.layout?.wrap ?? 999;\n    const totalRadius = boundingBox.height / 2.0\n    const totalLength = d3.sum(\n        // Look into the first row\n        gm.layout?.direction === 'horizontal' ?\n            gm.tracks.filter((t, i) => i < wrap)\n                .map(d => IsNotEmptyTrack(d) ? d.width as number : 0) :\n            gm.tracks.filter((t, i) => i % wrap == 0)\n                .map(d => IsNotEmptyTrack(d) ? d.width as number : 0)\n\n    )\n    const angleGap = Math.PI * 2 / 160.0;\n\n    // Generate layout data\n    const trackInfo: { arc: ArcInfo, track: Track | GenericType<Channel> }[] = []\n    let cumDonutBandWidth = 0\n    let cumLength = 0\n    if (gm.layout?.direction === \"horizontal\") {\n        // adjacently place first\n        gm.tracks.forEach((track, i) => {\n            if (IsNotEmptyTrack(track)) {\n                const donutBandWidth = track.height as number // Height is used for the width of donut band.\n                const length = track.width as number // Width is used for calculating the proportion of the circumference.\n                const startAngle = (Math.PI * 2) * cumLength / totalLength + angleGap\n                const endAngle = startAngle + (Math.PI * 2) * length / totalLength - angleGap\n                trackInfo.push({\n                    track, arc: {\n                        innerRadius: totalRadius - cumDonutBandWidth - donutBandWidth,\n                        outerRadius: totalRadius - cumDonutBandWidth,\n                        startAngle,\n                        endAngle\n                    }\n                })\n                cumLength += length\n                if (i % wrap === wrap - 1) {\n                    cumLength = 0\n                    cumDonutBandWidth += donutBandWidth + TRACK_GAP\n                }\n            }\n        })\n    }\n    else {\n        // stack first\n        gm.tracks.forEach((track, i) => {\n            if (IsNotEmptyTrack(track)) {\n                const donutBandWidth = track.height as number // Height is used for the width of donut band.\n                const length = track.width as number // Width is used for calculating the proportion of the circumference.\n                const startAngle = (Math.PI * 2) * cumLength / totalLength + angleGap\n                const endAngle = startAngle + (Math.PI * 2) * length / totalLength - angleGap\n                trackInfo.push({\n                    track, arc: {\n                        innerRadius: totalRadius - cumDonutBandWidth - donutBandWidth,\n                        outerRadius: totalRadius - cumDonutBandWidth,\n                        startAngle,\n                        endAngle\n                    }\n                })\n                cumDonutBandWidth += donutBandWidth + TRACK_GAP\n                if (i % wrap === wrap - 1) {\n                    cumDonutBandWidth = 0\n                    cumLength += length;\n                }\n            }\n        })\n    }\n\n    console.log('arcs', trackInfo);\n    g.append('g')\n        .attr('transform', `translate(${boundingBox.x + totalRadius}, ${boundingBox.y + totalRadius})`)\n        .selectAll('path')\n        .data(trackInfo)\n        .enter()\n        .append('path')\n        .attr('fill', d => trackStyle.background(d.track as Track))\n        .attr('stroke', d => trackStyle.stroke(d.track as Track))\n        .attr('stroke-width', d => trackStyle.strokeWidth(d.track as Track))\n        .attr('d', d => d3.arc()\n            .innerRadius(d.arc.innerRadius)\n            .outerRadius(d.arc.outerRadius)(d.arc)\n        )\n\n}","import { GeminiSpec, IsNotEmptyTrack } from \"../gemini.schema\"\nimport { TRACK_GAP, INNER_CIRCLE_RADIUS } from \"../visualizations/defaults\"\nimport * as d3 from \"d3\"\n\nexport interface BoundingBox {\n    x: number\n    y: number\n    width: number\n    height: number\n}\n\n/**\n * Naive approach to calculate the entire size of visualization.\n * @param gm \n */\nexport function calculateSize(gm: GeminiSpec) {\n    const size = { width: 0, height: 0 }\n    const wrap: number = gm.layout?.wrap ?? 999\n    if (gm.layout?.type === 'circular') {\n        // square and tightest bounding box enclousing circular tracks\n        size.height = INNER_CIRCLE_RADIUS * 2\n        size.height += d3.sum(\n            // Add the height of tracks in the first column.\n            // TODO: not considering different directions\n            gm.tracks.filter((t, i) => i % wrap === 0)\n                .map(track => IsNotEmptyTrack(track) ? track.height as number : 0)\n        )\n        size.width = size.height\n    }\n    else if (gm.layout?.direction === \"horizontal\") {\n        size.width = d3.sum(\n            // Add the width of tracks in the first row.\n            gm.tracks.filter((t, i) => i < wrap)\n                .map(track => IsNotEmptyTrack(track) ? track.width as number : 0)\n        )\n        size.height = d3.sum(\n            // Add the height of tracks in the first column.\n            gm.tracks.filter((t, i) => i % wrap === 0)\n                .map(track => IsNotEmptyTrack(track) ? track.height as number : 0)\n        ) as number\n        // Add gaps\n        size.width += d3.min([wrap - 1, gm.tracks.length - 1]) as number * TRACK_GAP\n        size.height += Math.floor(gm.tracks.length / wrap) * TRACK_GAP\n    } else {\n        size.width = d3.sum(\n            // Add the width of tracks in the first row.\n            gm.tracks.filter((t, i) => i % wrap === 0)\n                .map(track => IsNotEmptyTrack(track) ? track.width as number : 0)\n        )\n        size.height = d3.sum(\n            // Add the height of tracks in the first column.\n            gm.tracks.filter((t, i) => i < wrap)\n                .map(track => IsNotEmptyTrack(track) ? track.height as number : 0)\n        ) as number\n        // Add gaps\n        size.width += Math.floor(gm.tracks.length / wrap) * TRACK_GAP\n        size.height += d3.min([wrap - 1, gm.tracks.length - 1]) as number * TRACK_GAP\n    }\n    return size\n}","// @ts-ignore\nimport { GeminiTrack } from '../gemini-track/index'\n// @ts-ignore\nimport { HiGlassComponent } from 'higlass'\n// @ts-ignore\nimport { default as higlassRegister } from 'higlass-register'\nimport React, { useState, useEffect, useRef, useMemo } from 'react'\nimport * as d3 from 'd3'\nimport EditorPanel from './editor-panel'\nimport stringify from 'json-stringify-pretty-compact'\nimport SplitPane from 'react-split-pane'\nimport {\n  GeminiSpec,\n  Track,\n  IsDataDeep,\n  IsMarkDeep,\n  IsNotEmptyTrack,\n} from '../lib/gemini.schema'\nimport { debounce } from 'lodash'\nimport { demos } from './examples'\nimport { renderGlyphPreview } from '../lib/visualizations/glyph-preview'\nimport { replaceGlyphs } from '../lib/utils'\nimport { renderLayoutPreview } from '../lib/visualizations/layout-preview'\nimport { calculateSize } from '../lib/utils/bounding-box'\nimport { HiGlassTrack } from '../lib/visualizations/higlass'\nimport './editor.css'\n\nhiglassRegister({\n  name: 'GeminiTrack',\n  track: GeminiTrack,\n  config: GeminiTrack.config,\n})\n\nconst DEBUG_INIT_DEMO_INDEX = demos.length - 2\n\nfunction Editor() {\n\n  const glyphSvg = useRef<SVGSVGElement>(null)\n  const layoutSvg = useRef<SVGSVGElement>(null)\n  const [higlassTrackOptions, setHiGlassTrackOptions] = useState<HiGlassTrack[]>([\n    // Debug\n    // { viewConfig: testViewConfig, boundingBox: { x: 60, y: 60, width: 60, height: 500 } }\n  ])\n  const [demo, setDemo] = useState(demos[DEBUG_INIT_DEMO_INDEX])\n  const [editorMode, setEditorMode] = useState<'Full Glyph Definition' | 'Predefined Glyph'>('Full Glyph Definition')\n  const [gm, setGm] = useState(stringify(demos[DEBUG_INIT_DEMO_INDEX].spec as GeminiSpec))\n  const [glyphWidth, setGlyphWidth] = useState(demos[DEBUG_INIT_DEMO_INDEX].glyphWidth)\n  const [glyphHeight, setGlyphHeight] = useState(demos[DEBUG_INIT_DEMO_INDEX].glyphHeight)\n\n  useEffect(() => {\n    if (editorMode === 'Full Glyph Definition') {\n      setGm(stringify(replaceGlyphs(JSON.parse(stringify(demo.spec)) as GeminiSpec))\n      )\n    } else {\n      setGm(stringify(demo.spec as GeminiSpec))\n    }\n    setGlyphWidth(demo.glyphWidth)\n    setGlyphHeight(demo.glyphHeight)\n    setHiGlassTrackOptions([])\n  }, [demo, editorMode])\n\n  useEffect(() => {\n    let editedGm\n    try {\n      editedGm = replaceGlyphs(JSON.parse(gm))\n    } catch (e) {\n      console.warn('Cannnot parse the edited code.')\n    }\n    if (!editedGm) return\n\n    // Render layout preview\n    renderLayoutPreview(\n      layoutSvg.current as SVGSVGElement,\n      editedGm as GeminiSpec,\n      {\n        x: 60,\n        y: 60,\n        width: calculateSize(editedGm).width,\n        height: calculateSize(editedGm).height,\n      },\n      (higlassInfo: HiGlassTrack[]) => {\n        setHiGlassTrackOptions(higlassInfo)\n      }\n    )\n\n    // Render glyph preview\n    d3.select(glyphSvg.current).selectAll('*').remove()\n    const track = (editedGm as GeminiSpec)?.tracks?.find((d) =>\n      IsNotEmptyTrack(d) && IsMarkDeep(d.mark)\n        ? d.mark.type === 'compositeMark'\n        : false\n    )\n    if (!track) return\n\n    if (IsNotEmptyTrack(track) && IsDataDeep(track.data)) {\n      d3.csv(track.data.url).then((data) =>\n        renderGlyphPreview(\n          glyphSvg.current as SVGSVGElement,\n          { ...track, data } as Track,\n          glyphWidth,\n          glyphHeight\n        )\n      )\n    }\n  }, [gm, glyphWidth, glyphHeight])\n\n  const hglass = useMemo(() => {\n    return higlassTrackOptions.map((op) => (\n      <div\n        key={stringify(op.viewConfig)}\n        style={{\n          position: 'absolute',\n          display: 'block',\n          left: op.boundingBox.x,\n          top: op.boundingBox.y,\n          width: op.boundingBox.width,\n          height: op.boundingBox.height,\n        }}\n      >\n        <HiGlassComponent\n          options={{\n            bounded: true,\n            containerPaddingX: 0,\n            containerPaddingY: 0,\n            viewMarginTop: 0,\n            viewMarginBottom: 0,\n            viewMarginLeft: 0,\n            viewMarginRight: 0,\n            viewPaddingTop: 0,\n            viewPaddingBottom: 0,\n            viewPaddingLeft: 0,\n            viewPaddingRight: 0,\n            sizeMode: 'bounded',\n          }}\n          viewConfig={op.viewConfig}\n        />\n      </div>\n    ))\n  }, [higlassTrackOptions])\n\n  return (\n    <>\n      <div className='demo-navbar'>\n        🧬 Gemini <code>Editor</code>\n        <select\n          onChange={(e) => {\n            setDemo(demos.find((d) => d.name === e.target.value) as any)\n          }}\n          defaultValue={demo.name}\n        >\n          {demos.map((d) => (\n            <option key={d.name} value={d.name}>\n              {d.name}\n            </option>\n          ))}\n        </select>\n        <select\n          onChange={(e) => {\n            setEditorMode(e.target.value as any)\n          }}\n          defaultValue={'Full Glyph Definition'}\n        >\n          {['Full Glyph Definition', 'Predefined Glyph'].map((d) => (\n            <option key={d} value={d}>\n              {d}\n            </option>\n          ))}\n        </select>\n      </div>\n      <div className='editor'>\n        <SplitPane className='split-pane-root' split='vertical' defaultSize='35%' onChange={() => { }}>\n          <SplitPane split='horizontal' defaultSize='50%' onChange={() => { }}>\n            {/* Gemini Editor */}\n            <EditorPanel\n              code={gm}\n              readOnly={false}\n              onChange={debounce((code) => { setGm(code) }, 1000)}\n            />\n            {/* HiGlass View Config */}\n            <SplitPane split='vertical' defaultSize='100%' onChange={() => { }}>\n              <>\n                <div className='editor-header'><b>Compiled HiGlass ViewConfigs</b></div>\n                <EditorPanel\n                  code={stringify(higlassTrackOptions.map(d => d.viewConfig))}\n                  readOnly={true}\n                  onChange={() => { }}\n                />\n              </>\n              {/* \n                TODO: This is only for showing a scroll view for the higlass view config editor \n                Remove the below line and the nearest SplitPane after figuring out a better way \n                of showing the scroll view.\n              */}\n              <></>\n            </SplitPane>\n          </SplitPane>\n          {/* D3 Visualizations */}\n          <SplitPane split='horizontal' defaultSize='0%' onChange={() => { }}>\n            <div className='preview-container' hidden>\n              <b>Composite Mark Preview</b>\n              <div>\n                <svg ref={glyphSvg} />\n              </div>\n            </div>\n            <div className='preview-container'>\n              <b>Layout Preview</b>\n              <div style={{ position: 'relative' }}>\n                <svg ref={layoutSvg} />\n                {hglass}\n              </div>\n            </div>\n          </SplitPane>\n        </SplitPane>\n      </div>\n    </>\n  )\n}\nexport default Editor","import { GeminiSpec } from \"../gemini.schema\";\nimport * as d3 from 'd3';\nimport { renderBackground } from \"./guidelines\";\nimport { renderLayout } from \"./layout\";\nimport { BoundingBox } from \"../utils/bounding-box\";\nimport { HiGlassTrack } from \"./higlass\";\n\nexport function renderLayoutPreview(\n    svg: SVGSVGElement,\n    gm: GeminiSpec,\n    boundingBox: BoundingBox,\n    setHiGlassInfo: (higlassInfo: HiGlassTrack[]) => void\n) {\n    if (!svg || !gm) return;\n    d3.select(svg).selectAll('*').remove();\n\n    // styles\n    const PADDING_X = boundingBox.x, PADDING_Y = boundingBox.y;\n    const WIDTH = boundingBox.width + PADDING_X * 2;\n    const HEIGHT = boundingBox.height + PADDING_Y * 2;\n\n    // background and guidelines\n    renderBackground(svg, WIDTH, HEIGHT, PADDING_X, PADDING_Y, false);\n\n    const innerG = d3.select(svg).append(\"g\")\n        .attr(\"width\", boundingBox.width)\n        .attr(\"height\", boundingBox.height)\n\n    renderLayout(innerG, gm, setHiGlassInfo, boundingBox);\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Editor from './editor/editor';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Editor />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}